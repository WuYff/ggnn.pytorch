final enum class org.jsoup.parser.TokeniserState$52 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$52 this;
        java.lang.String l1;
        int l2;

        this := @this: org.jsoup.parser.TokeniserState$52;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(l1, l2, null);

        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.CharacterReader r;
        boolean $stack4;
        char c;
        org.jsoup.parser.Tokeniser t;
        org.jsoup.parser.TokeniserState$52 this;
        org.jsoup.parser.Token$Doctype $stack6, $stack8, $stack12;
        org.jsoup.parser.TokeniserState $stack7, $stack11, $stack15, $stack16;
        java.lang.StringBuilder $stack9, $stack13;

        this := @this: org.jsoup.parser.TokeniserState$52;

        t := @parameter0: org.jsoup.parser.Tokeniser;

        r := @parameter1: org.jsoup.parser.CharacterReader;

        $stack4 = virtualinvoke r.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();

        if $stack4 == 0 goto label1;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void createDoctypePending()>();

        $stack16 = <org.jsoup.parser.TokeniserState$52: org.jsoup.parser.TokeniserState DoctypeName>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($stack16);

        return;

     label1:
        c = virtualinvoke r.<org.jsoup.parser.CharacterReader: char consume()>();

        lookupswitch(c)
        {
            case 0: goto label3;
            case 9: goto label2;
            case 10: goto label2;
            case 12: goto label2;
            case 13: goto label2;
            case 32: goto label2;
            case 65535: goto label4;
            default: goto label5;
        };

     label2:
        goto label6;

     label3:
        virtualinvoke t.<org.jsoup.parser.Tokeniser: void error(org.jsoup.parser.TokeniserState)>(this);

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void createDoctypePending()>();

        $stack8 = t.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;

        $stack9 = $stack8.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name>;

        virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(65533);

        $stack11 = <org.jsoup.parser.TokeniserState$52: org.jsoup.parser.TokeniserState DoctypeName>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($stack11);

        goto label6;

     label4:
        virtualinvoke t.<org.jsoup.parser.Tokeniser: void eofError(org.jsoup.parser.TokeniserState)>(this);

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void createDoctypePending()>();

        $stack6 = t.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;

        $stack6.<org.jsoup.parser.Token$Doctype: boolean forceQuirks> = 1;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void emitDoctypePending()>();

        $stack7 = <org.jsoup.parser.TokeniserState$52: org.jsoup.parser.TokeniserState Data>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($stack7);

        goto label6;

     label5:
        virtualinvoke t.<org.jsoup.parser.Tokeniser: void createDoctypePending()>();

        $stack12 = t.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Doctype doctypePending>;

        $stack13 = $stack12.<org.jsoup.parser.Token$Doctype: java.lang.StringBuilder name>;

        virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c);

        $stack15 = <org.jsoup.parser.TokeniserState$52: org.jsoup.parser.TokeniserState DoctypeName>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($stack15);

     label6:
        return;
    }
}
