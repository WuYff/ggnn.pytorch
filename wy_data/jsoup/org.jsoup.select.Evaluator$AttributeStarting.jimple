public final class org.jsoup.select.Evaluator$AttributeStarting extends org.jsoup.select.Evaluator
{
    private java.lang.String keyPrefix;

    public void <init>(java.lang.String)
    {
        org.jsoup.select.Evaluator$AttributeStarting this;
        java.lang.String keyPrefix, $stack2;

        this := @this: org.jsoup.select.Evaluator$AttributeStarting;

        keyPrefix := @parameter0: java.lang.String;

        specialinvoke this.<org.jsoup.select.Evaluator: void <init>()>();

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(keyPrefix);

        $stack2 = staticinvoke <org.jsoup.internal.Normalizer: java.lang.String lowerCase(java.lang.String)>(keyPrefix);

        this.<org.jsoup.select.Evaluator$AttributeStarting: java.lang.String keyPrefix> = $stack2;

        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.nodes.Element element, root;
        org.jsoup.nodes.Attributes $stack6;
        java.util.List values;
        java.util.Iterator l4;
        boolean $stack9, $stack14;
        java.lang.Object $stack10;
        org.jsoup.nodes.Attribute attribute;
        java.lang.String $stack11, $stack12, $stack13;
        org.jsoup.select.Evaluator$AttributeStarting this;

        this := @this: org.jsoup.select.Evaluator$AttributeStarting;

        root := @parameter0: org.jsoup.nodes.Element;

        element := @parameter1: org.jsoup.nodes.Element;

        $stack6 = virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Attributes attributes()>();

        values = virtualinvoke $stack6.<org.jsoup.nodes.Attributes: java.util.List asList()>();

        l4 = interfaceinvoke values.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack10 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        attribute = (org.jsoup.nodes.Attribute) $stack10;

        $stack11 = virtualinvoke attribute.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $stack12 = staticinvoke <org.jsoup.internal.Normalizer: java.lang.String lowerCase(java.lang.String)>($stack11);

        $stack13 = this.<org.jsoup.select.Evaluator$AttributeStarting: java.lang.String keyPrefix>;

        $stack14 = virtualinvoke $stack12.<java.lang.String: boolean startsWith(java.lang.String)>($stack13);

        if $stack14 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $stack1;
        org.jsoup.select.Evaluator$AttributeStarting this;
        java.lang.String $stack2, $stack3;

        this := @this: org.jsoup.select.Evaluator$AttributeStarting;

        $stack1 = newarray (java.lang.Object)[1];

        $stack2 = this.<org.jsoup.select.Evaluator$AttributeStarting: java.lang.String keyPrefix>;

        $stack1[0] = $stack2;

        $stack3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[^%s]", $stack1);

        return $stack3;
    }
}
