public class org.jsoup.select.Collector extends java.lang.Object
{

    private void <init>()
    {
        org.jsoup.select.Collector this;

        this := @this: org.jsoup.select.Collector;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.jsoup.select.Elements collect(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Elements $stack3;
        org.jsoup.select.Collector$Accumulator $stack4;
        org.jsoup.nodes.Element root;
        org.jsoup.select.Evaluator eval;

        eval := @parameter0: org.jsoup.select.Evaluator;

        root := @parameter1: org.jsoup.nodes.Element;

        $stack3 = new org.jsoup.select.Elements;

        specialinvoke $stack3.<org.jsoup.select.Elements: void <init>()>();

        $stack4 = new org.jsoup.select.Collector$Accumulator;

        specialinvoke $stack4.<org.jsoup.select.Collector$Accumulator: void <init>(org.jsoup.nodes.Element,org.jsoup.select.Elements,org.jsoup.select.Evaluator)>(root, $stack3, eval);

        staticinvoke <org.jsoup.select.NodeTraversor: void traverse(org.jsoup.select.NodeVisitor,org.jsoup.nodes.Node)>($stack4, root);

        return $stack3;
    }

    public static org.jsoup.nodes.Element findFirst(org.jsoup.select.Evaluator, org.jsoup.nodes.Element)
    {
        org.jsoup.select.Collector$FirstFinder $stack3;
        org.jsoup.nodes.Element root, $stack5;
        org.jsoup.select.Evaluator eval;

        eval := @parameter0: org.jsoup.select.Evaluator;

        root := @parameter1: org.jsoup.nodes.Element;

        $stack3 = new org.jsoup.select.Collector$FirstFinder;

        specialinvoke $stack3.<org.jsoup.select.Collector$FirstFinder: void <init>(org.jsoup.nodes.Element,org.jsoup.select.Evaluator)>(root, eval);

        staticinvoke <org.jsoup.select.NodeTraversor: org.jsoup.select.NodeFilter$FilterResult filter(org.jsoup.select.NodeFilter,org.jsoup.nodes.Node)>($stack3, root);

        $stack5 = staticinvoke <org.jsoup.select.Collector$FirstFinder: org.jsoup.nodes.Element access$000(org.jsoup.select.Collector$FirstFinder)>($stack3);

        return $stack5;
    }
}
