public final class org.jsoup.select.Evaluator$IndexGreaterThan extends org.jsoup.select.Evaluator$IndexEvaluator
{

    public void <init>(int)
    {
        org.jsoup.select.Evaluator$IndexGreaterThan this;
        int index;

        this := @this: org.jsoup.select.Evaluator$IndexGreaterThan;

        index := @parameter0: int;

        specialinvoke this.<org.jsoup.select.Evaluator$IndexEvaluator: void <init>(int)>(index);

        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.nodes.Element element, root;
        int $stack3, $stack4;
        org.jsoup.select.Evaluator$IndexGreaterThan this;
        boolean $stack5;

        this := @this: org.jsoup.select.Evaluator$IndexGreaterThan;

        root := @parameter0: org.jsoup.nodes.Element;

        element := @parameter1: org.jsoup.nodes.Element;

        $stack3 = virtualinvoke element.<org.jsoup.nodes.Element: int elementSiblingIndex()>();

        $stack4 = this.<org.jsoup.select.Evaluator$IndexGreaterThan: int index>;

        if $stack3 <= $stack4 goto label1;

        $stack5 = 1;

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        return $stack5;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $stack1;
        org.jsoup.select.Evaluator$IndexGreaterThan this;
        int $stack2;
        java.lang.Integer $stack5;
        java.lang.String $stack6;

        this := @this: org.jsoup.select.Evaluator$IndexGreaterThan;

        $stack1 = newarray (java.lang.Object)[1];

        $stack2 = this.<org.jsoup.select.Evaluator$IndexGreaterThan: int index>;

        $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack2);

        $stack1[0] = $stack5;

        $stack6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":gt(%d)", $stack1);

        return $stack6;
    }
}
