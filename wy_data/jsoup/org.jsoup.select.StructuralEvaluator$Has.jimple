class org.jsoup.select.StructuralEvaluator$Has extends org.jsoup.select.StructuralEvaluator
{

    public void <init>(org.jsoup.select.Evaluator)
    {
        org.jsoup.select.StructuralEvaluator$Has this;
        org.jsoup.select.Evaluator evaluator;

        this := @this: org.jsoup.select.StructuralEvaluator$Has;

        evaluator := @parameter0: org.jsoup.select.Evaluator;

        specialinvoke this.<org.jsoup.select.StructuralEvaluator: void <init>()>();

        this.<org.jsoup.select.StructuralEvaluator$Has: org.jsoup.select.Evaluator evaluator> = evaluator;

        return;
    }

    public boolean matches(org.jsoup.nodes.Element, org.jsoup.nodes.Element)
    {
        org.jsoup.nodes.Element element, e, root;
        org.jsoup.select.Elements $stack5;
        java.util.Iterator l3;
        boolean $stack7, $stack11;
        java.lang.Object $stack8;
        org.jsoup.select.StructuralEvaluator$Has this;
        org.jsoup.select.Evaluator $stack10;

        this := @this: org.jsoup.select.StructuralEvaluator$Has;

        root := @parameter0: org.jsoup.nodes.Element;

        element := @parameter1: org.jsoup.nodes.Element;

        $stack5 = virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.select.Elements getAllElements()>();

        l3 = virtualinvoke $stack5.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        e = (org.jsoup.nodes.Element) $stack8;

        if e == element goto label2;

        $stack10 = this.<org.jsoup.select.StructuralEvaluator$Has: org.jsoup.select.Evaluator evaluator>;

        $stack11 = virtualinvoke $stack10.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>(element, e);

        if $stack11 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $stack1;
        org.jsoup.select.StructuralEvaluator$Has this;
        org.jsoup.select.Evaluator $stack2;
        java.lang.String $stack3;

        this := @this: org.jsoup.select.StructuralEvaluator$Has;

        $stack1 = newarray (java.lang.Object)[1];

        $stack2 = this.<org.jsoup.select.StructuralEvaluator$Has: org.jsoup.select.Evaluator evaluator>;

        $stack1[0] = $stack2;

        $stack3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(":has(%s)", $stack1);

        return $stack3;
    }
}
