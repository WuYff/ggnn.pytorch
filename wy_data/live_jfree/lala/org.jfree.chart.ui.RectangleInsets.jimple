public class org.jfree.chart.ui.RectangleInsets extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final org.jfree.chart.ui.RectangleInsets ZERO_INSETS;
    private org.jfree.chart.util.UnitType unitType;
    private double top;
    private double left;
    private double bottom;
    private double right;

    public void <init>()
    {
        org.jfree.chart.ui.RectangleInsets this;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        specialinvoke this.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(1.0, 1.0, 1.0, 1.0);

        return;
    }

    public void <init>(double, double, double, double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        double top, left, bottom, right;
        org.jfree.chart.util.UnitType $stack9;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        top := @parameter0: double;

        left := @parameter1: double;

        bottom := @parameter2: double;

        right := @parameter3: double;

        $stack9 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType ABSOLUTE>;

        specialinvoke this.<org.jfree.chart.ui.RectangleInsets: void <init>(org.jfree.chart.util.UnitType,double,double,double,double)>($stack9, top, left, bottom, right);

        return;
    }

    public void <init>(org.jfree.chart.util.UnitType, double, double, double, double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType unitType;
        double top, bottom, left, right;
        java.lang.IllegalArgumentException $stack10;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        unitType := @parameter0: org.jfree.chart.util.UnitType;

        top := @parameter1: double;

        left := @parameter2: double;

        bottom := @parameter3: double;

        right := @parameter4: double;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if unitType != null goto label1;

        $stack10 = new java.lang.IllegalArgumentException;

        specialinvoke $stack10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'unitType\' argument.");

        throw $stack10;

     label1:
        this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType> = unitType;

        this.<org.jfree.chart.ui.RectangleInsets: double top> = top;

        this.<org.jfree.chart.ui.RectangleInsets: double bottom> = bottom;

        this.<org.jfree.chart.ui.RectangleInsets: double left> = left;

        this.<org.jfree.chart.ui.RectangleInsets: double right> = right;

        return;
    }

    public org.jfree.chart.util.UnitType getUnitType()
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack1;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        $stack1 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        return $stack1;
    }

    public double getTop()
    {
        org.jfree.chart.ui.RectangleInsets this;
        double $stack1;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        $stack1 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        return $stack1;
    }

    public double getBottom()
    {
        org.jfree.chart.ui.RectangleInsets this;
        double $stack1;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        $stack1 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        return $stack1;
    }

    public double getLeft()
    {
        org.jfree.chart.ui.RectangleInsets this;
        double $stack1;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        $stack1 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        return $stack1;
    }

    public double getRight()
    {
        org.jfree.chart.ui.RectangleInsets this;
        double $stack1;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        $stack1 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        return $stack1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.ui.RectangleInsets this, that;
        boolean $stack3;
        org.jfree.chart.util.UnitType $stack4, $stack5;
        double $stack6, $stack7, $stack9, $stack10, $stack12, $stack13, $stack15, $stack16;
        byte $stack8, $stack11, $stack14, $stack17;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.ui.RectangleInsets;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.ui.RectangleInsets) obj;

        $stack5 = that.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack4 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack6 = that.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack8 = $stack7 cmpl $stack6;

        if $stack8 == 0 goto label4;

        return 0;

     label4:
        $stack10 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack9 = that.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack11 = $stack10 cmpl $stack9;

        if $stack11 == 0 goto label5;

        return 0;

     label5:
        $stack13 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack12 = that.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack14 = $stack13 cmpl $stack12;

        if $stack14 == 0 goto label6;

        return 0;

     label6:
        $stack16 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack15 = that.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack17 = $stack16 cmpl $stack15;

        if $stack17 == 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack4, $stack68;
        double $stack5, $stack11, $stack17, $stack23, $stack29, $stack38, $stack48, $stack58;
        byte $stack6, $stack12, $stack18, $stack24;
        long $stack7, $stack8, $stack13, $stack14, $stack19, $stack20, $stack25, $stack26, $stack59, $stack49, $stack39, $stack30;
        int $stack9, $stack10, $stack15, $stack16, $stack21, $stack22, $stack27, $stack28, $stack69, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        $stack4 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        if $stack4 == null goto label01;

        $stack68 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack69 = virtualinvoke $stack68.<org.jfree.chart.util.UnitType: int hashCode()>();

        goto label02;

     label01:
        $stack69 = 0;

     label02:
        result = $stack69;

        $stack5 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack6 = $stack5 cmpl 0.0;

        if $stack6 == 0 goto label03;

        $stack58 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack59 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack58);

        goto label04;

     label03:
        $stack59 = 0L;

     label04:
        $stack10 = 29 * result;

        $stack7 = $stack59 >>> 32;

        $stack8 = $stack59 ^ $stack7;

        $stack9 = (int) $stack8;

        result = $stack10 + $stack9;

        $stack11 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack12 = $stack11 cmpl 0.0;

        if $stack12 == 0 goto label05;

        $stack48 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack49 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack48);

        goto label06;

     label05:
        $stack49 = 0L;

     label06:
        $stack16 = 29 * result;

        $stack13 = $stack49 >>> 32;

        $stack14 = $stack49 ^ $stack13;

        $stack15 = (int) $stack14;

        result = $stack16 + $stack15;

        $stack17 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack18 = $stack17 cmpl 0.0;

        if $stack18 == 0 goto label07;

        $stack38 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack39 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack38);

        goto label08;

     label07:
        $stack39 = 0L;

     label08:
        $stack22 = 29 * result;

        $stack19 = $stack39 >>> 32;

        $stack20 = $stack39 ^ $stack19;

        $stack21 = (int) $stack20;

        result = $stack22 + $stack21;

        $stack23 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack24 = $stack23 cmpl 0.0;

        if $stack24 == 0 goto label09;

        $stack29 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack30 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack29);

        goto label10;

     label09:
        $stack30 = 0L;

     label10:
        $stack28 = 29 * result;

        $stack25 = $stack30 >>> 32;

        $stack26 = $stack30 ^ $stack25;

        $stack27 = (int) $stack26;

        result = $stack28 + $stack27;

        return result;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack1, $stack2, $stack4, $stack5, $stack7, $stack8, $stack10, $stack11, $stack13, $stack14;
        org.jfree.chart.ui.RectangleInsets this;
        double $stack3, $stack6, $stack9, $stack12;
        java.lang.String $stack15;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        $stack1 = new java.lang.StringBuilder;

        specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RectangleInsets[t=");

        $stack3 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",l=");

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",b=");

        $stack9 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",r=");

        $stack12 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack15;
    }

    public java.awt.geom.Rectangle2D createAdjustedRectangle(java.awt.geom.Rectangle2D, org.jfree.chart.ui.LengthAdjustmentType, org.jfree.chart.ui.LengthAdjustmentType)
    {
        java.awt.geom.Rectangle2D base;
        org.jfree.chart.ui.LengthAdjustmentType horizontal, $stack18, $stack19, vertical, $stack21, $stack20;
        org.jfree.chart.ui.RectangleInsets this;
        double $stack24, $stack25, $stack31, $stack32, $stack34, $stack35, $stack38, $stack39, x, y, w, h, leftOutset;
        java.lang.IllegalArgumentException $stack40;
        java.awt.geom.Rectangle2D$Double $stack22;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        base := @parameter0: java.awt.geom.Rectangle2D;

        horizontal := @parameter1: org.jfree.chart.ui.LengthAdjustmentType;

        vertical := @parameter2: org.jfree.chart.ui.LengthAdjustmentType;

        if base != null goto label1;

        $stack40 = new java.lang.IllegalArgumentException;

        specialinvoke $stack40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'base\' argument.");

        throw $stack40;

     label1:
        x = virtualinvoke base.<java.awt.geom.Rectangle2D: double getX()>();

        y = virtualinvoke base.<java.awt.geom.Rectangle2D: double getY()>();

        w = virtualinvoke base.<java.awt.geom.Rectangle2D: double getWidth()>();

        h = virtualinvoke base.<java.awt.geom.Rectangle2D: double getHeight()>();

        $stack18 = <org.jfree.chart.ui.LengthAdjustmentType: org.jfree.chart.ui.LengthAdjustmentType EXPAND>;

        if horizontal != $stack18 goto label2;

        leftOutset = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateLeftOutset(double)>(w);

        x = x - leftOutset;

        $stack38 = w + leftOutset;

        $stack39 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateRightOutset(double)>(w);

        w = $stack38 + $stack39;

        goto label3;

     label2:
        $stack19 = <org.jfree.chart.ui.LengthAdjustmentType: org.jfree.chart.ui.LengthAdjustmentType CONTRACT>;

        if horizontal != $stack19 goto label3;

        leftOutset = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateLeftInset(double)>(w);

        x = x + leftOutset;

        $stack34 = w - leftOutset;

        $stack35 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateRightInset(double)>(w);

        w = $stack34 - $stack35;

     label3:
        $stack20 = <org.jfree.chart.ui.LengthAdjustmentType: org.jfree.chart.ui.LengthAdjustmentType EXPAND>;

        if vertical != $stack20 goto label4;

        leftOutset = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateTopOutset(double)>(h);

        y = y - leftOutset;

        $stack31 = h + leftOutset;

        $stack32 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateBottomOutset(double)>(h);

        h = $stack31 + $stack32;

        goto label5;

     label4:
        $stack21 = <org.jfree.chart.ui.LengthAdjustmentType: org.jfree.chart.ui.LengthAdjustmentType CONTRACT>;

        if vertical != $stack21 goto label5;

        leftOutset = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateTopInset(double)>(h);

        y = y + leftOutset;

        $stack24 = h - leftOutset;

        $stack25 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateBottomInset(double)>(h);

        h = $stack24 - $stack25;

     label5:
        $stack22 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack22.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(x, y, w, h);

        return $stack22;
    }

    public java.awt.geom.Rectangle2D createInsetRectangle(java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.ui.RectangleInsets this;
        java.awt.geom.Rectangle2D base, $stack2;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        base := @parameter0: java.awt.geom.Rectangle2D;

        $stack2 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: java.awt.geom.Rectangle2D createInsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)>(base, 1, 1);

        return $stack2;
    }

    public java.awt.geom.Rectangle2D createInsetRectangle(java.awt.geom.Rectangle2D, boolean, boolean)
    {
        java.awt.geom.Rectangle2D base;
        boolean vertical, horizontal;
        java.awt.geom.Rectangle2D$Double $stack12;
        double $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack25, $stack37, $stack39, topMargin, bottomMargin, leftMargin, rightMargin;
        org.jfree.chart.ui.RectangleInsets this;
        java.lang.IllegalArgumentException $stack44;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        base := @parameter0: java.awt.geom.Rectangle2D;

        horizontal := @parameter1: boolean;

        vertical := @parameter2: boolean;

        if base != null goto label1;

        $stack44 = new java.lang.IllegalArgumentException;

        specialinvoke $stack44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'base\' argument.");

        throw $stack44;

     label1:
        topMargin = 0.0;

        bottomMargin = 0.0;

        if vertical == 0 goto label2;

        $stack37 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getHeight()>();

        topMargin = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateTopInset(double)>($stack37);

        $stack39 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getHeight()>();

        bottomMargin = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateBottomInset(double)>($stack39);

     label2:
        leftMargin = 0.0;

        rightMargin = 0.0;

        if horizontal == 0 goto label3;

        $stack23 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getWidth()>();

        leftMargin = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateLeftInset(double)>($stack23);

        $stack25 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getWidth()>();

        rightMargin = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateRightInset(double)>($stack25);

     label3:
        $stack12 = new java.awt.geom.Rectangle2D$Double;

        $stack13 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getX()>();

        $stack14 = $stack13 + leftMargin;

        $stack15 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getY()>();

        $stack16 = $stack15 + topMargin;

        $stack17 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack18 = $stack17 - leftMargin;

        $stack19 = $stack18 - rightMargin;

        $stack20 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getHeight()>();

        $stack21 = $stack20 - topMargin;

        $stack22 = $stack21 - bottomMargin;

        specialinvoke $stack12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack14, $stack16, $stack19, $stack22);

        return $stack12;
    }

    public java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.ui.RectangleInsets this;
        java.awt.geom.Rectangle2D base, $stack2;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        base := @parameter0: java.awt.geom.Rectangle2D;

        $stack2 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D,boolean,boolean)>(base, 1, 1);

        return $stack2;
    }

    public java.awt.geom.Rectangle2D createOutsetRectangle(java.awt.geom.Rectangle2D, boolean, boolean)
    {
        java.awt.geom.Rectangle2D base;
        boolean vertical, horizontal;
        java.awt.geom.Rectangle2D$Double $stack12;
        double $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack25, $stack37, $stack39, topMargin, bottomMargin, leftMargin, rightMargin;
        org.jfree.chart.ui.RectangleInsets this;
        java.lang.IllegalArgumentException $stack44;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        base := @parameter0: java.awt.geom.Rectangle2D;

        horizontal := @parameter1: boolean;

        vertical := @parameter2: boolean;

        if base != null goto label1;

        $stack44 = new java.lang.IllegalArgumentException;

        specialinvoke $stack44.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'base\' argument.");

        throw $stack44;

     label1:
        topMargin = 0.0;

        bottomMargin = 0.0;

        if vertical == 0 goto label2;

        $stack37 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getHeight()>();

        topMargin = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateTopOutset(double)>($stack37);

        $stack39 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getHeight()>();

        bottomMargin = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateBottomOutset(double)>($stack39);

     label2:
        leftMargin = 0.0;

        rightMargin = 0.0;

        if horizontal == 0 goto label3;

        $stack23 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getWidth()>();

        leftMargin = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateLeftOutset(double)>($stack23);

        $stack25 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getWidth()>();

        rightMargin = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateRightOutset(double)>($stack25);

     label3:
        $stack12 = new java.awt.geom.Rectangle2D$Double;

        $stack13 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getX()>();

        $stack14 = $stack13 - leftMargin;

        $stack15 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getY()>();

        $stack16 = $stack15 - topMargin;

        $stack17 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack18 = $stack17 + leftMargin;

        $stack19 = $stack18 + rightMargin;

        $stack20 = virtualinvoke base.<java.awt.geom.Rectangle2D: double getHeight()>();

        $stack21 = $stack20 + topMargin;

        $stack22 = $stack21 + bottomMargin;

        specialinvoke $stack12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack14, $stack16, $stack19, $stack22);

        return $stack12;
    }

    public double calculateTopInset(double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack5, $stack6;
        double height, $stack7, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        height := @parameter0: double;

        result = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack5 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType RELATIVE>;

        if $stack6 != $stack5 goto label1;

        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        result = $stack7 * height;

     label1:
        return result;
    }

    public double calculateTopOutset(double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack5, $stack6;
        double height, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        height := @parameter0: double;

        result = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack5 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType RELATIVE>;

        if $stack6 != $stack5 goto label1;

        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack9 = 1.0 - $stack7;

        $stack8 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack10 = $stack9 - $stack8;

        $stack12 = height / $stack10;

        $stack11 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        result = $stack12 * $stack11;

     label1:
        return result;
    }

    public double calculateBottomInset(double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack5, $stack6;
        double height, $stack7, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        height := @parameter0: double;

        result = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack5 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType RELATIVE>;

        if $stack6 != $stack5 goto label1;

        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        result = $stack7 * height;

     label1:
        return result;
    }

    public double calculateBottomOutset(double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack5, $stack6;
        double height, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        height := @parameter0: double;

        result = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack5 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType RELATIVE>;

        if $stack6 != $stack5 goto label1;

        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double top>;

        $stack9 = 1.0 - $stack7;

        $stack8 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        $stack10 = $stack9 - $stack8;

        $stack12 = height / $stack10;

        $stack11 = this.<org.jfree.chart.ui.RectangleInsets: double bottom>;

        result = $stack12 * $stack11;

     label1:
        return result;
    }

    public double calculateLeftInset(double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack5, $stack6;
        double width, $stack7, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        width := @parameter0: double;

        result = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack5 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType RELATIVE>;

        if $stack6 != $stack5 goto label1;

        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        result = $stack7 * width;

     label1:
        return result;
    }

    public double calculateLeftOutset(double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack5, $stack6;
        double width, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        width := @parameter0: double;

        result = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack5 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType RELATIVE>;

        if $stack6 != $stack5 goto label1;

        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack9 = 1.0 - $stack7;

        $stack8 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack10 = $stack9 - $stack8;

        $stack12 = width / $stack10;

        $stack11 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        result = $stack12 * $stack11;

     label1:
        return result;
    }

    public double calculateRightInset(double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack5, $stack6;
        double width, $stack7, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        width := @parameter0: double;

        result = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack5 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType RELATIVE>;

        if $stack6 != $stack5 goto label1;

        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        result = $stack7 * width;

     label1:
        return result;
    }

    public double calculateRightOutset(double)
    {
        org.jfree.chart.ui.RectangleInsets this;
        org.jfree.chart.util.UnitType $stack5, $stack6;
        double width, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, result;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        width := @parameter0: double;

        result = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack6 = this.<org.jfree.chart.ui.RectangleInsets: org.jfree.chart.util.UnitType unitType>;

        $stack5 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType RELATIVE>;

        if $stack6 != $stack5 goto label1;

        $stack7 = this.<org.jfree.chart.ui.RectangleInsets: double left>;

        $stack9 = 1.0 - $stack7;

        $stack8 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        $stack10 = $stack9 - $stack8;

        $stack12 = width / $stack10;

        $stack11 = this.<org.jfree.chart.ui.RectangleInsets: double right>;

        result = $stack12 * $stack11;

     label1:
        return result;
    }

    public double trimWidth(double)
    {
        double width, $stack3, $stack4, $stack5, $stack6;
        org.jfree.chart.ui.RectangleInsets this;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        width := @parameter0: double;

        $stack3 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateLeftInset(double)>(width);

        $stack4 = width - $stack3;

        $stack5 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateRightInset(double)>(width);

        $stack6 = $stack4 - $stack5;

        return $stack6;
    }

    public double extendWidth(double)
    {
        double width, $stack3, $stack4, $stack5, $stack6;
        org.jfree.chart.ui.RectangleInsets this;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        width := @parameter0: double;

        $stack3 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateLeftOutset(double)>(width);

        $stack4 = width + $stack3;

        $stack5 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateRightOutset(double)>(width);

        $stack6 = $stack4 + $stack5;

        return $stack6;
    }

    public double trimHeight(double)
    {
        double height, $stack3, $stack4, $stack5, $stack6;
        org.jfree.chart.ui.RectangleInsets this;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        height := @parameter0: double;

        $stack3 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateTopInset(double)>(height);

        $stack4 = height - $stack3;

        $stack5 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateBottomInset(double)>(height);

        $stack6 = $stack4 - $stack5;

        return $stack6;
    }

    public double extendHeight(double)
    {
        double height, $stack3, $stack4, $stack5, $stack6;
        org.jfree.chart.ui.RectangleInsets this;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        height := @parameter0: double;

        $stack3 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateTopOutset(double)>(height);

        $stack4 = height + $stack3;

        $stack5 = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateBottomOutset(double)>(height);

        $stack6 = $stack4 + $stack5;

        return $stack6;
    }

    public void trim(java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D area;
        double w, h, l, r, t, b, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27;
        org.jfree.chart.ui.RectangleInsets this;

        this := @this: org.jfree.chart.ui.RectangleInsets;

        area := @parameter0: java.awt.geom.Rectangle2D;

        w = virtualinvoke area.<java.awt.geom.Rectangle2D: double getWidth()>();

        h = virtualinvoke area.<java.awt.geom.Rectangle2D: double getHeight()>();

        l = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateLeftInset(double)>(w);

        r = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateRightInset(double)>(w);

        t = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateTopInset(double)>(h);

        b = virtualinvoke this.<org.jfree.chart.ui.RectangleInsets: double calculateBottomInset(double)>(h);

        $stack20 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getX()>();

        $stack21 = $stack20 + l;

        $stack22 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getY()>();

        $stack27 = $stack22 + t;

        $stack23 = w - l;

        $stack26 = $stack23 - r;

        $stack24 = h - t;

        $stack25 = $stack24 - b;

        virtualinvoke area.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($stack21, $stack27, $stack26, $stack25);

        return;
    }

    static void <clinit>()
    {
        org.jfree.chart.ui.RectangleInsets $stack0;
        org.jfree.chart.util.UnitType $stack1;

        <org.jfree.chart.ui.RectangleInsets: long serialVersionUID> = 1902273207559319996L;

        $stack0 = new org.jfree.chart.ui.RectangleInsets;

        $stack1 = <org.jfree.chart.util.UnitType: org.jfree.chart.util.UnitType ABSOLUTE>;

        specialinvoke $stack0.<org.jfree.chart.ui.RectangleInsets: void <init>(org.jfree.chart.util.UnitType,double,double,double,double)>($stack1, 0.0, 0.0, 0.0, 0.0);

        <org.jfree.chart.ui.RectangleInsets: org.jfree.chart.ui.RectangleInsets ZERO_INSETS> = $stack0;

        return;
    }
}
