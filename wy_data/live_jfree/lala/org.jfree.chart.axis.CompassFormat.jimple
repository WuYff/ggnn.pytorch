public class org.jfree.chart.axis.CompassFormat extends java.text.NumberFormat
{
    public final java.lang.String[] directions;

    public void <init>()
    {
        org.jfree.chart.axis.CompassFormat this;

        this := @this: org.jfree.chart.axis.CompassFormat;

        specialinvoke this.<org.jfree.chart.axis.CompassFormat: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("N", "E", "S", "W");

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.jfree.chart.axis.CompassFormat this;
        java.lang.String[] $stack5;
        java.lang.String n, e, $stack11, $stack16, $stack22, s, $stack28, $stack33, $stack39, w, $stack45, $stack50, $stack56, $stack62, $stack67, $stack73;
        java.lang.StringBuilder $stack6, $stack8, $stack9, $stack10, $stack12, $stack14, $stack15, $stack17, $stack19, $stack20, $stack21, $stack23, $stack25, $stack26, $stack27, $stack29, $stack31, $stack32, $stack34, $stack36, $stack37, $stack38, $stack40, $stack42, $stack43, $stack44, $stack46, $stack48, $stack49, $stack51, $stack53, $stack54, $stack55, $stack57, $stack59, $stack60, $stack61, $stack63, $stack65, $stack66, $stack68, $stack70, $stack71, $stack72;

        this := @this: org.jfree.chart.axis.CompassFormat;

        n := @parameter0: java.lang.String;

        e := @parameter1: java.lang.String;

        s := @parameter2: java.lang.String;

        w := @parameter3: java.lang.String;

        $stack5 = newarray (java.lang.String)[16];

        $stack5[0] = n;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(n);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(n);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[1] = $stack11;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(n);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[2] = $stack16;

        $stack17 = new java.lang.StringBuilder;

        specialinvoke $stack17.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(n);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[3] = $stack22;

        $stack5[4] = e;

        $stack23 = new java.lang.StringBuilder;

        specialinvoke $stack23.<java.lang.StringBuilder: void <init>()>();

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e);

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[5] = $stack28;

        $stack29 = new java.lang.StringBuilder;

        specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>();

        $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[6] = $stack33;

        $stack34 = new java.lang.StringBuilder;

        specialinvoke $stack34.<java.lang.StringBuilder: void <init>()>();

        $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(e);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[7] = $stack39;

        $stack5[8] = s;

        $stack40 = new java.lang.StringBuilder;

        specialinvoke $stack40.<java.lang.StringBuilder: void <init>()>();

        $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(w);

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[9] = $stack45;

        $stack46 = new java.lang.StringBuilder;

        specialinvoke $stack46.<java.lang.StringBuilder: void <init>()>();

        $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(w);

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[10] = $stack50;

        $stack51 = new java.lang.StringBuilder;

        specialinvoke $stack51.<java.lang.StringBuilder: void <init>()>();

        $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(w);

        $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(w);

        $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[11] = $stack56;

        $stack5[12] = w;

        $stack57 = new java.lang.StringBuilder;

        specialinvoke $stack57.<java.lang.StringBuilder: void <init>()>();

        $stack59 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(w);

        $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(n);

        $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(w);

        $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[13] = $stack62;

        $stack63 = new java.lang.StringBuilder;

        specialinvoke $stack63.<java.lang.StringBuilder: void <init>()>();

        $stack65 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(n);

        $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(w);

        $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[14] = $stack67;

        $stack68 = new java.lang.StringBuilder;

        specialinvoke $stack68.<java.lang.StringBuilder: void <init>()>();

        $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(n);

        $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(n);

        $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(w);

        $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack5[15] = $stack73;

        specialinvoke this.<org.jfree.chart.axis.CompassFormat: void <init>(java.lang.String[])>($stack5);

        return;
    }

    public void <init>(java.lang.String[])
    {
        org.jfree.chart.axis.CompassFormat this;
        java.lang.String[] directions;
        int $stack2;
        java.lang.IllegalArgumentException $stack3;

        this := @this: org.jfree.chart.axis.CompassFormat;

        directions := @parameter0: java.lang.String[];

        specialinvoke this.<java.text.NumberFormat: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(directions, "directions");

        $stack2 = lengthof directions;

        if $stack2 == 16 goto label1;

        $stack3 = new java.lang.IllegalArgumentException;

        specialinvoke $stack3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'directions\' array must contain exactly 16 elements");

        throw $stack3;

     label1:
        this.<org.jfree.chart.axis.CompassFormat: java.lang.String[] directions> = directions;

        return;
    }

    public java.lang.String getDirectionCode(double)
    {
        byte $stack4;
        double $stack5, $stack6, direction, direction#2;
        int $stack7, $stack8, index;
        org.jfree.chart.axis.CompassFormat this;
        java.lang.String[] $stack9;
        java.lang.String $stack10;

        this := @this: org.jfree.chart.axis.CompassFormat;

        direction := @parameter0: double;

        direction#2 = direction % 360.0;

        $stack4 = direction#2 cmpg 0.0;

        if $stack4 >= 0 goto label1;

        direction#2 = direction#2 + 360.0;

     label1:
        $stack5 = direction#2 / 11.25;

        $stack6 = staticinvoke <java.lang.Math: double floor(double)>($stack5);

        $stack7 = (int) $stack6;

        $stack8 = $stack7 + 1;

        index = $stack8 / 2;

        $stack9 = this.<org.jfree.chart.axis.CompassFormat: java.lang.String[] directions>;

        $stack10 = $stack9[index];

        return $stack10;
    }

    public java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.lang.StringBuffer toAppendTo, $stack6;
        org.jfree.chart.axis.CompassFormat this;
        double number;
        java.lang.String $stack5;
        java.text.FieldPosition pos;

        this := @this: org.jfree.chart.axis.CompassFormat;

        number := @parameter0: double;

        toAppendTo := @parameter1: java.lang.StringBuffer;

        pos := @parameter2: java.text.FieldPosition;

        $stack5 = virtualinvoke this.<org.jfree.chart.axis.CompassFormat: java.lang.String getDirectionCode(double)>(number);

        $stack6 = virtualinvoke toAppendTo.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack5);

        return $stack6;
    }

    public java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.FieldPosition)
    {
        java.lang.StringBuffer toAppendTo, $stack7;
        org.jfree.chart.axis.CompassFormat this;
        long number;
        double $stack5;
        java.lang.String $stack6;
        java.text.FieldPosition pos;

        this := @this: org.jfree.chart.axis.CompassFormat;

        number := @parameter0: long;

        toAppendTo := @parameter1: java.lang.StringBuffer;

        pos := @parameter2: java.text.FieldPosition;

        $stack5 = (double) number;

        $stack6 = virtualinvoke this.<org.jfree.chart.axis.CompassFormat: java.lang.String getDirectionCode(double)>($stack5);

        $stack7 = virtualinvoke toAppendTo.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack6);

        return $stack7;
    }

    public java.lang.Number parse(java.lang.String, java.text.ParsePosition)
    {
        org.jfree.chart.axis.CompassFormat this;
        java.lang.String source;
        java.text.ParsePosition parsePosition;

        this := @this: org.jfree.chart.axis.CompassFormat;

        source := @parameter0: java.lang.String;

        parsePosition := @parameter1: java.text.ParsePosition;

        return null;
    }
}
