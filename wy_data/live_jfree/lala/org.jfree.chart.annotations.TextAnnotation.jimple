public class org.jfree.chart.annotations.TextAnnotation extends org.jfree.chart.annotations.AbstractAnnotation implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.awt.Font DEFAULT_FONT;
    public static final java.awt.Paint DEFAULT_PAINT;
    public static final org.jfree.chart.ui.TextAnchor DEFAULT_TEXT_ANCHOR;
    public static final org.jfree.chart.ui.TextAnchor DEFAULT_ROTATION_ANCHOR;
    public static final double DEFAULT_ROTATION_ANGLE;
    private java.lang.String text;
    private java.awt.Font font;
    private transient java.awt.Paint paint;
    private org.jfree.chart.ui.TextAnchor textAnchor;
    private org.jfree.chart.ui.TextAnchor rotationAnchor;
    private double rotationAngle;

    protected void <init>(java.lang.String)
    {
        org.jfree.chart.annotations.TextAnnotation this;
        java.lang.String text;
        java.awt.Font $stack2;
        java.awt.Paint $stack3;
        org.jfree.chart.ui.TextAnchor $stack4, $stack5;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        text := @parameter0: java.lang.String;

        specialinvoke this.<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(text, "text");

        this.<org.jfree.chart.annotations.TextAnnotation: java.lang.String text> = text;

        $stack2 = <org.jfree.chart.annotations.TextAnnotation: java.awt.Font DEFAULT_FONT>;

        this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Font font> = $stack2;

        $stack3 = <org.jfree.chart.annotations.TextAnnotation: java.awt.Paint DEFAULT_PAINT>;

        this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint paint> = $stack3;

        $stack4 = <org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor DEFAULT_TEXT_ANCHOR>;

        this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor textAnchor> = $stack4;

        $stack5 = <org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor DEFAULT_ROTATION_ANCHOR>;

        this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor rotationAnchor> = $stack5;

        this.<org.jfree.chart.annotations.TextAnnotation: double rotationAngle> = 0.0;

        return;
    }

    public java.lang.String getText()
    {
        org.jfree.chart.annotations.TextAnnotation this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.TextAnnotation: java.lang.String text>;

        return $stack1;
    }

    public void setText(java.lang.String)
    {
        java.lang.String text;
        org.jfree.chart.annotations.TextAnnotation this;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        text := @parameter0: java.lang.String;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(text, "text");

        this.<org.jfree.chart.annotations.TextAnnotation: java.lang.String text> = text;

        virtualinvoke this.<org.jfree.chart.annotations.TextAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public java.awt.Font getFont()
    {
        org.jfree.chart.annotations.TextAnnotation this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Font font>;

        return $stack1;
    }

    public void setFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.annotations.TextAnnotation this;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Font font> = font;

        virtualinvoke this.<org.jfree.chart.annotations.TextAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.annotations.TextAnnotation this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint paint>;

        return $stack1;
    }

    public void setPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.annotations.TextAnnotation this;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint paint> = paint;

        virtualinvoke this.<org.jfree.chart.annotations.TextAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public org.jfree.chart.ui.TextAnchor getTextAnchor()
    {
        org.jfree.chart.annotations.TextAnnotation this;
        org.jfree.chart.ui.TextAnchor $stack1;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor textAnchor>;

        return $stack1;
    }

    public void setTextAnchor(org.jfree.chart.ui.TextAnchor)
    {
        org.jfree.chart.ui.TextAnchor anchor;
        org.jfree.chart.annotations.TextAnnotation this;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        anchor := @parameter0: org.jfree.chart.ui.TextAnchor;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(anchor, "anchor");

        this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor textAnchor> = anchor;

        virtualinvoke this.<org.jfree.chart.annotations.TextAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public org.jfree.chart.ui.TextAnchor getRotationAnchor()
    {
        org.jfree.chart.annotations.TextAnnotation this;
        org.jfree.chart.ui.TextAnchor $stack1;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor rotationAnchor>;

        return $stack1;
    }

    public void setRotationAnchor(org.jfree.chart.ui.TextAnchor)
    {
        org.jfree.chart.ui.TextAnchor anchor;
        org.jfree.chart.annotations.TextAnnotation this;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        anchor := @parameter0: org.jfree.chart.ui.TextAnchor;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(anchor, "anchor");

        this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor rotationAnchor> = anchor;

        virtualinvoke this.<org.jfree.chart.annotations.TextAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public double getRotationAngle()
    {
        org.jfree.chart.annotations.TextAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.TextAnnotation: double rotationAngle>;

        return $stack1;
    }

    public void setRotationAngle(double)
    {
        org.jfree.chart.annotations.TextAnnotation this;
        double angle;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        angle := @parameter0: double;

        this.<org.jfree.chart.annotations.TextAnnotation: double rotationAngle> = angle;

        virtualinvoke this.<org.jfree.chart.annotations.TextAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.annotations.TextAnnotation this, that;
        boolean $stack3, $stack6, $stack9, $stack12, $stack15, $stack18;
        java.lang.String $stack4, $stack5;
        java.awt.Font $stack7, $stack8;
        java.awt.Paint $stack10, $stack11;
        org.jfree.chart.ui.TextAnchor $stack13, $stack14, $stack16, $stack17;
        double $stack19, $stack20;
        byte $stack21;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.annotations.TextAnnotation;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.annotations.TextAnnotation) obj;

        $stack4 = this.<org.jfree.chart.annotations.TextAnnotation: java.lang.String text>;

        $stack5 = virtualinvoke that.<org.jfree.chart.annotations.TextAnnotation: java.lang.String getText()>();

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack4, $stack5);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Font font>;

        $stack8 = virtualinvoke that.<org.jfree.chart.annotations.TextAnnotation: java.awt.Font getFont()>();

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack7, $stack8);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack10 = this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint paint>;

        $stack11 = virtualinvoke that.<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint getPaint()>();

        $stack12 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack10, $stack11);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack13 = this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor textAnchor>;

        $stack14 = virtualinvoke that.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor getTextAnchor()>();

        $stack15 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack13, $stack14);

        if $stack15 != 0 goto label6;

        return 0;

     label6:
        $stack16 = this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor rotationAnchor>;

        $stack17 = virtualinvoke that.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor getRotationAnchor()>();

        $stack18 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack16, $stack17);

        if $stack18 != 0 goto label7;

        return 0;

     label7:
        $stack19 = this.<org.jfree.chart.annotations.TextAnnotation: double rotationAngle>;

        $stack20 = virtualinvoke that.<org.jfree.chart.annotations.TextAnnotation: double getRotationAngle()>();

        $stack21 = $stack19 cmpl $stack20;

        if $stack21 == 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.annotations.TextAnnotation this;
        java.awt.Font $stack4;
        int $stack5, $stack6, $stack8, $stack9, $stack11, $stack12, $stack17, $stack18, $stack20, $stack21, $stack23, $stack24, result#2;
        java.awt.Paint $stack7;
        org.jfree.chart.ui.TextAnchor $stack10, $stack22;
        double $stack13;
        long temp, $stack15, $stack16;
        java.lang.String $stack19;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        $stack5 = 37 * 193;

        $stack4 = this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Font font>;

        $stack6 = virtualinvoke $stack4.<java.awt.Font: int hashCode()>();

        result#2 = $stack5 + $stack6;

        $stack8 = 37 * result#2;

        $stack7 = this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint paint>;

        $stack9 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack7);

        result#2 = $stack8 + $stack9;

        $stack11 = 37 * result#2;

        $stack10 = this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor rotationAnchor>;

        $stack12 = virtualinvoke $stack10.<org.jfree.chart.ui.TextAnchor: int hashCode()>();

        result#2 = $stack11 + $stack12;

        $stack13 = this.<org.jfree.chart.annotations.TextAnnotation: double rotationAngle>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack13);

        $stack18 = 37 * result#2;

        $stack15 = temp >>> 32;

        $stack16 = temp ^ $stack15;

        $stack17 = (int) $stack16;

        result#2 = $stack18 + $stack17;

        $stack20 = 37 * result#2;

        $stack19 = this.<org.jfree.chart.annotations.TextAnnotation: java.lang.String text>;

        $stack21 = virtualinvoke $stack19.<java.lang.String: int hashCode()>();

        result#2 = $stack20 + $stack21;

        $stack23 = 37 * result#2;

        $stack22 = this.<org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor textAnchor>;

        $stack24 = virtualinvoke $stack22.<org.jfree.chart.ui.TextAnchor: int hashCode()>();

        result#2 = $stack23 + $stack24;

        return result#2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.annotations.TextAnnotation this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.annotations.TextAnnotation this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.annotations.TextAnnotation;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.TextAnnotation: java.awt.Paint paint> = $stack2;

        return;
    }

    static void <clinit>()
    {
        java.awt.Font $stack0;
        java.awt.Color $stack1;
        org.jfree.chart.ui.TextAnchor $stack2, $stack3;

        <org.jfree.chart.annotations.TextAnnotation: double DEFAULT_ROTATION_ANGLE> = 0.0;

        <org.jfree.chart.annotations.TextAnnotation: long serialVersionUID> = 7008912287533127432L;

        $stack0 = new java.awt.Font;

        specialinvoke $stack0.<java.awt.Font: void <init>(java.lang.String,int,int)>("SansSerif", 0, 10);

        <org.jfree.chart.annotations.TextAnnotation: java.awt.Font DEFAULT_FONT> = $stack0;

        $stack1 = <java.awt.Color: java.awt.Color BLACK>;

        <org.jfree.chart.annotations.TextAnnotation: java.awt.Paint DEFAULT_PAINT> = $stack1;

        $stack2 = <org.jfree.chart.ui.TextAnchor: org.jfree.chart.ui.TextAnchor CENTER>;

        <org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor DEFAULT_TEXT_ANCHOR> = $stack2;

        $stack3 = <org.jfree.chart.ui.TextAnchor: org.jfree.chart.ui.TextAnchor CENTER>;

        <org.jfree.chart.annotations.TextAnnotation: org.jfree.chart.ui.TextAnchor DEFAULT_ROTATION_ANCHOR> = $stack3;

        return;
    }
}
