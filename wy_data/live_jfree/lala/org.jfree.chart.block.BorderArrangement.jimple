public class org.jfree.chart.block.BorderArrangement extends java.lang.Object implements org.jfree.chart.block.Arrangement, java.io.Serializable
{
    private static final long serialVersionUID;
    private org.jfree.chart.block.Block centerBlock;
    private org.jfree.chart.block.Block topBlock;
    private org.jfree.chart.block.Block bottomBlock;
    private org.jfree.chart.block.Block leftBlock;
    private org.jfree.chart.block.Block rightBlock;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.jfree.chart.block.BorderArrangement this;

        this := @this: org.jfree.chart.block.BorderArrangement;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void add(org.jfree.chart.block.Block, java.lang.Object)
    {
        java.lang.Object key;
        boolean $stack4;
        org.jfree.chart.ui.RectangleEdge edge, $stack5, $stack6, $stack7, $stack8;
        org.jfree.chart.block.BorderArrangement this;
        org.jfree.chart.block.Block block;

        this := @this: org.jfree.chart.block.BorderArrangement;

        block := @parameter0: org.jfree.chart.block.Block;

        key := @parameter1: java.lang.Object;

        $stack4 = key instanceof org.jfree.chart.ui.RectangleEdge;

        if $stack4 != 0 goto label1;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = block;

        goto label5;

     label1:
        edge = (org.jfree.chart.ui.RectangleEdge) key;

        $stack5 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

        if edge != $stack5 goto label2;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> = block;

        goto label5;

     label2:
        $stack6 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge BOTTOM>;

        if edge != $stack6 goto label3;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> = block;

        goto label5;

     label3:
        $stack7 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        if edge != $stack7 goto label4;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = block;

        goto label5;

     label4:
        $stack8 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge RIGHT>;

        if edge != $stack8 goto label5;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> = block;

     label5:
        return;
    }

    public org.jfree.chart.ui.Size2D arrange(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.BlockContainer container;
        org.jfree.chart.block.RectangleConstraint constraint, contentConstraint;
        org.jfree.chart.block.LengthConstraintType w, h, $stack11, $stack12, $stack13, $stack25, $stack26, $stack27, $stack33, $stack34, $stack35, $stack40, $stack41, $stack42;
        org.jfree.chart.ui.Size2D $stack15, contentSize;
        double $stack16, $stack17, $stack18, $stack19, $stack38;
        java.lang.AssertionError $stack24;
        org.jfree.chart.block.BorderArrangement this;
        org.jfree.data.Range $stack28, $stack29;
        java.awt.Graphics2D g2;
        java.lang.RuntimeException $stack31, $stack32, $stack43, $stack44;
        boolean $stack14;

        this := @this: org.jfree.chart.block.BorderArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        contentConstraint = virtualinvoke container.<org.jfree.chart.block.BlockContainer: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(constraint);

        contentSize = null;

        w = virtualinvoke contentConstraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>();

        h = virtualinvoke contentConstraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>();

        $stack11 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if w != $stack11 goto label03;

        $stack40 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack40 goto label01;

        contentSize = virtualinvoke this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(container, g2);

        goto label09;

     label01:
        $stack41 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack41 goto label02;

        $stack44 = new java.lang.RuntimeException;

        specialinvoke $stack44.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented.");

        throw $stack44;

     label02:
        $stack42 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack42 goto label09;

        $stack43 = new java.lang.RuntimeException;

        specialinvoke $stack43.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented.");

        throw $stack43;

     label03:
        $stack12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if w != $stack12 goto label06;

        $stack33 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack33 goto label04;

        $stack38 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        contentSize = virtualinvoke this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)>(container, g2, $stack38);

        goto label09;

     label04:
        $stack34 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack34 goto label05;

        contentSize = virtualinvoke this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        goto label09;

     label05:
        $stack35 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack35 goto label09;

        contentSize = virtualinvoke this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.ui.Size2D arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        goto label09;

     label06:
        $stack13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if w != $stack13 goto label09;

        $stack25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack25 goto label07;

        $stack32 = new java.lang.RuntimeException;

        specialinvoke $stack32.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented.");

        throw $stack32;

     label07:
        $stack26 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack26 goto label08;

        $stack31 = new java.lang.RuntimeException;

        specialinvoke $stack31.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented.");

        throw $stack31;

     label08:
        $stack27 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack27 goto label09;

        $stack28 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        $stack29 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>();

        contentSize = virtualinvoke this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,org.jfree.data.Range,org.jfree.data.Range,java.awt.Graphics2D)>(container, $stack28, $stack29, g2);

     label09:
        $stack14 = <org.jfree.chart.block.BorderArrangement: boolean $assertionsDisabled>;

        if $stack14 != 0 goto label10;

        if contentSize != null goto label10;

        $stack24 = new java.lang.AssertionError;

        specialinvoke $stack24.<java.lang.AssertionError: void <init>()>();

        throw $stack24;

     label10:
        $stack15 = new org.jfree.chart.ui.Size2D;

        $stack16 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack17 = virtualinvoke container.<org.jfree.chart.block.BlockContainer: double calculateTotalWidth(double)>($stack16);

        $stack18 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack19 = virtualinvoke container.<org.jfree.chart.block.BlockContainer: double calculateTotalHeight(double)>($stack18);

        specialinvoke $stack15.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack17, $stack19);

        return $stack15;
    }

    protected org.jfree.chart.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D)
    {
        double[] w, h;
        org.jfree.chart.block.BorderArrangement this;
        org.jfree.chart.block.Block $stack11, $stack12, $stack13, $stack14, $stack20, $stack38, $stack39, $stack40, $stack41, $stack42, $stack51, $stack59, $stack64, $stack70, $stack74, $stack77, $stack105, $stack120, $stack126, $stack132;
        double $stack15, $stack16, $stack18, $stack19, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack30, $stack31, $stack32, $stack33, centerHeight, $stack35, $stack36, $stack37, height, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack55, $stack56, $stack57, $stack58, $stack62, $stack63, $stack67, $stack68, $stack69, $stack73, $stack79, $stack80, $stack107, $stack108, $stack122, $stack123, $stack128, $stack129, $stack134, $stack135, size#6;
        org.jfree.chart.ui.Size2D $stack43, size;
        java.awt.geom.Rectangle2D$Double $stack44, $stack54, $stack61, $stack66, $stack72;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.RectangleConstraint $stack76, $stack104, $stack119, $stack125, $stack131;
        org.jfree.chart.block.BlockContainer container;

        this := @this: org.jfree.chart.block.BorderArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        w = newarray (double)[5];

        h = newarray (double)[5];

        $stack11 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        if $stack11 == null goto label01;

        $stack132 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        $stack131 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>;

        size = interfaceinvoke $stack132.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack131);

        $stack134 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[0] = $stack134;

        $stack135 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[0] = $stack135;

     label01:
        $stack12 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        if $stack12 == null goto label02;

        $stack126 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        $stack125 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>;

        size = interfaceinvoke $stack126.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack125);

        $stack128 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[1] = $stack128;

        $stack129 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[1] = $stack129;

     label02:
        $stack13 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        if $stack13 == null goto label03;

        $stack120 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        $stack119 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>;

        size = interfaceinvoke $stack120.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack119);

        $stack122 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[2] = $stack122;

        $stack123 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[2] = $stack123;

     label03:
        $stack14 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        if $stack14 == null goto label04;

        $stack105 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        $stack104 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>;

        size = interfaceinvoke $stack105.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack104);

        $stack107 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[3] = $stack107;

        $stack108 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[3] = $stack108;

     label04:
        $stack16 = h[2];

        $stack15 = h[3];

        $stack18 = staticinvoke <java.lang.Math: double max(double,double)>($stack16, $stack15);

        h[2] = $stack18;

        $stack19 = h[2];

        h[3] = $stack19;

        $stack20 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        if $stack20 == null goto label05;

        $stack77 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        $stack76 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>;

        size = interfaceinvoke $stack77.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack76);

        $stack79 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[4] = $stack79;

        $stack80 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[4] = $stack80;

     label05:
        $stack27 = w[0];

        $stack26 = w[1];

        $stack22 = w[2];

        $stack21 = w[4];

        $stack24 = $stack22 + $stack21;

        $stack23 = w[3];

        $stack25 = $stack24 + $stack23;

        $stack28 = staticinvoke <java.lang.Math: double max(double,double)>($stack26, $stack25);

        size#6 = staticinvoke <java.lang.Math: double max(double,double)>($stack27, $stack28);

        $stack32 = h[2];

        $stack31 = h[3];

        $stack30 = h[4];

        $stack33 = staticinvoke <java.lang.Math: double max(double,double)>($stack31, $stack30);

        centerHeight = staticinvoke <java.lang.Math: double max(double,double)>($stack32, $stack33);

        $stack36 = h[0];

        $stack35 = h[1];

        $stack37 = $stack36 + $stack35;

        height = $stack37 + centerHeight;

        $stack38 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        if $stack38 == null goto label06;

        $stack74 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        $stack72 = new java.awt.geom.Rectangle2D$Double;

        $stack73 = h[0];

        specialinvoke $stack72.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, size#6, $stack73);

        interfaceinvoke $stack74.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack72);

     label06:
        $stack39 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        if $stack39 == null goto label07;

        $stack70 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        $stack66 = new java.awt.geom.Rectangle2D$Double;

        $stack67 = h[1];

        $stack69 = height - $stack67;

        $stack68 = h[1];

        specialinvoke $stack66.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $stack69, size#6, $stack68);

        interfaceinvoke $stack70.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack66);

     label07:
        $stack40 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        if $stack40 == null goto label08;

        $stack64 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        $stack61 = new java.awt.geom.Rectangle2D$Double;

        $stack63 = h[0];

        $stack62 = w[2];

        specialinvoke $stack61.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $stack63, $stack62, centerHeight);

        interfaceinvoke $stack64.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack61);

     label08:
        $stack41 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        if $stack41 == null goto label09;

        $stack59 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        $stack54 = new java.awt.geom.Rectangle2D$Double;

        $stack55 = w[3];

        $stack58 = size#6 - $stack55;

        $stack57 = h[0];

        $stack56 = w[3];

        specialinvoke $stack54.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack58, $stack57, $stack56, centerHeight);

        interfaceinvoke $stack59.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack54);

     label09:
        $stack42 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        if $stack42 == null goto label10;

        $stack51 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        $stack44 = new java.awt.geom.Rectangle2D$Double;

        $stack50 = w[2];

        $stack49 = h[0];

        $stack45 = w[2];

        $stack47 = size#6 - $stack45;

        $stack46 = w[3];

        $stack48 = $stack47 - $stack46;

        specialinvoke $stack44.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack50, $stack49, $stack48, centerHeight);

        interfaceinvoke $stack51.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack44);

     label10:
        $stack43 = new org.jfree.chart.ui.Size2D;

        specialinvoke $stack43.<org.jfree.chart.ui.Size2D: void <init>(double,double)>(size#6, height);

        return $stack43;
    }

    protected org.jfree.chart.ui.Size2D arrangeFR(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.BorderArrangement this;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.RectangleConstraint constraint, c2;
        double $stack8, $stack11, $stack14, h;
        org.jfree.chart.ui.Size2D size1, $stack17;
        org.jfree.data.Range $stack10, $stack13;
        boolean $stack12;

        this := @this: org.jfree.chart.block.BorderArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        $stack8 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        size1 = virtualinvoke this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,double)>(container, g2, $stack8);

        $stack10 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>();

        $stack11 = virtualinvoke size1.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack12 = virtualinvoke $stack10.<org.jfree.data.Range: boolean contains(double)>($stack11);

        if $stack12 == 0 goto label1;

        return size1;

     label1:
        $stack13 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>();

        $stack14 = virtualinvoke size1.<org.jfree.chart.ui.Size2D: double getHeight()>();

        h = virtualinvoke $stack13.<org.jfree.data.Range: double constrain(double)>($stack14);

        c2 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedHeight(double)>(h);

        $stack17 = virtualinvoke this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, c2);

        return $stack17;
    }

    protected org.jfree.chart.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, double)
    {
        double[] w, h;
        org.jfree.chart.block.RectangleConstraint $stack13, $stack18, $stack39, $stack41, $stack71;
        double width, $stack25, $stack26, $stack28, $stack29, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack42, $stack43, $stack44, $stack47, $stack50, $stack51, $stack68, $stack69, $stack73, $stack75, $stack80, $stack81, $stack94, $stack95, $stack99, $stack100, $stack108, $stack109, size#5;
        org.jfree.chart.block.LengthConstraintType $stack14, $stack15, $stack21, $stack22, $stack45, $stack46, $stack76, $stack77;
        org.jfree.chart.block.BorderArrangement this;
        org.jfree.chart.block.Block $stack16, $stack17, $stack23, $stack24, $stack30, $stack48, $stack78, $stack92, $stack97, $stack106;
        org.jfree.data.Range $stack19, $stack72;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.Size2D $stack40, size;

        this := @this: org.jfree.chart.block.BorderArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        width := @parameter2: double;

        w = newarray (double)[5];

        h = newarray (double)[5];

        $stack13 = new org.jfree.chart.block.RectangleConstraint;

        $stack15 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        $stack14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        specialinvoke $stack13.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(width, null, $stack15, 0.0, null, $stack14);

        $stack16 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        if $stack16 == null goto label1;

        $stack106 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        size = interfaceinvoke $stack106.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack13);

        $stack108 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[0] = $stack108;

        $stack109 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[0] = $stack109;

     label1:
        $stack17 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        if $stack17 == null goto label2;

        $stack97 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        size = interfaceinvoke $stack97.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack13);

        $stack99 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[1] = $stack99;

        $stack100 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[1] = $stack100;

     label2:
        $stack18 = new org.jfree.chart.block.RectangleConstraint;

        $stack19 = new org.jfree.data.Range;

        specialinvoke $stack19.<org.jfree.data.Range: void <init>(double,double)>(0.0, width);

        $stack22 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        $stack21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        specialinvoke $stack18.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(0.0, $stack19, $stack22, 0.0, null, $stack21);

        $stack23 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        if $stack23 == null goto label3;

        $stack92 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        size = interfaceinvoke $stack92.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack18);

        $stack94 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[2] = $stack94;

        $stack95 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[2] = $stack95;

     label3:
        $stack24 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        if $stack24 == null goto label4;

        $stack68 = w[2];

        $stack69 = width - $stack68;

        size#5 = staticinvoke <java.lang.Math: double max(double,double)>($stack69, 0.0);

        $stack71 = new org.jfree.chart.block.RectangleConstraint;

        $stack72 = new org.jfree.data.Range;

        $stack73 = w[2];

        $stack75 = staticinvoke <java.lang.Math: double min(double,double)>($stack73, size#5);

        specialinvoke $stack72.<org.jfree.data.Range: void <init>(double,double)>($stack75, size#5);

        $stack77 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        $stack76 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        specialinvoke $stack71.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(0.0, $stack72, $stack77, 0.0, null, $stack76);

        $stack78 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        size = interfaceinvoke $stack78.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack71);

        $stack80 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[3] = $stack80;

        $stack81 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[3] = $stack81;

     label4:
        $stack26 = h[2];

        $stack25 = h[3];

        $stack28 = staticinvoke <java.lang.Math: double max(double,double)>($stack26, $stack25);

        h[2] = $stack28;

        $stack29 = h[2];

        h[3] = $stack29;

        $stack30 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        if $stack30 == null goto label5;

        $stack41 = new org.jfree.chart.block.RectangleConstraint;

        $stack42 = w[2];

        $stack44 = width - $stack42;

        $stack43 = w[3];

        $stack47 = $stack44 - $stack43;

        $stack46 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        $stack45 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        specialinvoke $stack41.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>($stack47, null, $stack46, 0.0, null, $stack45);

        $stack48 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        size = interfaceinvoke $stack48.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack41);

        $stack50 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[4] = $stack50;

        $stack51 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[4] = $stack51;

     label5:
        $stack32 = h[0];

        $stack31 = h[1];

        $stack35 = $stack32 + $stack31;

        $stack36 = h[2];

        $stack34 = h[3];

        $stack33 = h[4];

        $stack37 = staticinvoke <java.lang.Math: double max(double,double)>($stack34, $stack33);

        $stack38 = staticinvoke <java.lang.Math: double max(double,double)>($stack36, $stack37);

        size#5 = $stack35 + $stack38;

        $stack39 = new org.jfree.chart.block.RectangleConstraint;

        specialinvoke $stack39.<org.jfree.chart.block.RectangleConstraint: void <init>(double,double)>(width, size#5);

        $stack40 = virtualinvoke this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.ui.Size2D arrange(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, $stack39);

        return $stack40;
    }

    protected org.jfree.chart.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer, org.jfree.data.Range, org.jfree.data.Range, java.awt.Graphics2D)
    {
        double[] w, h;
        org.jfree.chart.block.BorderArrangement this;
        org.jfree.chart.block.Block $stack14, $stack15, $stack21, $stack25, $stack36, $stack54, $stack55, $stack56, $stack57, $stack58, $stack71, $stack80, $stack86, $stack92, $stack96, $stack99, $stack126, $stack147, $stack160, $stack171;
        org.jfree.data.Range heightRange, widthRange, c1#3, size#9;
        double $stack16, $stack17, $stack18, $stack19, $stack22, $stack23, $stack26, $stack27, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, $stack53, height, $stack61, $stack62, $stack63, $stack64, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack75, $stack76, $stack77, $stack78, $stack79, $stack83, $stack84, $stack85, $stack89, $stack90, $stack91, $stack95, $stack101, $stack102, $stack128, $stack129, $stack149, $stack150, $stack156, $stack157, $stack162, $stack163, $stack173, $stack174, size#14;
        org.jfree.chart.ui.Size2D $stack59, size;
        java.awt.geom.Rectangle2D$Double $stack60, $stack74, $stack82, $stack88, $stack94;
        org.jfree.chart.block.RectangleConstraint $stack98, $stack125, $stack146, $stack159, $stack170;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.BlockContainer container;

        this := @this: org.jfree.chart.block.BorderArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        widthRange := @parameter1: org.jfree.data.Range;

        heightRange := @parameter2: org.jfree.data.Range;

        g2 := @parameter3: java.awt.Graphics2D;

        w = newarray (double)[5];

        h = newarray (double)[5];

        $stack14 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        if $stack14 == null goto label01;

        $stack170 = new org.jfree.chart.block.RectangleConstraint;

        specialinvoke $stack170.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(widthRange, heightRange);

        $stack171 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        size = interfaceinvoke $stack171.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack170);

        $stack173 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[0] = $stack173;

        $stack174 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[0] = $stack174;

     label01:
        $stack15 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        if $stack15 == null goto label02;

        $stack156 = h[0];

        $stack157 = neg $stack156;

        c1#3 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(heightRange, $stack157, 0);

        $stack159 = new org.jfree.chart.block.RectangleConstraint;

        specialinvoke $stack159.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(widthRange, c1#3);

        $stack160 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        size = interfaceinvoke $stack160.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack159);

        $stack162 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[1] = $stack162;

        $stack163 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[1] = $stack163;

     label02:
        $stack17 = h[0];

        $stack16 = h[1];

        $stack18 = $stack17 + $stack16;

        $stack19 = neg $stack18;

        c1#3 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double)>(heightRange, $stack19);

        $stack21 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        if $stack21 == null goto label03;

        $stack146 = new org.jfree.chart.block.RectangleConstraint;

        specialinvoke $stack146.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(widthRange, c1#3);

        $stack147 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        size = interfaceinvoke $stack147.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack146);

        $stack149 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[2] = $stack149;

        $stack150 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[2] = $stack150;

     label03:
        $stack22 = w[2];

        $stack23 = neg $stack22;

        size#9 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(widthRange, $stack23, 0);

        $stack25 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        if $stack25 == null goto label04;

        $stack125 = new org.jfree.chart.block.RectangleConstraint;

        specialinvoke $stack125.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(size#9, c1#3);

        $stack126 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        size = interfaceinvoke $stack126.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack125);

        $stack128 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[3] = $stack128;

        $stack129 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[3] = $stack129;

     label04:
        $stack27 = h[2];

        $stack26 = h[3];

        $stack29 = staticinvoke <java.lang.Math: double max(double,double)>($stack27, $stack26);

        h[2] = $stack29;

        $stack30 = h[2];

        h[3] = $stack30;

        $stack32 = w[2];

        $stack31 = w[3];

        $stack33 = $stack32 + $stack31;

        $stack34 = neg $stack33;

        size#9 = staticinvoke <org.jfree.data.Range: org.jfree.data.Range shift(org.jfree.data.Range,double,boolean)>(widthRange, $stack34, 0);

        $stack36 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        if $stack36 == null goto label05;

        $stack98 = new org.jfree.chart.block.RectangleConstraint;

        specialinvoke $stack98.<org.jfree.chart.block.RectangleConstraint: void <init>(org.jfree.data.Range,org.jfree.data.Range)>(size#9, c1#3);

        $stack99 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        size = interfaceinvoke $stack99.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack98);

        $stack101 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[4] = $stack101;

        $stack102 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[4] = $stack102;

     label05:
        $stack43 = w[0];

        $stack42 = w[1];

        $stack38 = w[2];

        $stack37 = w[4];

        $stack40 = $stack38 + $stack37;

        $stack39 = w[3];

        $stack41 = $stack40 + $stack39;

        $stack44 = staticinvoke <java.lang.Math: double max(double,double)>($stack42, $stack41);

        size#14 = staticinvoke <java.lang.Math: double max(double,double)>($stack43, $stack44);

        $stack47 = h[0];

        $stack46 = h[1];

        $stack50 = $stack47 + $stack46;

        $stack51 = h[2];

        $stack49 = h[3];

        $stack48 = h[4];

        $stack52 = staticinvoke <java.lang.Math: double max(double,double)>($stack49, $stack48);

        $stack53 = staticinvoke <java.lang.Math: double max(double,double)>($stack51, $stack52);

        height = $stack50 + $stack53;

        $stack54 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        if $stack54 == null goto label06;

        $stack96 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        $stack94 = new java.awt.geom.Rectangle2D$Double;

        $stack95 = h[0];

        specialinvoke $stack94.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, size#14, $stack95);

        interfaceinvoke $stack96.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack94);

     label06:
        $stack55 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        if $stack55 == null goto label07;

        $stack92 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        $stack88 = new java.awt.geom.Rectangle2D$Double;

        $stack89 = h[1];

        $stack91 = height - $stack89;

        $stack90 = h[1];

        specialinvoke $stack88.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $stack91, size#14, $stack90);

        interfaceinvoke $stack92.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack88);

     label07:
        $stack56 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        if $stack56 == null goto label08;

        $stack86 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        $stack82 = new java.awt.geom.Rectangle2D$Double;

        $stack85 = h[0];

        $stack84 = w[2];

        $stack83 = h[2];

        specialinvoke $stack82.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $stack85, $stack84, $stack83);

        interfaceinvoke $stack86.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack82);

     label08:
        $stack57 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        if $stack57 == null goto label09;

        $stack80 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        $stack74 = new java.awt.geom.Rectangle2D$Double;

        $stack75 = w[3];

        $stack79 = size#14 - $stack75;

        $stack78 = h[0];

        $stack77 = w[3];

        $stack76 = h[3];

        specialinvoke $stack74.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack79, $stack78, $stack77, $stack76);

        interfaceinvoke $stack80.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack74);

     label09:
        $stack58 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        if $stack58 == null goto label10;

        $stack71 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        $stack60 = new java.awt.geom.Rectangle2D$Double;

        $stack70 = w[2];

        $stack69 = h[0];

        $stack61 = w[2];

        $stack63 = size#14 - $stack61;

        $stack62 = w[3];

        $stack68 = $stack63 - $stack62;

        $stack64 = h[0];

        $stack66 = height - $stack64;

        $stack65 = h[1];

        $stack67 = $stack66 - $stack65;

        specialinvoke $stack60.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack70, $stack69, $stack68, $stack67);

        interfaceinvoke $stack71.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack60);

     label10:
        $stack59 = new org.jfree.chart.ui.Size2D;

        specialinvoke $stack59.<org.jfree.chart.ui.Size2D: void <init>(double,double)>(size#14, height);

        return $stack59;
    }

    protected org.jfree.chart.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        double[] w, h;
        org.jfree.chart.block.RectangleConstraint constraint, $stack29, $stack80, $stack109, $stack125, $stack146;
        double $stack9, $stack11, $stack14, $stack15, $stack16, $stack17, $stack18, $stack20, $stack22, $stack24, $stack25, $stack26, $stack27, $stack28, $stack30, $stack31, $stack39, $stack40, $stack42, $stack43, $stack44, $stack45, $stack50, $stack51, $stack52, $stack53, $stack54, $stack55, $stack59, $stack60, $stack61, $stack65, $stack66, $stack67, $stack68, $stack69, $stack73, $stack74, $stack84, $stack85, $stack86, $stack87, $stack89, $stack93, $stack113, $stack115, $stack119, $stack127, $stack132, $stack133, $stack134, $stack138, $stack148, $stack153, $stack157;
        org.jfree.chart.block.BorderArrangement this;
        org.jfree.chart.block.Block $stack10, $stack12, $stack19, $stack21, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack46, $stack56, $stack62, $stack70, $stack75, $stack77, $stack91, $stack117, $stack136, $stack155;
        org.jfree.chart.ui.Size2D $stack38, size;
        java.awt.geom.Rectangle2D$Double $stack41, $stack49, $stack58, $stack64, $stack72;
        java.awt.Graphics2D g2;
        org.jfree.data.Range $stack81, $stack110, $stack126, $stack147;
        org.jfree.chart.block.LengthConstraintType $stack88, $stack90, $stack114, $stack116, $stack129, $stack135, $stack150, $stack154;
        org.jfree.chart.block.BlockContainer container;

        this := @this: org.jfree.chart.block.BorderArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        w = newarray (double)[5];

        h = newarray (double)[5];

        $stack9 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        w[0] = $stack9;

        $stack10 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        if $stack10 == null goto label01;

        $stack146 = new org.jfree.chart.block.RectangleConstraint;

        $stack148 = w[0];

        $stack150 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        $stack147 = new org.jfree.data.Range;

        $stack153 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getHeight()>();

        specialinvoke $stack147.<org.jfree.data.Range: void <init>(double,double)>(0.0, $stack153);

        $stack154 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        specialinvoke $stack146.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>($stack148, null, $stack150, 0.0, $stack147, $stack154);

        $stack155 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        size = interfaceinvoke $stack155.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack146);

        $stack157 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[0] = $stack157;

     label01:
        $stack11 = w[0];

        w[1] = $stack11;

        $stack12 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        if $stack12 == null goto label02;

        $stack125 = new org.jfree.chart.block.RectangleConstraint;

        $stack127 = w[0];

        $stack129 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        $stack126 = new org.jfree.data.Range;

        $stack132 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getHeight()>();

        $stack133 = h[0];

        $stack134 = $stack132 - $stack133;

        specialinvoke $stack126.<org.jfree.data.Range: void <init>(double,double)>(0.0, $stack134);

        $stack135 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        specialinvoke $stack125.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>($stack127, null, $stack129, 0.0, $stack126, $stack135);

        $stack136 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        size = interfaceinvoke $stack136.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack125);

        $stack138 = size.<org.jfree.chart.ui.Size2D: double height>;

        h[1] = $stack138;

     label02:
        $stack14 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getHeight()>();

        $stack15 = h[1];

        $stack17 = $stack14 - $stack15;

        $stack16 = h[0];

        $stack18 = $stack17 - $stack16;

        h[2] = $stack18;

        $stack19 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        if $stack19 == null goto label03;

        $stack109 = new org.jfree.chart.block.RectangleConstraint;

        $stack110 = new org.jfree.data.Range;

        $stack113 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        specialinvoke $stack110.<org.jfree.data.Range: void <init>(double,double)>(0.0, $stack113);

        $stack116 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        $stack115 = h[2];

        $stack114 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        specialinvoke $stack109.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(0.0, $stack110, $stack116, $stack115, null, $stack114);

        $stack117 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        size = interfaceinvoke $stack117.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack109);

        $stack119 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[2] = $stack119;

     label03:
        $stack20 = h[2];

        h[3] = $stack20;

        $stack21 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        if $stack21 == null goto label04;

        $stack80 = new org.jfree.chart.block.RectangleConstraint;

        $stack81 = new org.jfree.data.Range;

        $stack84 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        $stack85 = w[2];

        $stack86 = $stack84 - $stack85;

        $stack87 = staticinvoke <java.lang.Math: double max(double,double)>($stack86, 0.0);

        specialinvoke $stack81.<org.jfree.data.Range: void <init>(double,double)>(0.0, $stack87);

        $stack90 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        $stack89 = h[2];

        $stack88 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        specialinvoke $stack80.<org.jfree.chart.block.RectangleConstraint: void <init>(double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType,double,org.jfree.data.Range,org.jfree.chart.block.LengthConstraintType)>(0.0, $stack81, $stack90, $stack89, null, $stack88);

        $stack91 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        size = interfaceinvoke $stack91.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack80);

        $stack93 = size.<org.jfree.chart.ui.Size2D: double width>;

        w[3] = $stack93;

     label04:
        $stack22 = h[2];

        h[4] = $stack22;

        $stack24 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        $stack25 = w[3];

        $stack27 = $stack24 - $stack25;

        $stack26 = w[2];

        $stack28 = $stack27 - $stack26;

        w[4] = $stack28;

        $stack29 = new org.jfree.chart.block.RectangleConstraint;

        $stack31 = w[4];

        $stack30 = h[4];

        specialinvoke $stack29.<org.jfree.chart.block.RectangleConstraint: void <init>(double,double)>($stack31, $stack30);

        $stack32 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        if $stack32 == null goto label05;

        $stack77 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        interfaceinvoke $stack77.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack29);

     label05:
        $stack33 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        if $stack33 == null goto label06;

        $stack75 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        $stack72 = new java.awt.geom.Rectangle2D$Double;

        $stack74 = w[0];

        $stack73 = h[0];

        specialinvoke $stack72.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $stack74, $stack73);

        interfaceinvoke $stack75.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack72);

     label06:
        $stack34 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        if $stack34 == null goto label07;

        $stack70 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        $stack64 = new java.awt.geom.Rectangle2D$Double;

        $stack66 = h[0];

        $stack65 = h[2];

        $stack69 = $stack66 + $stack65;

        $stack68 = w[1];

        $stack67 = h[1];

        specialinvoke $stack64.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $stack69, $stack68, $stack67);

        interfaceinvoke $stack70.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack64);

     label07:
        $stack35 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        if $stack35 == null goto label08;

        $stack62 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        $stack58 = new java.awt.geom.Rectangle2D$Double;

        $stack61 = h[0];

        $stack60 = w[2];

        $stack59 = h[2];

        specialinvoke $stack58.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, $stack61, $stack60, $stack59);

        interfaceinvoke $stack62.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack58);

     label08:
        $stack36 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        if $stack36 == null goto label09;

        $stack56 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        $stack49 = new java.awt.geom.Rectangle2D$Double;

        $stack51 = w[2];

        $stack50 = w[4];

        $stack55 = $stack51 + $stack50;

        $stack54 = h[0];

        $stack53 = w[3];

        $stack52 = h[3];

        specialinvoke $stack49.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack55, $stack54, $stack53, $stack52);

        interfaceinvoke $stack56.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack49);

     label09:
        $stack37 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        if $stack37 == null goto label10;

        $stack46 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        $stack41 = new java.awt.geom.Rectangle2D$Double;

        $stack45 = w[2];

        $stack44 = h[0];

        $stack43 = w[4];

        $stack42 = h[4];

        specialinvoke $stack41.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack45, $stack44, $stack43, $stack42);

        interfaceinvoke $stack46.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack41);

     label10:
        $stack38 = new org.jfree.chart.ui.Size2D;

        $stack39 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        $stack40 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getHeight()>();

        specialinvoke $stack38.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack39, $stack40);

        return $stack38;
    }

    public void clear()
    {
        org.jfree.chart.block.BorderArrangement this;

        this := @this: org.jfree.chart.block.BorderArrangement;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock> = null;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock> = null;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock> = null;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock> = null;

        this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock> = null;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.block.BorderArrangement this, that;
        boolean $stack3, $stack6, $stack9, $stack12, $stack15, $stack18;
        org.jfree.chart.block.Block $stack4, $stack5, $stack7, $stack8, $stack10, $stack11, $stack13, $stack14, $stack16, $stack17;

        this := @this: org.jfree.chart.block.BorderArrangement;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.block.BorderArrangement;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.block.BorderArrangement) obj;

        $stack5 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        $stack4 = that.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block topBlock>;

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        $stack7 = that.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block bottomBlock>;

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        $stack10 = that.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block leftBlock>;

        $stack12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack11, $stack10);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack14 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        $stack13 = that.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block rightBlock>;

        $stack15 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack14, $stack13);

        if $stack15 != 0 goto label6;

        return 0;

     label6:
        $stack17 = this.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        $stack16 = that.<org.jfree.chart.block.BorderArrangement: org.jfree.chart.block.Block centerBlock>;

        $stack18 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack17, $stack16);

        if $stack18 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack2;

        <org.jfree.chart.block.BorderArrangement: long serialVersionUID> = 506071142274883745L;

        $stack0 = class "Lorg/jfree/chart/block/BorderArrangement;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        <org.jfree.chart.block.BorderArrangement: boolean $assertionsDisabled> = $stack2;

        return;
    }
}
