public class org.jfree.chart.text.TextFragment extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.awt.Font DEFAULT_FONT;
    public static final java.awt.Paint DEFAULT_PAINT;
    private java.lang.String text;
    private java.awt.Font font;
    private transient java.awt.Paint paint;
    private float baselineOffset;

    public void <init>(java.lang.String)
    {
        org.jfree.chart.text.TextFragment this;
        java.lang.String text;
        java.awt.Paint $stack2;
        java.awt.Font $stack3;

        this := @this: org.jfree.chart.text.TextFragment;

        text := @parameter0: java.lang.String;

        $stack3 = <org.jfree.chart.text.TextFragment: java.awt.Font DEFAULT_FONT>;

        $stack2 = <org.jfree.chart.text.TextFragment: java.awt.Paint DEFAULT_PAINT>;

        specialinvoke this.<org.jfree.chart.text.TextFragment: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>(text, $stack3, $stack2);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font)
    {
        org.jfree.chart.text.TextFragment this;
        java.lang.String text;
        java.awt.Font font;
        java.awt.Paint $stack3;

        this := @this: org.jfree.chart.text.TextFragment;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        $stack3 = <org.jfree.chart.text.TextFragment: java.awt.Paint DEFAULT_PAINT>;

        specialinvoke this.<org.jfree.chart.text.TextFragment: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>(text, font, $stack3);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font, java.awt.Paint)
    {
        org.jfree.chart.text.TextFragment this;
        java.lang.String text;
        java.awt.Font font;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.text.TextFragment;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        paint := @parameter2: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.text.TextFragment: void <init>(java.lang.String,java.awt.Font,java.awt.Paint,float)>(text, font, paint, 0.0F);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font, java.awt.Paint, float)
    {
        org.jfree.chart.text.TextFragment this;
        java.lang.String text;
        java.awt.Font font;
        java.awt.Paint paint;
        float baselineOffset;
        java.lang.IllegalArgumentException $stack5, $stack6, $stack7;

        this := @this: org.jfree.chart.text.TextFragment;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        paint := @parameter2: java.awt.Paint;

        baselineOffset := @parameter3: float;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if text != null goto label1;

        $stack7 = new java.lang.IllegalArgumentException;

        specialinvoke $stack7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'text\' argument.");

        throw $stack7;

     label1:
        if font != null goto label2;

        $stack6 = new java.lang.IllegalArgumentException;

        specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'font\' argument.");

        throw $stack6;

     label2:
        if paint != null goto label3;

        $stack5 = new java.lang.IllegalArgumentException;

        specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'paint\' argument.");

        throw $stack5;

     label3:
        this.<org.jfree.chart.text.TextFragment: java.lang.String text> = text;

        this.<org.jfree.chart.text.TextFragment: java.awt.Font font> = font;

        this.<org.jfree.chart.text.TextFragment: java.awt.Paint paint> = paint;

        this.<org.jfree.chart.text.TextFragment: float baselineOffset> = baselineOffset;

        return;
    }

    public java.lang.String getText()
    {
        org.jfree.chart.text.TextFragment this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.text.TextFragment;

        $stack1 = this.<org.jfree.chart.text.TextFragment: java.lang.String text>;

        return $stack1;
    }

    public java.awt.Font getFont()
    {
        org.jfree.chart.text.TextFragment this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.text.TextFragment;

        $stack1 = this.<org.jfree.chart.text.TextFragment: java.awt.Font font>;

        return $stack1;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.text.TextFragment this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.text.TextFragment;

        $stack1 = this.<org.jfree.chart.text.TextFragment: java.awt.Paint paint>;

        return $stack1;
    }

    public float getBaselineOffset()
    {
        org.jfree.chart.text.TextFragment this;
        float $stack1;

        this := @this: org.jfree.chart.text.TextFragment;

        $stack1 = this.<org.jfree.chart.text.TextFragment: float baselineOffset>;

        return $stack1;
    }

    public void draw(java.awt.Graphics2D, float, float, org.jfree.chart.ui.TextAnchor, float, float, double)
    {
        java.awt.Graphics2D g2;
        org.jfree.chart.text.TextFragment this;
        java.awt.Font $stack9;
        java.awt.Paint $stack10;
        float anchorX, anchorY, $stack11, rotateX, rotateY, $stack12;
        org.jfree.chart.ui.TextAnchor anchor;
        double angle;
        java.lang.String $stack13;

        this := @this: org.jfree.chart.text.TextFragment;

        g2 := @parameter0: java.awt.Graphics2D;

        anchorX := @parameter1: float;

        anchorY := @parameter2: float;

        anchor := @parameter3: org.jfree.chart.ui.TextAnchor;

        rotateX := @parameter4: float;

        rotateY := @parameter5: float;

        angle := @parameter6: double;

        $stack9 = this.<org.jfree.chart.text.TextFragment: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack9);

        $stack10 = this.<org.jfree.chart.text.TextFragment: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack10);

        $stack13 = this.<org.jfree.chart.text.TextFragment: java.lang.String text>;

        $stack11 = this.<org.jfree.chart.text.TextFragment: float baselineOffset>;

        $stack12 = anchorY + $stack11;

        staticinvoke <org.jfree.chart.text.TextUtils: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.ui.TextAnchor,double,float,float)>($stack13, g2, anchorX, $stack12, anchor, angle, rotateX, rotateY);

        return;
    }

    public org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)
    {
        java.awt.Graphics2D g2;
        org.jfree.chart.text.TextFragment this;
        java.awt.Font $stack5;
        java.awt.FontMetrics fm;
        java.lang.String $stack7;
        java.awt.geom.Rectangle2D bounds;
        org.jfree.chart.ui.Size2D $stack9;
        double $stack10, $stack11;

        this := @this: org.jfree.chart.text.TextFragment;

        g2 := @parameter0: java.awt.Graphics2D;

        $stack5 = this.<org.jfree.chart.text.TextFragment: java.awt.Font font>;

        fm = virtualinvoke g2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($stack5);

        $stack7 = this.<org.jfree.chart.text.TextFragment: java.lang.String text>;

        bounds = staticinvoke <org.jfree.chart.text.TextUtils: java.awt.geom.Rectangle2D getTextBounds(java.lang.String,java.awt.Graphics2D,java.awt.FontMetrics)>($stack7, g2, fm);

        $stack9 = new org.jfree.chart.ui.Size2D;

        $stack10 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack11 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getHeight()>();

        specialinvoke $stack9.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack10, $stack11);

        return $stack9;
    }

    public float calculateBaselineOffset(java.awt.Graphics2D, org.jfree.chart.ui.TextAnchor)
    {
        java.awt.Graphics2D g2;
        org.jfree.chart.text.TextFragment this;
        java.awt.Font $stack6;
        java.awt.FontMetrics fm;
        java.awt.font.LineMetrics lm;
        org.jfree.chart.ui.TextAnchor anchor;
        boolean $stack9, $stack10, $stack11, $stack12;
        float $stack13, $stack14, $stack15, $stack17, $stack18, $stack19, $stack20, $stack21, result;

        this := @this: org.jfree.chart.text.TextFragment;

        g2 := @parameter0: java.awt.Graphics2D;

        anchor := @parameter1: org.jfree.chart.ui.TextAnchor;

        result = 0.0F;

        $stack6 = this.<org.jfree.chart.text.TextFragment: java.awt.Font font>;

        fm = virtualinvoke g2.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($stack6);

        lm = virtualinvoke fm.<java.awt.FontMetrics: java.awt.font.LineMetrics getLineMetrics(java.lang.String,java.awt.Graphics)>("ABCxyz", g2);

        $stack9 = virtualinvoke anchor.<org.jfree.chart.ui.TextAnchor: boolean isTop()>();

        if $stack9 == 0 goto label1;

        result = virtualinvoke lm.<java.awt.font.LineMetrics: float getAscent()>();

        goto label4;

     label1:
        $stack10 = virtualinvoke anchor.<org.jfree.chart.ui.TextAnchor: boolean isHalfAscent()>();

        if $stack10 == 0 goto label2;

        $stack21 = virtualinvoke lm.<java.awt.font.LineMetrics: float getAscent()>();

        result = $stack21 / 2.0F;

        goto label4;

     label2:
        $stack11 = virtualinvoke anchor.<org.jfree.chart.ui.TextAnchor: boolean isVerticalCenter()>();

        if $stack11 == 0 goto label3;

        $stack17 = virtualinvoke lm.<java.awt.font.LineMetrics: float getAscent()>();

        $stack18 = $stack17 / 2.0F;

        $stack19 = virtualinvoke lm.<java.awt.font.LineMetrics: float getDescent()>();

        $stack20 = $stack19 / 2.0F;

        result = $stack18 - $stack20;

        goto label4;

     label3:
        $stack12 = virtualinvoke anchor.<org.jfree.chart.ui.TextAnchor: boolean isBottom()>();

        if $stack12 == 0 goto label4;

        $stack13 = virtualinvoke lm.<java.awt.font.LineMetrics: float getDescent()>();

        $stack14 = neg $stack13;

        $stack15 = virtualinvoke lm.<java.awt.font.LineMetrics: float getLeading()>();

        result = $stack14 - $stack15;

     label4:
        return result;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.text.TextFragment this, tf;
        boolean $stack3, $stack6, $stack9, $stack12;
        java.lang.String $stack4, $stack5;
        java.awt.Font $stack7, $stack8;
        java.awt.Paint $stack10, $stack11;

        this := @this: org.jfree.chart.text.TextFragment;

        obj := @parameter0: java.lang.Object;

        if obj != null goto label1;

        return 0;

     label1:
        if obj != this goto label2;

        return 1;

     label2:
        $stack3 = obj instanceof org.jfree.chart.text.TextFragment;

        if $stack3 == 0 goto label6;

        tf = (org.jfree.chart.text.TextFragment) obj;

        $stack5 = this.<org.jfree.chart.text.TextFragment: java.lang.String text>;

        $stack4 = tf.<org.jfree.chart.text.TextFragment: java.lang.String text>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.text.TextFragment: java.awt.Font font>;

        $stack7 = tf.<org.jfree.chart.text.TextFragment: java.awt.Font font>;

        $stack9 = virtualinvoke $stack8.<java.awt.Font: boolean equals(java.lang.Object)>($stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<org.jfree.chart.text.TextFragment: java.awt.Paint paint>;

        $stack10 = tf.<org.jfree.chart.text.TextFragment: java.awt.Paint paint>;

        $stack12 = virtualinvoke $stack11.<java.lang.Object: boolean equals(java.lang.Object)>($stack10);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        return 1;

     label6:
        return 0;
    }

    public int hashCode()
    {
        org.jfree.chart.text.TextFragment this;
        java.lang.String $stack2, $stack17;
        java.awt.Font $stack3, $stack11;
        int $stack4, $stack6, $stack18, result, $stack12, $stack8;
        java.awt.Paint $stack5, $stack7;

        this := @this: org.jfree.chart.text.TextFragment;

        $stack2 = this.<org.jfree.chart.text.TextFragment: java.lang.String text>;

        if $stack2 == null goto label1;

        $stack17 = this.<org.jfree.chart.text.TextFragment: java.lang.String text>;

        $stack18 = virtualinvoke $stack17.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $stack18 = 0;

     label2:
        $stack4 = 29 * $stack18;

        $stack3 = this.<org.jfree.chart.text.TextFragment: java.awt.Font font>;

        if $stack3 == null goto label3;

        $stack11 = this.<org.jfree.chart.text.TextFragment: java.awt.Font font>;

        $stack12 = virtualinvoke $stack11.<java.awt.Font: int hashCode()>();

        goto label4;

     label3:
        $stack12 = 0;

     label4:
        result = $stack4 + $stack12;

        $stack6 = 29 * result;

        $stack5 = this.<org.jfree.chart.text.TextFragment: java.awt.Paint paint>;

        if $stack5 == null goto label5;

        $stack7 = this.<org.jfree.chart.text.TextFragment: java.awt.Paint paint>;

        $stack8 = virtualinvoke $stack7.<java.lang.Object: int hashCode()>();

        goto label6;

     label5:
        $stack8 = 0;

     label6:
        result = $stack6 + $stack8;

        return result;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.text.TextFragment this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.text.TextFragment;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.text.TextFragment: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.text.TextFragment this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.text.TextFragment;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.text.TextFragment: java.awt.Paint paint> = $stack2;

        return;
    }

    static void <clinit>()
    {
        java.awt.Font $stack0;
        java.awt.Color $stack1;

        <org.jfree.chart.text.TextFragment: long serialVersionUID> = 4465945952903143262L;

        $stack0 = new java.awt.Font;

        specialinvoke $stack0.<java.awt.Font: void <init>(java.lang.String,int,int)>("Serif", 0, 12);

        <org.jfree.chart.text.TextFragment: java.awt.Font DEFAULT_FONT> = $stack0;

        $stack1 = <java.awt.Color: java.awt.Color BLACK>;

        <org.jfree.chart.text.TextFragment: java.awt.Paint DEFAULT_PAINT> = $stack1;

        return;
    }
}
