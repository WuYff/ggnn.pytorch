public class org.jfree.chart.plot.PlotRenderingInfo extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private org.jfree.chart.ChartRenderingInfo owner;
    private transient java.awt.geom.Rectangle2D plotArea;
    private transient java.awt.geom.Rectangle2D dataArea;
    private java.util.List subplotInfo;

    public void <init>(org.jfree.chart.ChartRenderingInfo)
    {
        org.jfree.chart.plot.PlotRenderingInfo this;
        org.jfree.chart.ChartRenderingInfo owner;
        java.awt.geom.Rectangle2D$Double $stack2;
        java.util.ArrayList $stack3;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        owner := @parameter0: org.jfree.chart.ChartRenderingInfo;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo owner> = owner;

        $stack2 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack2.<java.awt.geom.Rectangle2D$Double: void <init>()>();

        this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea> = $stack2;

        $stack3 = new java.util.ArrayList;

        specialinvoke $stack3.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo> = $stack3;

        return;
    }

    public org.jfree.chart.ChartRenderingInfo getOwner()
    {
        org.jfree.chart.plot.PlotRenderingInfo this;
        org.jfree.chart.ChartRenderingInfo $stack1;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        $stack1 = this.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo owner>;

        return $stack1;
    }

    public java.awt.geom.Rectangle2D getPlotArea()
    {
        org.jfree.chart.plot.PlotRenderingInfo this;
        java.awt.geom.Rectangle2D $stack1;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        $stack1 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea>;

        return $stack1;
    }

    public void setPlotArea(java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.plot.PlotRenderingInfo this;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        area := @parameter0: java.awt.geom.Rectangle2D;

        this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea> = area;

        return;
    }

    public java.awt.geom.Rectangle2D getDataArea()
    {
        org.jfree.chart.plot.PlotRenderingInfo this;
        java.awt.geom.Rectangle2D $stack1;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        $stack1 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea>;

        return $stack1;
    }

    public void setDataArea(java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.plot.PlotRenderingInfo this;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        area := @parameter0: java.awt.geom.Rectangle2D;

        this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea> = area;

        return;
    }

    public int getSubplotCount()
    {
        org.jfree.chart.plot.PlotRenderingInfo this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        $stack1 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public void addSubplotInfo(org.jfree.chart.plot.PlotRenderingInfo)
    {
        org.jfree.chart.plot.PlotRenderingInfo this, info;
        java.util.List $stack2;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        info := @parameter0: org.jfree.chart.plot.PlotRenderingInfo;

        $stack2 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(info);

        return;
    }

    public org.jfree.chart.plot.PlotRenderingInfo getSubplotInfo(int)
    {
        org.jfree.chart.plot.PlotRenderingInfo this, $stack4;
        int index;
        java.util.List $stack2;
        java.lang.Object $stack3;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        index := @parameter0: int;

        $stack2 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(index);

        $stack4 = (org.jfree.chart.plot.PlotRenderingInfo) $stack3;

        return $stack4;
    }

    public int getSubplotIndex(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D source;
        org.jfree.chart.plot.PlotRenderingInfo this, info;
        int subplotCount, i;
        java.awt.geom.Rectangle2D area;
        boolean $stack9;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        source := @parameter0: java.awt.geom.Point2D;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(source, "source");

        subplotCount = virtualinvoke this.<org.jfree.chart.plot.PlotRenderingInfo: int getSubplotCount()>();

        i = 0;

     label1:
        if i >= subplotCount goto label3;

        info = virtualinvoke this.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo getSubplotInfo(int)>(i);

        area = virtualinvoke info.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D getDataArea()>();

        $stack9 = virtualinvoke area.<java.awt.geom.Rectangle2D: boolean contains(java.awt.geom.Point2D)>(source);

        if $stack9 == 0 goto label2;

        return i;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return -1;
    }

    public boolean equals(java.lang.Object)
    {
        org.jfree.chart.plot.PlotRenderingInfo this, that;
        java.lang.Object obj;
        boolean $stack3, $stack6, $stack9, $stack12;
        java.awt.geom.Rectangle2D $stack4, $stack5, $stack7, $stack8;
        java.util.List $stack10, $stack11;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.plot.PlotRenderingInfo;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.plot.PlotRenderingInfo) obj;

        $stack5 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea>;

        $stack4 = that.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea>;

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea>;

        $stack7 = that.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea>;

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack10 = that.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack11, $stack10);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.plot.PlotRenderingInfo this;
        java.awt.geom.Rectangle2D $stack2, $stack5;
        int $stack3, $stack4, $stack6, $stack7, $stack9, $stack10, hash#2;
        java.util.List $stack8;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        $stack3 = 53 * 5;

        $stack2 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea>;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack2);

        hash#2 = $stack3 + $stack4;

        $stack6 = 53 * hash#2;

        $stack5 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea>;

        $stack7 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack5);

        hash#2 = $stack6 + $stack7;

        $stack9 = 53 * hash#2;

        $stack8 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack10 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack8);

        hash#2 = $stack9 + $stack10;

        return hash#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.plot.PlotRenderingInfo this, clone;
        java.lang.Object $stack3, $stack13, $stack14, $stack19, $stack25;
        java.awt.geom.Rectangle2D $stack4, $stack5, $stack18, $stack20, $stack24, $stack26;
        java.util.ArrayList $stack6;
        java.util.List $stack7, $stack11, $stack12, $stack9;
        int $stack8, i, $stack10;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        $stack3 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        clone = (org.jfree.chart.plot.PlotRenderingInfo) $stack3;

        $stack4 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea>;

        if $stack4 == null goto label1;

        $stack24 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea>;

        $stack25 = virtualinvoke $stack24.<java.awt.geom.Rectangle2D: java.lang.Object clone()>();

        $stack26 = (java.awt.geom.Rectangle2D) $stack25;

        clone.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea> = $stack26;

     label1:
        $stack5 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea>;

        if $stack5 == null goto label2;

        $stack18 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea>;

        $stack19 = virtualinvoke $stack18.<java.awt.geom.Rectangle2D: java.lang.Object clone()>();

        $stack20 = (java.awt.geom.Rectangle2D) $stack19;

        clone.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea> = $stack20;

     label2:
        $stack6 = new java.util.ArrayList;

        $stack7 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack8 = interfaceinvoke $stack7.<java.util.List: int size()>();

        specialinvoke $stack6.<java.util.ArrayList: void <init>(int)>($stack8);

        clone.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo> = $stack6;

        i = 0;

     label3:
        $stack9 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack10 = interfaceinvoke $stack9.<java.util.List: int size()>();

        if i >= $stack10 goto label4;

        $stack12 = clone.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack11 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.util.List subplotInfo>;

        $stack13 = interfaceinvoke $stack11.<java.util.List: java.lang.Object get(int)>(i);

        $stack14 = staticinvoke <org.jfree.chart.util.CloneUtils: java.lang.Object clone(java.lang.Object)>($stack13);

        interfaceinvoke $stack12.<java.util.List: boolean add(java.lang.Object)>($stack14);

        i = i + 1;

        goto label3;

     label4:
        return clone;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.plot.PlotRenderingInfo this;
        java.awt.geom.Rectangle2D $stack2, $stack3;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.plot.PlotRenderingInfo this;
        java.awt.Shape $stack2, $stack4;
        java.awt.geom.Rectangle2D $stack3, $stack5;

        this := @this: org.jfree.chart.plot.PlotRenderingInfo;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        $stack3 = (java.awt.geom.Rectangle2D) $stack2;

        this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D dataArea> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        $stack5 = (java.awt.geom.Rectangle2D) $stack4;

        this.<org.jfree.chart.plot.PlotRenderingInfo: java.awt.geom.Rectangle2D plotArea> = $stack5;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.plot.PlotRenderingInfo: long serialVersionUID> = 8446720134379617220L;

        return;
    }
}
