public class org.jfree.chart.renderer.xy.XYBarRenderer extends org.jfree.chart.renderer.xy.AbstractXYItemRenderer implements org.jfree.chart.renderer.xy.XYItemRenderer, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private static org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter;
    private static boolean defaultShadowsVisible;
    private double base;
    private boolean useYInterval;
    private double margin;
    private boolean drawBarOutline;
    private org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer;
    private transient java.awt.Shape legendBar;
    private org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPositionFallback;
    private org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPositionFallback;
    private org.jfree.chart.renderer.xy.XYBarPainter barPainter;
    private boolean shadowsVisible;
    private double shadowXOffset;
    private double shadowYOffset;
    private double barAlignmentFactor;

    public static org.jfree.chart.renderer.xy.XYBarPainter getDefaultBarPainter()
    {
        org.jfree.chart.renderer.xy.XYBarPainter $stack0;

        $stack0 = <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter>;

        return $stack0;
    }

    public static void setDefaultBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)
    {
        org.jfree.chart.renderer.xy.XYBarPainter painter;

        painter := @parameter0: org.jfree.chart.renderer.xy.XYBarPainter;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(painter, "painter");

        <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter> = painter;

        return;
    }

    public static boolean getDefaultShadowsVisible()
    {
        boolean $stack0;

        $stack0 = <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible>;

        return $stack0;
    }

    public static void setDefaultShadowsVisible(boolean)
    {
        boolean visible;

        visible := @parameter0: boolean;

        <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible> = visible;

        return;
    }

    public void <init>()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        specialinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void <init>(double)>(0.0);

        return;
    }

    public void <init>(double)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double margin;
        org.jfree.chart.ui.StandardGradientPaintTransformer $stack3;
        java.awt.geom.Rectangle2D$Double $stack4;
        org.jfree.chart.renderer.xy.XYBarPainter $stack5;
        boolean $stack6;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        margin := @parameter0: double;

        specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void <init>()>();

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double margin> = margin;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double base> = 0.0;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval> = 0;

        $stack3 = new org.jfree.chart.ui.StandardGradientPaintTransformer;

        specialinvoke $stack3.<org.jfree.chart.ui.StandardGradientPaintTransformer: void <init>()>();

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer> = $stack3;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean drawBarOutline> = 0;

        $stack4 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack4.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(-3.0, -5.0, 6.0, 10.0);

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar> = $stack4;

        $stack5 = staticinvoke <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter getDefaultBarPainter()>();

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter barPainter> = $stack5;

        $stack6 = staticinvoke <org.jfree.chart.renderer.xy.XYBarRenderer: boolean getDefaultShadowsVisible()>();

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean shadowsVisible> = $stack6;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowXOffset> = 4.0;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowYOffset> = 4.0;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor> = -1.0;

        return;
    }

    public double getBase()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double base>;

        return $stack1;
    }

    public void setBase(double)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double base;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        base := @parameter0: double;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double base> = base;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public boolean getUseYInterval()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval>;

        return $stack1;
    }

    public void setUseYInterval(boolean)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        boolean use, $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        use := @parameter0: boolean;

        $stack2 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval>;

        if $stack2 == use goto label1;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval> = use;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

     label1:
        return;
    }

    public double getMargin()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double margin>;

        return $stack1;
    }

    public void setMargin(double)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double margin;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        margin := @parameter0: double;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double margin> = margin;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public boolean isDrawBarOutline()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean drawBarOutline>;

        return $stack1;
    }

    public void setDrawBarOutline(boolean)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        boolean draw;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        draw := @parameter0: boolean;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean drawBarOutline> = draw;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.ui.GradientPaintTransformer getGradientPaintTransformer()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.ui.GradientPaintTransformer $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer>;

        return $stack1;
    }

    public void setGradientPaintTransformer(org.jfree.chart.ui.GradientPaintTransformer)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.ui.GradientPaintTransformer transformer;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        transformer := @parameter0: org.jfree.chart.ui.GradientPaintTransformer;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer> = transformer;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Shape getLegendBar()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        java.awt.Shape $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar>;

        return $stack1;
    }

    public void setLegendBar(java.awt.Shape)
    {
        java.awt.Shape bar;
        org.jfree.chart.renderer.xy.XYBarRenderer this;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        bar := @parameter0: java.awt.Shape;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(bar, "bar");

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar> = bar;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.labels.ItemLabelPosition getPositiveItemLabelPositionFallback()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.labels.ItemLabelPosition $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPositionFallback>;

        return $stack1;
    }

    public void setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.labels.ItemLabelPosition position;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        position := @parameter0: org.jfree.chart.labels.ItemLabelPosition;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPositionFallback> = position;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.labels.ItemLabelPosition getNegativeItemLabelPositionFallback()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.labels.ItemLabelPosition $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPositionFallback>;

        return $stack1;
    }

    public void setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.labels.ItemLabelPosition position;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        position := @parameter0: org.jfree.chart.labels.ItemLabelPosition;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPositionFallback> = position;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.renderer.xy.XYBarPainter getBarPainter()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.renderer.xy.XYBarPainter $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter barPainter>;

        return $stack1;
    }

    public void setBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)
    {
        org.jfree.chart.renderer.xy.XYBarPainter painter;
        org.jfree.chart.renderer.xy.XYBarRenderer this;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        painter := @parameter0: org.jfree.chart.renderer.xy.XYBarPainter;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(painter, "painter");

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter barPainter> = painter;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public boolean getShadowsVisible()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean shadowsVisible>;

        return $stack1;
    }

    public void setShadowVisible(boolean)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        boolean visible;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean shadowsVisible> = visible;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public double getShadowXOffset()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowXOffset>;

        return $stack1;
    }

    public void setShadowXOffset(double)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double offset;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        offset := @parameter0: double;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowXOffset> = offset;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public double getShadowYOffset()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowYOffset>;

        return $stack1;
    }

    public void setShadowYOffset(double)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double offset;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        offset := @parameter0: double;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowYOffset> = offset;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public double getBarAlignmentFactor()
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor>;

        return $stack1;
    }

    public void setBarAlignmentFactor(double)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double factor;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        factor := @parameter0: double;

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor> = factor;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.renderer.xy.XYItemRendererState initialise(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.data.xy.XYDataset, org.jfree.chart.plot.PlotRenderingInfo)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer$XYBarRendererState $stack8;
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.plot.PlotRenderingInfo info;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.data.xy.XYDataset dataset;
        int $stack9;
        org.jfree.chart.axis.ValueAxis rangeAxis;
        java.awt.geom.Rectangle2D dataArea;
        double $stack11, $stack13;
        org.jfree.chart.ui.RectangleEdge $stack12;
        java.awt.Graphics2D g2;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        dataArea := @parameter1: java.awt.geom.Rectangle2D;

        plot := @parameter2: org.jfree.chart.plot.XYPlot;

        dataset := @parameter3: org.jfree.data.xy.XYDataset;

        info := @parameter4: org.jfree.chart.plot.PlotRenderingInfo;

        $stack8 = new org.jfree.chart.renderer.xy.XYBarRenderer$XYBarRendererState;

        specialinvoke $stack8.<org.jfree.chart.renderer.xy.XYBarRenderer$XYBarRendererState: void <init>(org.jfree.chart.renderer.xy.XYBarRenderer,org.jfree.chart.plot.PlotRenderingInfo)>(this, info);

        $stack9 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: int indexOf(org.jfree.data.xy.XYDataset)>(dataset);

        rangeAxis = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxisForDataset(int)>($stack9);

        $stack11 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double base>;

        $stack12 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        $stack13 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack11, dataArea, $stack12);

        virtualinvoke $stack8.<org.jfree.chart.renderer.xy.XYBarRenderer$XYBarRendererState: void setG2Base(double)>($stack13);

        return $stack8;
    }

    public org.jfree.chart.LegendItem getLegendItem(int, int)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.chart.plot.XYPlot xyplot;
        int datasetIndex, series;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.chart.labels.XYSeriesLabelGenerator lg, $stack20, $stack21, $stack50, $stack61;
        java.lang.String label, toolTipText, urlText;
        java.awt.Shape shape;
        java.awt.Paint paint, outlinePaint, labelPaint;
        java.awt.Stroke outlineStroke;
        boolean $stack25;
        org.jfree.chart.LegendItem $stack26, $stack43, result;
        java.awt.Font $stack27;
        java.lang.Comparable $stack29;
        org.jfree.chart.ui.GradientPaintTransformer $stack30, $stack31;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        datasetIndex := @parameter0: int;

        series := @parameter1: int;

        xyplot = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.plot.XYPlot getPlot()>();

        if xyplot != null goto label1;

        return null;

     label1:
        dataset = virtualinvoke xyplot.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(datasetIndex);

        if dataset != null goto label2;

        return null;

     label2:
        lg = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemLabelGenerator()>();

        label = interfaceinvoke lg.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

        toolTipText = null;

        $stack20 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>();

        if $stack20 == null goto label3;

        $stack61 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>();

        toolTipText = interfaceinvoke $stack61.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

     label3:
        urlText = null;

        $stack21 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>();

        if $stack21 == null goto label4;

        $stack50 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>();

        urlText = interfaceinvoke $stack50.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

     label4:
        shape = this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar>;

        paint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Paint lookupSeriesPaint(int)>(series);

        outlinePaint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Paint lookupSeriesOutlinePaint(int)>(series);

        outlineStroke = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(series);

        $stack25 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean drawBarOutline>;

        if $stack25 == 0 goto label5;

        $stack43 = new org.jfree.chart.LegendItem;

        specialinvoke $stack43.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint,java.awt.Stroke,java.awt.Paint)>(label, label, toolTipText, urlText, shape, paint, outlineStroke, outlinePaint);

        result = $stack43;

        goto label6;

     label5:
        $stack26 = new org.jfree.chart.LegendItem;

        specialinvoke $stack26.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)>(label, label, toolTipText, urlText, shape, paint);

        result = $stack26;

     label6:
        $stack27 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Font lookupLegendTextFont(int)>(series);

        virtualinvoke result.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($stack27);

        labelPaint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Paint lookupLegendTextPaint(int)>(series);

        if labelPaint == null goto label7;

        virtualinvoke result.<org.jfree.chart.LegendItem: void setLabelPaint(java.awt.Paint)>(labelPaint);

     label7:
        virtualinvoke result.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(dataset);

        virtualinvoke result.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(datasetIndex);

        $stack29 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(series);

        virtualinvoke result.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($stack29);

        virtualinvoke result.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(series);

        $stack30 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer getGradientPaintTransformer()>();

        if $stack30 == null goto label8;

        $stack31 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer getGradientPaintTransformer()>();

        virtualinvoke result.<org.jfree.chart.LegendItem: void setFillPaintTransformer(org.jfree.chart.ui.GradientPaintTransformer)>($stack31);

     label8:
        return result;
    }

    public void drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotRenderingInfo, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, org.jfree.chart.plot.CrosshairState, int)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        int series, item, datasetIndex, pass;
        boolean $stack54, $stack55, $stack57, $stack58, $stack61, $stack69, $stack71, $stack74, $stack88, $stack89, positive, inverted, $stack92, $stack94, $stack97, $stack147, $stack216, $stack220, $stack173, $stack93, $stack163, $stack96, $stack142;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.data.xy.IntervalXYDataset intervalDataset;
        byte $stack59, $stack72, $stack76, $stack107, $stack196, $stack86, $stack90;
        org.jfree.chart.axis.ValueAxis rangeAxis, domainAxis;
        org.jfree.data.Range $stack60, $stack73, $stack215, $stack219;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.chart.ui.RectangleEdge $stack62, $stack64, $stack162, x#12, barBase, $stack101;
        double translatedValue0, translatedValue1, $stack75, translatedStartX, translatedEndX, y1, transX1, transY1, $stack176, $stack178, $stack181, $stack184, $stack186, $stack189, $stack190, $stack191, $stack195, interval, $stack213, $stack214, value0, value1, bottom, top, startX, endX, x, $stack80, $stack82, translatedWidth, left, $stack85, cut, $stack98, generator#116;
        org.jfree.chart.plot.PlotOrientation orientation, $stack104;
        org.jfree.chart.renderer.xy.XYItemRendererState state;
        java.awt.Graphics2D g2;
        org.jfree.chart.plot.CrosshairState crosshairState;
        org.jfree.chart.entity.EntityCollection entities;
        java.awt.geom.Rectangle2D$Double $stack141, $stack161, $stack180, $stack188, cut#62;
        org.jfree.chart.renderer.xy.XYBarPainter $stack148, $stack95;
        java.lang.Comparable $stack164;
        org.jfree.chart.plot.PlotRenderingInfo info;
        org.jfree.chart.labels.XYItemLabelGenerator generator;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        state := @parameter1: org.jfree.chart.renderer.xy.XYItemRendererState;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        info := @parameter3: org.jfree.chart.plot.PlotRenderingInfo;

        plot := @parameter4: org.jfree.chart.plot.XYPlot;

        domainAxis := @parameter5: org.jfree.chart.axis.ValueAxis;

        rangeAxis := @parameter6: org.jfree.chart.axis.ValueAxis;

        dataset := @parameter7: org.jfree.data.xy.XYDataset;

        series := @parameter8: int;

        item := @parameter9: int;

        crosshairState := @parameter10: org.jfree.chart.plot.CrosshairState;

        pass := @parameter11: int;

        $stack54 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean getItemVisible(int,int)>(series, item);

        if $stack54 != 0 goto label01;

        return;

     label01:
        intervalDataset = (org.jfree.data.xy.IntervalXYDataset) dataset;

        $stack55 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval>;

        if $stack55 == 0 goto label02;

        value0 = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(series, item);

        value1 = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getEndYValue(int,int)>(series, item);

        goto label03;

     label02:
        value0 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double base>;

        value1 = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getYValue(int,int)>(series, item);

     label03:
        $stack57 = staticinvoke <java.lang.Double: boolean isNaN(double)>(value0);

        if $stack57 != 0 goto label04;

        $stack58 = staticinvoke <java.lang.Double: boolean isNaN(double)>(value1);

        if $stack58 == 0 goto label05;

     label04:
        return;

     label05:
        $stack59 = value0 cmpg value1;

        if $stack59 > 0 goto label06;

        $stack219 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>();

        $stack220 = virtualinvoke $stack219.<org.jfree.data.Range: boolean intersects(double,double)>(value0, value1);

        if $stack220 != 0 goto label07;

        return;

     label06:
        $stack60 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>();

        $stack61 = virtualinvoke $stack60.<org.jfree.data.Range: boolean intersects(double,double)>(value1, value0);

        if $stack61 != 0 goto label07;

        return;

     label07:
        $stack62 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        translatedValue0 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(value0, dataArea, $stack62);

        $stack64 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        translatedValue1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(value1, dataArea, $stack64);

        bottom = staticinvoke <java.lang.Math: double min(double,double)>(translatedValue0, translatedValue1);

        top = staticinvoke <java.lang.Math: double max(double,double)>(translatedValue0, translatedValue1);

        startX = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getStartXValue(int,int)>(series, item);

        $stack69 = staticinvoke <java.lang.Double: boolean isNaN(double)>(startX);

        if $stack69 == 0 goto label08;

        return;

     label08:
        endX = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getEndXValue(int,int)>(series, item);

        $stack71 = staticinvoke <java.lang.Double: boolean isNaN(double)>(endX);

        if $stack71 == 0 goto label09;

        return;

     label09:
        $stack72 = startX cmpg endX;

        if $stack72 > 0 goto label10;

        $stack215 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>();

        $stack216 = virtualinvoke $stack215.<org.jfree.data.Range: boolean intersects(double,double)>(startX, endX);

        if $stack216 != 0 goto label11;

        return;

     label10:
        $stack73 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: org.jfree.data.Range getRange()>();

        $stack74 = virtualinvoke $stack73.<org.jfree.data.Range: boolean intersects(double,double)>(endX, startX);

        if $stack74 != 0 goto label11;

        return;

     label11:
        $stack75 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor>;

        $stack76 = $stack75 cmpl 0.0;

        if $stack76 < 0 goto label12;

        $stack195 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor>;

        $stack196 = $stack195 cmpg 1.0;

        if $stack196 > 0 goto label12;

        x = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getXValue(int,int)>(series, item);

        interval = endX - startX;

        $stack213 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor>;

        $stack214 = interval * $stack213;

        startX = x - $stack214;

        endX = startX + interval;

     label12:
        x#12 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        translatedStartX = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(startX, dataArea, x#12);

        translatedEndX = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(endX, dataArea, x#12);

        $stack80 = translatedEndX - translatedStartX;

        $stack82 = staticinvoke <java.lang.Math: double abs(double)>($stack80);

        translatedWidth = staticinvoke <java.lang.Math: double max(double,double)>(1.0, $stack82);

        left = staticinvoke <java.lang.Math: double min(double,double)>(translatedStartX, translatedEndX);

        $stack85 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: double getMargin()>();

        $stack86 = $stack85 cmpl 0.0;

        if $stack86 <= 0 goto label13;

        $stack190 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: double getMargin()>();

        cut = translatedWidth * $stack190;

        translatedWidth = translatedWidth - cut;

        $stack191 = cut / 2.0;

        left = left + $stack191;

     label13:
        cut#62 = null;

        orientation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack88 = virtualinvoke orientation.<org.jfree.chart.plot.PlotOrientation: boolean isHorizontal()>();

        if $stack88 == 0 goto label14;

        $stack184 = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getMinX()>();

        bottom = staticinvoke <java.lang.Math: double max(double,double)>(bottom, $stack184);

        $stack186 = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getMaxX()>();

        top = staticinvoke <java.lang.Math: double min(double,double)>(top, $stack186);

        $stack188 = new java.awt.geom.Rectangle2D$Double;

        $stack189 = top - bottom;

        specialinvoke $stack188.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(bottom, left, $stack189, translatedWidth);

        cut#62 = $stack188;

        goto label15;

     label14:
        $stack89 = virtualinvoke orientation.<org.jfree.chart.plot.PlotOrientation: boolean isVertical()>();

        if $stack89 == 0 goto label15;

        $stack176 = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getMinY()>();

        bottom = staticinvoke <java.lang.Math: double max(double,double)>(bottom, $stack176);

        $stack178 = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getMaxY()>();

        top = staticinvoke <java.lang.Math: double min(double,double)>(top, $stack178);

        $stack180 = new java.awt.geom.Rectangle2D$Double;

        $stack181 = top - bottom;

        specialinvoke $stack180.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(left, bottom, translatedWidth, $stack181);

        cut#62 = $stack180;

     label15:
        $stack90 = value1 cmpl 0.0;

        if $stack90 <= 0 goto label16;

        $stack173 = 1;

        goto label17;

     label16:
        $stack173 = 0;

     label17:
        positive = $stack173;

        inverted = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: boolean isInverted()>();

        $stack92 = virtualinvoke orientation.<org.jfree.chart.plot.PlotOrientation: boolean isHorizontal()>();

        if $stack92 == 0 goto label21;

        if $stack173 == 0 goto label18;

        if inverted != 0 goto label19;

     label18:
        if positive != 0 goto label20;

        if inverted != 0 goto label20;

     label19:
        barBase = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge RIGHT>;

        goto label25;

     label20:
        barBase = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        goto label25;

     label21:
        if $stack173 == 0 goto label22;

        if inverted == 0 goto label23;

     label22:
        if positive != 0 goto label24;

        if inverted == 0 goto label24;

     label23:
        barBase = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge BOTTOM>;

        goto label25;

     label24:
        barBase = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

     label25:
        $stack93 = virtualinvoke state.<org.jfree.chart.renderer.xy.XYItemRendererState: boolean getElementHinting()>();

        if $stack93 == 0 goto label26;

        $stack164 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(series);

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void beginElementGroup(java.awt.Graphics2D,java.lang.Comparable,int)>(g2, $stack164, item);

     label26:
        $stack94 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean getShadowsVisible()>();

        if $stack94 == 0 goto label29;

        $stack148 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter barPainter>;

        $stack161 = cut#62;

        $stack162 = barBase;

        $stack147 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval>;

        if $stack147 != 0 goto label27;

        $stack163 = 1;

        goto label28;

     label27:
        $stack163 = 0;

     label28:
        interfaceinvoke $stack148.<org.jfree.chart.renderer.xy.XYBarPainter: void paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,java.awt.geom.RectangularShape,org.jfree.chart.ui.RectangleEdge,boolean)>(g2, this, series, item, $stack161, $stack162, $stack163);

     label29:
        $stack95 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter barPainter>;

        interfaceinvoke $stack95.<org.jfree.chart.renderer.xy.XYBarPainter: void paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYBarRenderer,int,int,java.awt.geom.RectangularShape,org.jfree.chart.ui.RectangleEdge)>(g2, this, series, item, cut#62, barBase);

        $stack96 = virtualinvoke state.<org.jfree.chart.renderer.xy.XYItemRendererState: boolean getElementHinting()>();

        if $stack96 == 0 goto label30;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void endElementGroup(java.awt.Graphics2D)>(g2);

     label30:
        $stack97 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean isItemLabelVisible(int,int)>(series, item);

        if $stack97 == 0 goto label33;

        generator = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.XYItemLabelGenerator getItemLabelGenerator(int,int)>(series, item);

        $stack141 = cut#62;

        $stack107 = value1 cmpg 0.0;

        if $stack107 >= 0 goto label31;

        $stack142 = 1;

        goto label32;

     label31:
        $stack142 = 0;

     label32:
        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void drawItemLabel(java.awt.Graphics2D,org.jfree.data.xy.XYDataset,int,int,org.jfree.chart.plot.XYPlot,org.jfree.chart.labels.XYItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)>(g2, dataset, series, item, plot, generator, $stack141, $stack142);

     label33:
        $stack98 = startX + endX;

        generator#116 = $stack98 / 2.0;

        y1 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(series, item);

        transX1 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(generator#116, dataArea, x#12);

        $stack101 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transY1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(y1, dataArea, $stack101);

        datasetIndex = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: int indexOf(org.jfree.data.xy.XYDataset)>(dataset);

        $stack104 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,double,double,org.jfree.chart.plot.PlotOrientation)>(crosshairState, generator#116, y1, datasetIndex, transX1, transY1, $stack104);

        entities = virtualinvoke state.<org.jfree.chart.renderer.xy.XYItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

        if entities == null goto label34;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,double,double)>(entities, cut#62, dataset, series, item, 0.0, 0.0);

     label34:
        return;
    }

    protected void drawItemLabel(java.awt.Graphics2D, org.jfree.data.xy.XYDataset, int, int, org.jfree.chart.plot.XYPlot, org.jfree.chart.labels.XYItemLabelGenerator, java.awt.geom.Rectangle2D, boolean)
    {
        org.jfree.chart.labels.XYItemLabelGenerator generator;
        org.jfree.data.xy.XYDataset dataset;
        int series, item;
        java.lang.String label;
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        java.awt.Font labelFont;
        java.awt.Graphics2D g2;
        java.awt.Paint paint;
        boolean negative, $stack23, $stack41;
        org.jfree.chart.labels.ItemLabelAnchor $stack19, $stack22, $stack43;
        java.awt.geom.Rectangle2D bar, $stack40;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.chart.plot.PlotOrientation $stack20, $stack44;
        double $stack24, $stack26, $stack29, $stack31, $stack33, $stack36;
        float $stack25, $stack27, $stack32, $stack34;
        org.jfree.chart.ui.TextAnchor $stack28, $stack30, $stack35, $stack37;
        java.awt.Shape bounds;
        org.jfree.chart.labels.ItemLabelPosition position;
        java.awt.geom.Point2D anchorPoint;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        dataset := @parameter1: org.jfree.data.xy.XYDataset;

        series := @parameter2: int;

        item := @parameter3: int;

        plot := @parameter4: org.jfree.chart.plot.XYPlot;

        generator := @parameter5: org.jfree.chart.labels.XYItemLabelGenerator;

        bar := @parameter6: java.awt.geom.Rectangle2D;

        negative := @parameter7: boolean;

        if generator != null goto label1;

        return;

     label1:
        label = interfaceinvoke generator.<org.jfree.chart.labels.XYItemLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int,int)>(dataset, series, item);

        if label != null goto label2;

        return;

     label2:
        labelFont = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Font getItemLabelFont(int,int)>(series, item);

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(labelFont);

        paint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Paint getItemLabelPaint(int,int)>(series, item);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(paint);

        if negative != 0 goto label3;

        position = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition getPositiveItemLabelPosition(int,int)>(series, item);

        goto label4;

     label3:
        position = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition getNegativeItemLabelPosition(int,int)>(series, item);

     label4:
        $stack19 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.labels.ItemLabelAnchor getItemLabelAnchor()>();

        $stack20 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        anchorPoint = specialinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.geom.Point2D calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)>($stack19, bar, $stack20);

        $stack22 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.labels.ItemLabelAnchor getItemLabelAnchor()>();

        $stack23 = specialinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)>($stack22);

        if $stack23 == 0 goto label7;

        $stack31 = virtualinvoke anchorPoint.<java.awt.geom.Point2D: double getX()>();

        $stack32 = (float) $stack31;

        $stack33 = virtualinvoke anchorPoint.<java.awt.geom.Point2D: double getY()>();

        $stack34 = (float) $stack33;

        $stack35 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.ui.TextAnchor getTextAnchor()>();

        $stack36 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: double getAngle()>();

        $stack37 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.ui.TextAnchor getRotationAnchor()>();

        bounds = staticinvoke <org.jfree.chart.text.TextUtils: java.awt.Shape calculateRotatedStringBounds(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.ui.TextAnchor,double,org.jfree.chart.ui.TextAnchor)>(label, g2, $stack32, $stack34, $stack35, $stack36, $stack37);

        if bounds == null goto label7;

        $stack40 = interfaceinvoke bounds.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $stack41 = virtualinvoke bar.<java.awt.geom.Rectangle2D: boolean contains(java.awt.geom.Rectangle2D)>($stack40);

        if $stack41 != 0 goto label7;

        if negative != 0 goto label5;

        position = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition getPositiveItemLabelPositionFallback()>();

        goto label6;

     label5:
        position = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition getNegativeItemLabelPositionFallback()>();

     label6:
        if position == null goto label7;

        $stack43 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.labels.ItemLabelAnchor getItemLabelAnchor()>();

        $stack44 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        anchorPoint = specialinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.geom.Point2D calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotOrientation)>($stack43, bar, $stack44);

     label7:
        if position == null goto label8;

        $stack24 = virtualinvoke anchorPoint.<java.awt.geom.Point2D: double getX()>();

        $stack25 = (float) $stack24;

        $stack26 = virtualinvoke anchorPoint.<java.awt.geom.Point2D: double getY()>();

        $stack27 = (float) $stack26;

        $stack28 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.ui.TextAnchor getTextAnchor()>();

        $stack29 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: double getAngle()>();

        $stack30 = virtualinvoke position.<org.jfree.chart.labels.ItemLabelPosition: org.jfree.chart.ui.TextAnchor getRotationAnchor()>();

        staticinvoke <org.jfree.chart.text.TextUtils: void drawRotatedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.ui.TextAnchor,double,org.jfree.chart.ui.TextAnchor)>(label, g2, $stack25, $stack27, $stack28, $stack29, $stack30);

     label8:
        return;
    }

    private java.awt.geom.Point2D calculateLabelAnchorPoint(org.jfree.chart.labels.ItemLabelAnchor, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotOrientation)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        double offset, $stack36, x0, x1, $stack38, x2, x3, $stack40, x4, x5, $stack42, x6, $stack43, y0, y1, $stack45, y2, y3, $stack47, y4, y5, $stack49, y6;
        java.awt.geom.Rectangle2D bar;
        org.jfree.chart.labels.ItemLabelAnchor anchor, $stack50, $stack51, $stack52, $stack53, $stack54, $stack55, $stack56, $stack57, $stack58, $stack59, $stack60, $stack61, $stack62, $stack63, $stack64, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, $stack72, $stack73, $stack74;
        java.awt.geom.Point2D$Double $stack75, $stack77, $stack78, $stack79, $stack80, $stack81, $stack82, $stack83, $stack84, $stack85, $stack86, $stack87, $stack88, $stack89, $stack90, $stack91, $stack92, $stack93, $stack94, $stack95, $stack96, $stack97, $stack98, $stack99, $stack100, result;
        org.jfree.chart.plot.PlotOrientation orientation;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        anchor := @parameter0: org.jfree.chart.labels.ItemLabelAnchor;

        bar := @parameter1: java.awt.geom.Rectangle2D;

        orientation := @parameter2: org.jfree.chart.plot.PlotOrientation;

        result = null;

        offset = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: double getItemLabelAnchorOffset()>();

        $stack36 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getX()>();

        x0 = $stack36 - offset;

        x1 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getX()>();

        $stack38 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getX()>();

        x2 = $stack38 + offset;

        x3 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $stack40 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMaxX()>();

        x4 = $stack40 - offset;

        x5 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $stack42 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMaxX()>();

        x6 = $stack42 + offset;

        $stack43 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMaxY()>();

        y0 = $stack43 + offset;

        y1 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMaxY()>();

        $stack45 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMaxY()>();

        y2 = $stack45 - offset;

        y3 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getCenterY()>();

        $stack47 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMinY()>();

        y4 = $stack47 + offset;

        y5 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMinY()>();

        $stack49 = virtualinvoke bar.<java.awt.geom.Rectangle2D: double getMinY()>();

        y6 = $stack49 - offset;

        $stack50 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor CENTER>;

        if anchor != $stack50 goto label01;

        $stack100 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack100.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x3, y3);

        result = $stack100;

        goto label25;

     label01:
        $stack51 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE1>;

        if anchor != $stack51 goto label02;

        $stack99 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack99.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x4, y4);

        result = $stack99;

        goto label25;

     label02:
        $stack52 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE2>;

        if anchor != $stack52 goto label03;

        $stack98 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack98.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x4, y4);

        result = $stack98;

        goto label25;

     label03:
        $stack53 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE3>;

        if anchor != $stack53 goto label04;

        $stack97 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack97.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x4, y3);

        result = $stack97;

        goto label25;

     label04:
        $stack54 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE4>;

        if anchor != $stack54 goto label05;

        $stack96 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack96.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x4, y2);

        result = $stack96;

        goto label25;

     label05:
        $stack55 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE5>;

        if anchor != $stack55 goto label06;

        $stack95 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack95.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x4, y2);

        result = $stack95;

        goto label25;

     label06:
        $stack56 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE6>;

        if anchor != $stack56 goto label07;

        $stack94 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack94.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x3, y2);

        result = $stack94;

        goto label25;

     label07:
        $stack57 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE7>;

        if anchor != $stack57 goto label08;

        $stack93 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack93.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x2, y2);

        result = $stack93;

        goto label25;

     label08:
        $stack58 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE8>;

        if anchor != $stack58 goto label09;

        $stack92 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack92.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x2, y2);

        result = $stack92;

        goto label25;

     label09:
        $stack59 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE9>;

        if anchor != $stack59 goto label10;

        $stack91 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack91.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x2, y3);

        result = $stack91;

        goto label25;

     label10:
        $stack60 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE10>;

        if anchor != $stack60 goto label11;

        $stack90 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack90.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x2, y4);

        result = $stack90;

        goto label25;

     label11:
        $stack61 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE11>;

        if anchor != $stack61 goto label12;

        $stack89 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack89.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x2, y4);

        result = $stack89;

        goto label25;

     label12:
        $stack62 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE12>;

        if anchor != $stack62 goto label13;

        $stack88 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack88.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x3, y4);

        result = $stack88;

        goto label25;

     label13:
        $stack63 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE1>;

        if anchor != $stack63 goto label14;

        $stack87 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack87.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x5, y6);

        result = $stack87;

        goto label25;

     label14:
        $stack64 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE2>;

        if anchor != $stack64 goto label15;

        $stack86 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack86.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x6, y5);

        result = $stack86;

        goto label25;

     label15:
        $stack65 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE3>;

        if anchor != $stack65 goto label16;

        $stack85 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack85.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x6, y3);

        result = $stack85;

        goto label25;

     label16:
        $stack66 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE4>;

        if anchor != $stack66 goto label17;

        $stack84 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack84.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x6, y1);

        result = $stack84;

        goto label25;

     label17:
        $stack67 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE5>;

        if anchor != $stack67 goto label18;

        $stack83 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack83.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x5, y0);

        result = $stack83;

        goto label25;

     label18:
        $stack68 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE6>;

        if anchor != $stack68 goto label19;

        $stack82 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack82.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x3, y0);

        result = $stack82;

        goto label25;

     label19:
        $stack69 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE7>;

        if anchor != $stack69 goto label20;

        $stack81 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack81.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x1, y0);

        result = $stack81;

        goto label25;

     label20:
        $stack70 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE8>;

        if anchor != $stack70 goto label21;

        $stack80 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack80.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x0, y1);

        result = $stack80;

        goto label25;

     label21:
        $stack71 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE9>;

        if anchor != $stack71 goto label22;

        $stack79 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack79.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x0, y3);

        result = $stack79;

        goto label25;

     label22:
        $stack72 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE10>;

        if anchor != $stack72 goto label23;

        $stack78 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack78.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x0, y5);

        result = $stack78;

        goto label25;

     label23:
        $stack73 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE11>;

        if anchor != $stack73 goto label24;

        $stack77 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack77.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x1, y6);

        result = $stack77;

        goto label25;

     label24:
        $stack74 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor OUTSIDE12>;

        if anchor != $stack74 goto label25;

        $stack75 = new java.awt.geom.Point2D$Double;

        specialinvoke $stack75.<java.awt.geom.Point2D$Double: void <init>(double,double)>(x3, y6);

        result = $stack75;

     label25:
        return result;
    }

    private boolean isInternalAnchor(org.jfree.chart.labels.ItemLabelAnchor)
    {
        org.jfree.chart.labels.ItemLabelAnchor anchor, $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14;
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        boolean $stack15;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        anchor := @parameter0: org.jfree.chart.labels.ItemLabelAnchor;

        $stack2 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor CENTER>;

        if anchor == $stack2 goto label1;

        $stack3 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE1>;

        if anchor == $stack3 goto label1;

        $stack4 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE2>;

        if anchor == $stack4 goto label1;

        $stack5 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE3>;

        if anchor == $stack5 goto label1;

        $stack6 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE4>;

        if anchor == $stack6 goto label1;

        $stack7 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE5>;

        if anchor == $stack7 goto label1;

        $stack8 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE6>;

        if anchor == $stack8 goto label1;

        $stack9 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE7>;

        if anchor == $stack9 goto label1;

        $stack10 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE8>;

        if anchor == $stack10 goto label1;

        $stack11 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE9>;

        if anchor == $stack11 goto label1;

        $stack12 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE10>;

        if anchor == $stack12 goto label1;

        $stack13 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE11>;

        if anchor == $stack13 goto label1;

        $stack14 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor INSIDE12>;

        if anchor != $stack14 goto label2;

     label1:
        $stack15 = 1;

        goto label3;

     label2:
        $stack15 = 0;

     label3:
        return $stack15;
    }

    public org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.data.Range $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        dataset := @parameter0: org.jfree.data.xy.XYDataset;

        $stack2 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset,boolean)>(dataset, 1);

        return $stack2;
    }

    public org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        org.jfree.data.xy.XYDataset dataset;
        boolean $stack2;
        org.jfree.data.Range $stack3;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        dataset := @parameter0: org.jfree.data.xy.XYDataset;

        $stack2 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval>;

        $stack3 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(dataset, $stack2);

        return $stack3;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.renderer.xy.XYBarRenderer this, result;
        java.lang.Object $stack2, $stack7;
        org.jfree.chart.ui.GradientPaintTransformer $stack3, $stack6, $stack8;
        java.awt.Shape $stack4, $stack5;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        $stack2 = specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>();

        result = (org.jfree.chart.renderer.xy.XYBarRenderer) $stack2;

        $stack3 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer>;

        if $stack3 == null goto label1;

        $stack6 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer>;

        $stack7 = staticinvoke <org.jfree.chart.util.CloneUtils: java.lang.Object clone(java.lang.Object)>($stack6);

        $stack8 = (org.jfree.chart.ui.GradientPaintTransformer) $stack7;

        result.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer> = $stack8;

     label1:
        $stack4 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar>;

        $stack5 = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape clone(java.awt.Shape)>($stack4);

        result.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar> = $stack5;

        return result;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.xy.XYBarRenderer this, that;
        boolean $stack3, $stack7, $stack8, $stack12, $stack13, $stack16, $stack19, $stack22, $stack25, $stack28, $stack29, $stack30, $stack40;
        double $stack4, $stack5, $stack9, $stack10, $stack31, $stack32, $stack34, $stack35, $stack37, $stack38;
        byte $stack6, $stack11, $stack33, $stack36, $stack39;
        org.jfree.chart.ui.GradientPaintTransformer $stack14, $stack15;
        java.awt.Shape $stack17, $stack18;
        org.jfree.chart.labels.ItemLabelPosition $stack20, $stack21, $stack23, $stack24;
        org.jfree.chart.renderer.xy.XYBarPainter $stack26, $stack27;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack3 = obj instanceof org.jfree.chart.renderer.xy.XYBarRenderer;

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        that = (org.jfree.chart.renderer.xy.XYBarRenderer) obj;

        $stack5 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double base>;

        $stack4 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: double base>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label03;

        return 0;

     label03:
        $stack8 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean drawBarOutline>;

        $stack7 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean drawBarOutline>;

        if $stack8 == $stack7 goto label04;

        return 0;

     label04:
        $stack10 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double margin>;

        $stack9 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: double margin>;

        $stack11 = $stack10 cmpl $stack9;

        if $stack11 == 0 goto label05;

        return 0;

     label05:
        $stack13 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval>;

        $stack12 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean useYInterval>;

        if $stack13 == $stack12 goto label06;

        return 0;

     label06:
        $stack15 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer>;

        $stack14 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer>;

        $stack16 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack15, $stack14);

        if $stack16 != 0 goto label07;

        return 0;

     label07:
        $stack18 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar>;

        $stack17 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar>;

        $stack19 = staticinvoke <org.jfree.chart.util.ShapeUtils: boolean equal(java.awt.Shape,java.awt.Shape)>($stack18, $stack17);

        if $stack19 != 0 goto label08;

        return 0;

     label08:
        $stack21 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPositionFallback>;

        $stack20 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition positiveItemLabelPositionFallback>;

        $stack22 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack21, $stack20);

        if $stack22 != 0 goto label09;

        return 0;

     label09:
        $stack24 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPositionFallback>;

        $stack23 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.labels.ItemLabelPosition negativeItemLabelPositionFallback>;

        $stack25 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack24, $stack23);

        if $stack25 != 0 goto label10;

        return 0;

     label10:
        $stack27 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter barPainter>;

        $stack26 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter barPainter>;

        $stack28 = virtualinvoke $stack27.<java.lang.Object: boolean equals(java.lang.Object)>($stack26);

        if $stack28 != 0 goto label11;

        return 0;

     label11:
        $stack30 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean shadowsVisible>;

        $stack29 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: boolean shadowsVisible>;

        if $stack30 == $stack29 goto label12;

        return 0;

     label12:
        $stack32 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowXOffset>;

        $stack31 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowXOffset>;

        $stack33 = $stack32 cmpl $stack31;

        if $stack33 == 0 goto label13;

        return 0;

     label13:
        $stack35 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowYOffset>;

        $stack34 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: double shadowYOffset>;

        $stack36 = $stack35 cmpl $stack34;

        if $stack36 == 0 goto label14;

        return 0;

     label14:
        $stack38 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor>;

        $stack37 = that.<org.jfree.chart.renderer.xy.XYBarRenderer: double barAlignmentFactor>;

        $stack39 = $stack38 cmpl $stack37;

        if $stack39 == 0 goto label15;

        return 0;

     label15:
        $stack40 = specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean equals(java.lang.Object)>(obj);

        return $stack40;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        java.awt.Shape $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar> = $stack2;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.renderer.xy.XYBarRenderer this;
        java.awt.Shape $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYBarRenderer;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.renderer.xy.XYBarRenderer: java.awt.Shape legendBar>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    static void <clinit>()
    {
        org.jfree.chart.renderer.xy.GradientXYBarPainter $stack0;

        <org.jfree.chart.renderer.xy.XYBarRenderer: long serialVersionUID> = 770559577251370036L;

        $stack0 = new org.jfree.chart.renderer.xy.GradientXYBarPainter;

        specialinvoke $stack0.<org.jfree.chart.renderer.xy.GradientXYBarPainter: void <init>()>();

        <org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.renderer.xy.XYBarPainter defaultBarPainter> = $stack0;

        <org.jfree.chart.renderer.xy.XYBarRenderer: boolean defaultShadowsVisible> = 1;

        return;
    }
}
