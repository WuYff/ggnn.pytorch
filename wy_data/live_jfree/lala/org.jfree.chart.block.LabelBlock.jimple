public class org.jfree.chart.block.LabelBlock extends org.jfree.chart.block.AbstractBlock implements org.jfree.chart.block.Block, org.jfree.chart.util.PublicCloneable
{
    static final long serialVersionUID;
    private java.lang.String text;
    private org.jfree.chart.text.TextBlock label;
    private java.awt.Font font;
    private java.lang.String toolTipText;
    private java.lang.String urlText;
    public static final java.awt.Paint DEFAULT_PAINT;
    private transient java.awt.Paint paint;
    private org.jfree.chart.text.TextBlockAnchor contentAlignmentPoint;
    private org.jfree.chart.ui.RectangleAnchor textAnchor;

    public void <init>(java.lang.String)
    {
        org.jfree.chart.block.LabelBlock this;
        java.lang.String label;
        java.awt.Font $stack2;
        java.awt.Paint $stack3;

        this := @this: org.jfree.chart.block.LabelBlock;

        label := @parameter0: java.lang.String;

        $stack2 = new java.awt.Font;

        specialinvoke $stack2.<java.awt.Font: void <init>(java.lang.String,int,int)>("SansSerif", 0, 10);

        $stack3 = <org.jfree.chart.block.LabelBlock: java.awt.Paint DEFAULT_PAINT>;

        specialinvoke this.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>(label, $stack2, $stack3);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font)
    {
        org.jfree.chart.block.LabelBlock this;
        java.lang.String text;
        java.awt.Font font;
        java.awt.Paint $stack3;

        this := @this: org.jfree.chart.block.LabelBlock;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        $stack3 = <org.jfree.chart.block.LabelBlock: java.awt.Paint DEFAULT_PAINT>;

        specialinvoke this.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>(text, font, $stack3);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font, java.awt.Paint)
    {
        org.jfree.chart.block.LabelBlock this;
        java.lang.String text;
        java.awt.Paint paint, $stack4;
        java.awt.Font font;
        org.jfree.chart.text.TextBlock $stack5;
        org.jfree.chart.text.TextBlockAnchor $stack6;
        org.jfree.chart.ui.RectangleAnchor $stack7;

        this := @this: org.jfree.chart.block.LabelBlock;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        paint := @parameter2: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.block.AbstractBlock: void <init>()>();

        this.<org.jfree.chart.block.LabelBlock: java.lang.String text> = text;

        this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint> = paint;

        $stack4 = this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>;

        $stack5 = staticinvoke <org.jfree.chart.text.TextUtils: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)>(text, font, $stack4);

        this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlock label> = $stack5;

        this.<org.jfree.chart.block.LabelBlock: java.awt.Font font> = font;

        this.<org.jfree.chart.block.LabelBlock: java.lang.String toolTipText> = null;

        this.<org.jfree.chart.block.LabelBlock: java.lang.String urlText> = null;

        $stack6 = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor CENTER>;

        this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlockAnchor contentAlignmentPoint> = $stack6;

        $stack7 = <org.jfree.chart.ui.RectangleAnchor: org.jfree.chart.ui.RectangleAnchor CENTER>;

        this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.ui.RectangleAnchor textAnchor> = $stack7;

        return;
    }

    public java.awt.Font getFont()
    {
        org.jfree.chart.block.LabelBlock this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.block.LabelBlock;

        $stack1 = this.<org.jfree.chart.block.LabelBlock: java.awt.Font font>;

        return $stack1;
    }

    public void setFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.block.LabelBlock this;
        java.awt.Paint $stack2;
        java.lang.String $stack3;
        org.jfree.chart.text.TextBlock $stack4;

        this := @this: org.jfree.chart.block.LabelBlock;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        this.<org.jfree.chart.block.LabelBlock: java.awt.Font font> = font;

        $stack3 = this.<org.jfree.chart.block.LabelBlock: java.lang.String text>;

        $stack2 = this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>;

        $stack4 = staticinvoke <org.jfree.chart.text.TextUtils: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)>($stack3, font, $stack2);

        this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlock label> = $stack4;

        return;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.block.LabelBlock this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.block.LabelBlock;

        $stack1 = this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>;

        return $stack1;
    }

    public void setPaint(java.awt.Paint)
    {
        java.awt.Paint paint, $stack2;
        org.jfree.chart.block.LabelBlock this;
        java.awt.Font $stack3;
        java.lang.String $stack4;
        org.jfree.chart.text.TextBlock $stack5;

        this := @this: org.jfree.chart.block.LabelBlock;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint> = paint;

        $stack4 = this.<org.jfree.chart.block.LabelBlock: java.lang.String text>;

        $stack3 = this.<org.jfree.chart.block.LabelBlock: java.awt.Font font>;

        $stack2 = this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>;

        $stack5 = staticinvoke <org.jfree.chart.text.TextUtils: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint)>($stack4, $stack3, $stack2);

        this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlock label> = $stack5;

        return;
    }

    public java.lang.String getToolTipText()
    {
        org.jfree.chart.block.LabelBlock this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.block.LabelBlock;

        $stack1 = this.<org.jfree.chart.block.LabelBlock: java.lang.String toolTipText>;

        return $stack1;
    }

    public void setToolTipText(java.lang.String)
    {
        org.jfree.chart.block.LabelBlock this;
        java.lang.String text;

        this := @this: org.jfree.chart.block.LabelBlock;

        text := @parameter0: java.lang.String;

        this.<org.jfree.chart.block.LabelBlock: java.lang.String toolTipText> = text;

        return;
    }

    public java.lang.String getURLText()
    {
        org.jfree.chart.block.LabelBlock this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.block.LabelBlock;

        $stack1 = this.<org.jfree.chart.block.LabelBlock: java.lang.String urlText>;

        return $stack1;
    }

    public void setURLText(java.lang.String)
    {
        org.jfree.chart.block.LabelBlock this;
        java.lang.String text;

        this := @this: org.jfree.chart.block.LabelBlock;

        text := @parameter0: java.lang.String;

        this.<org.jfree.chart.block.LabelBlock: java.lang.String urlText> = text;

        return;
    }

    public org.jfree.chart.text.TextBlockAnchor getContentAlignmentPoint()
    {
        org.jfree.chart.block.LabelBlock this;
        org.jfree.chart.text.TextBlockAnchor $stack1;

        this := @this: org.jfree.chart.block.LabelBlock;

        $stack1 = this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlockAnchor contentAlignmentPoint>;

        return $stack1;
    }

    public void setContentAlignmentPoint(org.jfree.chart.text.TextBlockAnchor)
    {
        org.jfree.chart.text.TextBlockAnchor anchor;
        org.jfree.chart.block.LabelBlock this;

        this := @this: org.jfree.chart.block.LabelBlock;

        anchor := @parameter0: org.jfree.chart.text.TextBlockAnchor;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(anchor, "anchor");

        this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlockAnchor contentAlignmentPoint> = anchor;

        return;
    }

    public org.jfree.chart.ui.RectangleAnchor getTextAnchor()
    {
        org.jfree.chart.block.LabelBlock this;
        org.jfree.chart.ui.RectangleAnchor $stack1;

        this := @this: org.jfree.chart.block.LabelBlock;

        $stack1 = this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.ui.RectangleAnchor textAnchor>;

        return $stack1;
    }

    public void setTextAnchor(org.jfree.chart.ui.RectangleAnchor)
    {
        org.jfree.chart.block.LabelBlock this;
        org.jfree.chart.ui.RectangleAnchor anchor;

        this := @this: org.jfree.chart.block.LabelBlock;

        anchor := @parameter0: org.jfree.chart.ui.RectangleAnchor;

        this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.ui.RectangleAnchor textAnchor> = anchor;

        return;
    }

    public org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        java.awt.Graphics2D g2;
        org.jfree.chart.block.LabelBlock this;
        java.awt.Font $stack4;
        org.jfree.chart.text.TextBlock $stack5;
        org.jfree.chart.ui.Size2D s, $stack7;
        double $stack8, $stack9, $stack10, $stack11;
        org.jfree.chart.block.RectangleConstraint constraint;

        this := @this: org.jfree.chart.block.LabelBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        constraint := @parameter1: org.jfree.chart.block.RectangleConstraint;

        $stack4 = this.<org.jfree.chart.block.LabelBlock: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack4);

        $stack5 = this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlock label>;

        s = virtualinvoke $stack5.<org.jfree.chart.text.TextBlock: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack7 = new org.jfree.chart.ui.Size2D;

        $stack8 = virtualinvoke s.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack9 = virtualinvoke this.<org.jfree.chart.block.LabelBlock: double calculateTotalWidth(double)>($stack8);

        $stack10 = virtualinvoke s.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack11 = virtualinvoke this.<org.jfree.chart.block.LabelBlock: double calculateTotalHeight(double)>($stack10);

        specialinvoke $stack7.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack9, $stack11);

        return $stack7;
    }

    public void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.block.LabelBlock this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.block.LabelBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        virtualinvoke this.<org.jfree.chart.block.LabelBlock: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(g2, area, null);

        return;
    }

    public java.lang.Object draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.lang.Object)
    {
        org.jfree.chart.block.LabelBlock this;
        java.awt.Graphics2D g2;
        java.lang.Object params, $stack53;
        boolean $stack13, $stack38;
        java.awt.geom.Point2D pt;
        java.lang.String $stack25, $stack27, $stack28, $stack30;
        org.jfree.chart.entity.ChartEntity $stack26;
        org.jfree.chart.block.BlockResult $stack29, result;
        org.jfree.chart.entity.StandardEntityCollection $stack52, sec;
        java.awt.geom.Rectangle2D area, area#2;
        org.jfree.chart.block.EntityBlockParams ebp;
        java.awt.Shape entityArea;
        java.awt.Paint $stack14;
        java.awt.Font $stack15;
        org.jfree.chart.ui.RectangleAnchor $stack16;
        org.jfree.chart.text.TextBlock $stack18;
        double $stack19, $stack21;
        float $stack20, $stack23;
        org.jfree.chart.text.TextBlockAnchor $stack22;

        this := @this: org.jfree.chart.block.LabelBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        params := @parameter2: java.lang.Object;

        area#2 = virtualinvoke this.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(area);

        virtualinvoke this.<org.jfree.chart.block.LabelBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area#2);

        area#2 = virtualinvoke this.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(area#2);

        area#2 = virtualinvoke this.<org.jfree.chart.block.LabelBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(area#2);

        ebp = null;

        sec = null;

        entityArea = null;

        $stack13 = params instanceof org.jfree.chart.block.EntityBlockParams;

        if $stack13 == 0 goto label1;

        ebp = (org.jfree.chart.block.EntityBlockParams) params;

        $stack38 = interfaceinvoke ebp.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>();

        if $stack38 == 0 goto label1;

        $stack52 = new org.jfree.chart.entity.StandardEntityCollection;

        specialinvoke $stack52.<org.jfree.chart.entity.StandardEntityCollection: void <init>()>();

        sec = $stack52;

        $stack53 = virtualinvoke area#2.<java.awt.geom.Rectangle2D: java.lang.Object clone()>();

        entityArea = (java.awt.Shape) $stack53;

     label1:
        $stack14 = this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack14);

        $stack15 = this.<org.jfree.chart.block.LabelBlock: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack15);

        $stack16 = this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.ui.RectangleAnchor textAnchor>;

        pt = virtualinvoke $stack16.<org.jfree.chart.ui.RectangleAnchor: java.awt.geom.Point2D getAnchorPoint(java.awt.geom.Rectangle2D)>(area#2);

        $stack18 = this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlock label>;

        $stack19 = virtualinvoke pt.<java.awt.geom.Point2D: double getX()>();

        $stack20 = (float) $stack19;

        $stack21 = virtualinvoke pt.<java.awt.geom.Point2D: double getY()>();

        $stack23 = (float) $stack21;

        $stack22 = this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlockAnchor contentAlignmentPoint>;

        virtualinvoke $stack18.<org.jfree.chart.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)>(g2, $stack20, $stack23, $stack22);

        result = null;

        if ebp == null goto label3;

        if sec == null goto label3;

        $stack25 = this.<org.jfree.chart.block.LabelBlock: java.lang.String toolTipText>;

        if $stack25 != null goto label2;

        $stack30 = this.<org.jfree.chart.block.LabelBlock: java.lang.String urlText>;

        if $stack30 == null goto label3;

     label2:
        $stack26 = new org.jfree.chart.entity.ChartEntity;

        $stack28 = this.<org.jfree.chart.block.LabelBlock: java.lang.String toolTipText>;

        $stack27 = this.<org.jfree.chart.block.LabelBlock: java.lang.String urlText>;

        specialinvoke $stack26.<org.jfree.chart.entity.ChartEntity: void <init>(java.awt.Shape,java.lang.String,java.lang.String)>(entityArea, $stack28, $stack27);

        virtualinvoke sec.<org.jfree.chart.entity.StandardEntityCollection: void add(org.jfree.chart.entity.ChartEntity)>($stack26);

        $stack29 = new org.jfree.chart.block.BlockResult;

        specialinvoke $stack29.<org.jfree.chart.block.BlockResult: void <init>()>();

        result = $stack29;

        virtualinvoke $stack29.<org.jfree.chart.block.BlockResult: void setEntityCollection(org.jfree.chart.entity.EntityCollection)>(sec);

     label3:
        return result;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack3, $stack6, $stack9, $stack12, $stack15, $stack18, $stack21, $stack24, $stack25;
        org.jfree.chart.block.LabelBlock that, this;
        java.lang.String $stack4, $stack5, $stack13, $stack14, $stack16, $stack17;
        java.awt.Font $stack7, $stack8;
        java.awt.Paint $stack10, $stack11;
        org.jfree.chart.text.TextBlockAnchor $stack19, $stack20;
        org.jfree.chart.ui.RectangleAnchor $stack22, $stack23;

        this := @this: org.jfree.chart.block.LabelBlock;

        obj := @parameter0: java.lang.Object;

        $stack3 = obj instanceof org.jfree.chart.block.LabelBlock;

        if $stack3 != 0 goto label1;

        return 0;

     label1:
        that = (org.jfree.chart.block.LabelBlock) obj;

        $stack5 = this.<org.jfree.chart.block.LabelBlock: java.lang.String text>;

        $stack4 = that.<org.jfree.chart.block.LabelBlock: java.lang.String text>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label2;

        return 0;

     label2:
        $stack8 = this.<org.jfree.chart.block.LabelBlock: java.awt.Font font>;

        $stack7 = that.<org.jfree.chart.block.LabelBlock: java.awt.Font font>;

        $stack9 = virtualinvoke $stack8.<java.awt.Font: boolean equals(java.lang.Object)>($stack7);

        if $stack9 != 0 goto label3;

        return 0;

     label3:
        $stack11 = this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>;

        $stack10 = that.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>;

        $stack12 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack11, $stack10);

        if $stack12 != 0 goto label4;

        return 0;

     label4:
        $stack14 = this.<org.jfree.chart.block.LabelBlock: java.lang.String toolTipText>;

        $stack13 = that.<org.jfree.chart.block.LabelBlock: java.lang.String toolTipText>;

        $stack15 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack14, $stack13);

        if $stack15 != 0 goto label5;

        return 0;

     label5:
        $stack17 = this.<org.jfree.chart.block.LabelBlock: java.lang.String urlText>;

        $stack16 = that.<org.jfree.chart.block.LabelBlock: java.lang.String urlText>;

        $stack18 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack17, $stack16);

        if $stack18 != 0 goto label6;

        return 0;

     label6:
        $stack20 = this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlockAnchor contentAlignmentPoint>;

        $stack19 = that.<org.jfree.chart.block.LabelBlock: org.jfree.chart.text.TextBlockAnchor contentAlignmentPoint>;

        $stack21 = virtualinvoke $stack20.<org.jfree.chart.text.TextBlockAnchor: boolean equals(java.lang.Object)>($stack19);

        if $stack21 != 0 goto label7;

        return 0;

     label7:
        $stack23 = this.<org.jfree.chart.block.LabelBlock: org.jfree.chart.ui.RectangleAnchor textAnchor>;

        $stack22 = that.<org.jfree.chart.block.LabelBlock: org.jfree.chart.ui.RectangleAnchor textAnchor>;

        $stack24 = virtualinvoke $stack23.<org.jfree.chart.ui.RectangleAnchor: boolean equals(java.lang.Object)>($stack22);

        if $stack24 != 0 goto label8;

        return 0;

     label8:
        $stack25 = specialinvoke this.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(obj);

        return $stack25;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.block.LabelBlock this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.block.LabelBlock;

        $stack1 = specialinvoke this.<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.block.LabelBlock this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.block.LabelBlock;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.block.LabelBlock this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.block.LabelBlock;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.block.LabelBlock: java.awt.Paint paint> = $stack2;

        return;
    }

    static void <clinit>()
    {
        java.awt.Color $stack0;

        <org.jfree.chart.block.LabelBlock: long serialVersionUID> = 249626098864178017L;

        $stack0 = <java.awt.Color: java.awt.Color BLACK>;

        <org.jfree.chart.block.LabelBlock: java.awt.Paint DEFAULT_PAINT> = $stack0;

        return;
    }
}
