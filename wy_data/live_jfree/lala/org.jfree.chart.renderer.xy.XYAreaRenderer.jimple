public class org.jfree.chart.renderer.xy.XYAreaRenderer extends org.jfree.chart.renderer.xy.AbstractXYItemRenderer implements org.jfree.chart.renderer.xy.XYItemRenderer, org.jfree.chart.util.PublicCloneable
{
    private static final long serialVersionUID;
    public static final int SHAPES;
    public static final int LINES;
    public static final int SHAPES_AND_LINES;
    public static final int AREA;
    public static final int AREA_AND_SHAPES;
    private boolean plotShapes;
    private boolean plotLines;
    private boolean plotArea;
    private boolean showOutline;
    private transient java.awt.Shape legendArea;
    private boolean useFillPaint;
    private org.jfree.chart.ui.GradientPaintTransformer gradientTransformer;

    public void <init>()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        specialinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void <init>(int)>(4);

        return;
    }

    public void <init>(int)
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        int type;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        type := @parameter0: int;

        specialinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void <init>(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)>(type, null, null);

        return;
    }

    public void <init>(int, org.jfree.chart.labels.XYToolTipGenerator, org.jfree.chart.urls.XYURLGenerator)
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        org.jfree.chart.labels.XYToolTipGenerator toolTipGenerator;
        org.jfree.chart.urls.XYURLGenerator urlGenerator;
        int type;
        java.awt.geom.GeneralPath $stack5;
        org.jfree.chart.ui.StandardGradientPaintTransformer $stack6;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        type := @parameter0: int;

        toolTipGenerator := @parameter1: org.jfree.chart.labels.XYToolTipGenerator;

        urlGenerator := @parameter2: org.jfree.chart.urls.XYURLGenerator;

        specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void <init>()>();

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void setDefaultToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)>(toolTipGenerator);

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void setURLGenerator(org.jfree.chart.urls.XYURLGenerator)>(urlGenerator);

        if type != 1 goto label1;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes> = 1;

     label1:
        if type != 2 goto label2;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines> = 1;

     label2:
        if type != 3 goto label3;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes> = 1;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines> = 1;

     label3:
        if type != 4 goto label4;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea> = 1;

     label4:
        if type != 5 goto label5;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea> = 1;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes> = 1;

     label5:
        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline> = 0;

        $stack5 = new java.awt.geom.GeneralPath;

        specialinvoke $stack5.<java.awt.geom.GeneralPath: void <init>()>();

        virtualinvoke $stack5.<java.awt.geom.GeneralPath: void moveTo(float,float)>(0.0F, -4.0F);

        virtualinvoke $stack5.<java.awt.geom.GeneralPath: void lineTo(float,float)>(3.0F, -2.0F);

        virtualinvoke $stack5.<java.awt.geom.GeneralPath: void lineTo(float,float)>(4.0F, 4.0F);

        virtualinvoke $stack5.<java.awt.geom.GeneralPath: void lineTo(float,float)>(-4.0F, 4.0F);

        virtualinvoke $stack5.<java.awt.geom.GeneralPath: void lineTo(float,float)>(-3.0F, -2.0F);

        virtualinvoke $stack5.<java.awt.geom.GeneralPath: void closePath()>();

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea> = $stack5;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> = 0;

        $stack6 = new org.jfree.chart.ui.StandardGradientPaintTransformer;

        specialinvoke $stack6.<org.jfree.chart.ui.StandardGradientPaintTransformer: void <init>()>();

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientTransformer> = $stack6;

        return;
    }

    public boolean getPlotShapes()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes>;

        return $stack1;
    }

    public boolean getPlotLines()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines>;

        return $stack1;
    }

    public boolean getPlotArea()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea>;

        return $stack1;
    }

    public boolean isOutline()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline>;

        return $stack1;
    }

    public void setOutline(boolean)
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        boolean show;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        show := @parameter0: boolean;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline> = show;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Shape getLegendArea()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        java.awt.Shape $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea>;

        return $stack1;
    }

    public void setLegendArea(java.awt.Shape)
    {
        java.awt.Shape area;
        org.jfree.chart.renderer.xy.XYAreaRenderer this;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        area := @parameter0: java.awt.Shape;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(area, "area");

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea> = area;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>();

        return;
    }

    public boolean getUseFillPaint()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint>;

        return $stack1;
    }

    public void setUseFillPaint(boolean)
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        boolean use;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        use := @parameter0: boolean;

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint> = use;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.ui.GradientPaintTransformer getGradientTransformer()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        org.jfree.chart.ui.GradientPaintTransformer $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientTransformer>;

        return $stack1;
    }

    public void setGradientTransformer(org.jfree.chart.ui.GradientPaintTransformer)
    {
        org.jfree.chart.ui.GradientPaintTransformer transformer;
        org.jfree.chart.renderer.xy.XYAreaRenderer this;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        transformer := @parameter0: org.jfree.chart.ui.GradientPaintTransformer;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(transformer, "transformer");

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientTransformer> = transformer;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.renderer.xy.XYItemRendererState initialise(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.data.xy.XYDataset, org.jfree.chart.plot.PlotRenderingInfo)
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState $stack7;
        org.jfree.chart.plot.PlotRenderingInfo info;
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.data.xy.XYDataset data;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        dataArea := @parameter1: java.awt.geom.Rectangle2D;

        plot := @parameter2: org.jfree.chart.plot.XYPlot;

        data := @parameter3: org.jfree.data.xy.XYDataset;

        info := @parameter4: org.jfree.chart.plot.PlotRenderingInfo;

        $stack7 = new org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState;

        specialinvoke $stack7.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: void <init>(org.jfree.chart.plot.PlotRenderingInfo)>(info);

        virtualinvoke $stack7.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: void setProcessVisibleItemsOnly(boolean)>(0);

        return $stack7;
    }

    public org.jfree.chart.LegendItem getLegendItem(int, int)
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        org.jfree.chart.plot.XYPlot xyplot;
        int datasetIndex, series;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.chart.labels.XYSeriesLabelGenerator lg, $stack18, $stack19, $stack35, $stack51;
        java.lang.String label, toolTipText, urlText;
        java.awt.Paint paint, labelPaint;
        org.jfree.chart.LegendItem $stack21, result;
        java.awt.Shape $stack22;
        java.awt.Font $stack23;
        java.lang.Comparable $stack25;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        datasetIndex := @parameter0: int;

        series := @parameter1: int;

        result = null;

        xyplot = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.plot.XYPlot getPlot()>();

        if xyplot == null goto label4;

        dataset = virtualinvoke xyplot.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(datasetIndex);

        if dataset == null goto label4;

        lg = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemLabelGenerator()>();

        label = interfaceinvoke lg.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

        toolTipText = null;

        $stack18 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>();

        if $stack18 == null goto label1;

        $stack51 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>();

        toolTipText = interfaceinvoke $stack51.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

     label1:
        urlText = null;

        $stack19 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>();

        if $stack19 == null goto label2;

        $stack35 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>();

        urlText = interfaceinvoke $stack35.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

     label2:
        paint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Paint lookupSeriesPaint(int)>(series);

        $stack21 = new org.jfree.chart.LegendItem;

        $stack22 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea>;

        specialinvoke $stack21.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)>(label, label, toolTipText, urlText, $stack22, paint);

        result = $stack21;

        $stack23 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Font lookupLegendTextFont(int)>(series);

        virtualinvoke $stack21.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($stack23);

        labelPaint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Paint lookupLegendTextPaint(int)>(series);

        if labelPaint == null goto label3;

        virtualinvoke $stack21.<org.jfree.chart.LegendItem: void setLabelPaint(java.awt.Paint)>(labelPaint);

     label3:
        virtualinvoke $stack21.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(dataset);

        virtualinvoke $stack21.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(datasetIndex);

        $stack25 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(series);

        virtualinvoke $stack21.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($stack25);

        virtualinvoke $stack21.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(series);

     label4:
        return result;
    }

    public void drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotRenderingInfo, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, org.jfree.chart.plot.CrosshairState, int)
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        int series, item, itemCount, $stack59, $stack60, $stack62, $stack63, $stack70, $stack71, $stack72, $stack74, $stack75, $stack76, $stack145, pass, gp#117;
        boolean $stack50, $stack53, $stack65, $stack78, $stack89, $stack115, $stack149, $stack151, $stack153, $stack224, $stack226, $stack87, $stack93, $stack94, $stack95, $stack148;
        org.jfree.chart.renderer.xy.XYItemRendererState state;
        org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState areaState;
        org.jfree.data.xy.XYDataset dataset;
        double x1, transX1, transY1, x0, transX0, transY0, x2, transX2, transY2, transZero, $stack101, $stack102, $stack103, $stack104, $stack105, $stack106, $stack107, $stack108, $stack109, $stack110, $stack111, $stack112, $stack116, $stack117, $stack118, $stack119, $stack120, $stack121, $stack122, $stack123, $stack124, $stack125, $stack126, $stack127, $stack167, $stack168, $stack169, $stack170, $stack171, $stack172, $stack173, $stack174, y1, y0, y2, zero;
        org.jfree.chart.axis.ValueAxis domainAxis, rangeAxis;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.chart.ui.RectangleEdge $stack54, $stack56, $stack66, $stack68, $stack79, $stack81, $stack84, $stack221;
        org.jfree.chart.plot.PlotOrientation $stack88, $stack99, $stack100, $stack146, $stack147, $stack188, $stack189, $stack190, $stack191, $stack198, $stack199, $stack223, $stack225, $stack86, zero#18;
        java.awt.Stroke stroke, adjGP#80;
        java.awt.Graphics2D g2;
        org.jfree.chart.plot.CrosshairState crosshairState;
        java.awt.geom.GeneralPath $stack98, $stack150, $stack164, $stack182, $stack183, $stack185, $stack186, $stack205, $stack218, $stack219, $stack228, $stack229;
        java.awt.geom.Area $stack113, $stack114, $stack163, $stack165;
        float[] $stack155;
        java.awt.geom.Rectangle2D$Double $stack166;
        org.jfree.chart.ui.GradientPaintTransformer $stack175;
        java.awt.geom.Line2D $stack193, $stack196, $stack192;
        org.jfree.chart.plot.PlotRenderingInfo info;
        java.awt.Paint paint, $stack154;
        java.awt.Shape shape, gp#79;
        java.awt.GradientPaint gp, adjGP;
        java.awt.BasicStroke bs;
        org.jfree.chart.entity.EntityCollection adjGP#178;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        state := @parameter1: org.jfree.chart.renderer.xy.XYItemRendererState;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        info := @parameter3: org.jfree.chart.plot.PlotRenderingInfo;

        plot := @parameter4: org.jfree.chart.plot.XYPlot;

        domainAxis := @parameter5: org.jfree.chart.axis.ValueAxis;

        rangeAxis := @parameter6: org.jfree.chart.axis.ValueAxis;

        dataset := @parameter7: org.jfree.data.xy.XYDataset;

        series := @parameter8: int;

        item := @parameter9: int;

        crosshairState := @parameter10: org.jfree.chart.plot.CrosshairState;

        pass := @parameter11: int;

        $stack50 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean getItemVisible(int,int)>(series, item);

        if $stack50 != 0 goto label01;

        return;

     label01:
        areaState = (org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState) state;

        x1 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(series, item);

        y1 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(series, item);

        $stack53 = staticinvoke <java.lang.Double: boolean isNaN(double)>(y1);

        if $stack53 == 0 goto label02;

        y1 = 0.0;

     label02:
        $stack54 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        transX1 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(x1, dataArea, $stack54);

        $stack56 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transY1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(y1, dataArea, $stack56);

        itemCount = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(series);

        $stack59 = item - 1;

        $stack60 = staticinvoke <java.lang.Math: int max(int,int)>($stack59, 0);

        x0 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(series, $stack60);

        $stack62 = item - 1;

        $stack63 = staticinvoke <java.lang.Math: int max(int,int)>($stack62, 0);

        y0 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(series, $stack63);

        $stack65 = staticinvoke <java.lang.Double: boolean isNaN(double)>(y0);

        if $stack65 == 0 goto label03;

        y0 = 0.0;

     label03:
        $stack66 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        transX0 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(x0, dataArea, $stack66);

        $stack68 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transY0 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(y0, dataArea, $stack68);

        $stack71 = item + 1;

        $stack70 = itemCount - 1;

        $stack72 = staticinvoke <java.lang.Math: int min(int,int)>($stack71, $stack70);

        x2 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(series, $stack72);

        $stack75 = item + 1;

        $stack74 = itemCount - 1;

        $stack76 = staticinvoke <java.lang.Math: int min(int,int)>($stack75, $stack74);

        y2 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(series, $stack76);

        $stack78 = staticinvoke <java.lang.Double: boolean isNaN(double)>(y2);

        if $stack78 == 0 goto label04;

        y2 = 0.0;

     label04:
        $stack79 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        transX2 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(x2, dataArea, $stack79);

        $stack81 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transY2 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(y2, dataArea, $stack81);

        $stack84 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transZero = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(0.0, dataArea, $stack84);

        if item != 0 goto label06;

        $stack219 = new java.awt.geom.GeneralPath;

        specialinvoke $stack219.<java.awt.geom.GeneralPath: void <init>()>();

        areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area> = $stack219;

        $stack221 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        zero = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(0.0, dataArea, $stack221);

        $stack223 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack224 = virtualinvoke $stack223.<org.jfree.chart.plot.PlotOrientation: boolean isVertical()>();

        if $stack224 == 0 goto label05;

        $stack229 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void moveTo(java.awt.geom.GeneralPath,double,double)>($stack229, transX1, zero);

        goto label06;

     label05:
        $stack225 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack226 = virtualinvoke $stack225.<org.jfree.chart.plot.PlotOrientation: boolean isHorizontal()>();

        if $stack226 == 0 goto label06;

        $stack228 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void moveTo(java.awt.geom.GeneralPath,double,double)>($stack228, zero, transX1);

     label06:
        $stack86 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack87 = virtualinvoke $stack86.<org.jfree.chart.plot.PlotOrientation: boolean isVertical()>();

        if $stack87 == 0 goto label07;

        $stack218 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack218, transX1, transY1);

        goto label08;

     label07:
        $stack88 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack89 = virtualinvoke $stack88.<org.jfree.chart.plot.PlotOrientation: boolean isHorizontal()>();

        if $stack89 == 0 goto label08;

        $stack205 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack205, transY1, transX1);

     label08:
        zero#18 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        paint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Paint getItemPaint(int,int)>(series, item);

        stroke = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Stroke getItemStroke(int,int)>(series, item);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(paint);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(stroke);

        $stack93 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean getPlotShapes()>();

        if $stack93 == 0 goto label11;

        shape = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape getItemShape(int,int)>(series, item);

        $stack198 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if zero#18 != $stack198 goto label09;

        shape = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape createTranslatedShape(java.awt.Shape,double,double)>(shape, transX1, transY1);

        goto label10;

     label09:
        $stack199 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if zero#18 != $stack199 goto label10;

        shape = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape createTranslatedShape(java.awt.Shape,double,double)>(shape, transY1, transX1);

     label10:
        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(shape);

     label11:
        $stack94 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean getPlotLines()>();

        if $stack94 == 0 goto label14;

        if item <= 0 goto label14;

        $stack188 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack189 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if $stack188 != $stack189 goto label12;

        $stack196 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.Line2D line>;

        virtualinvoke $stack196.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(transX0, transY0, transX1, transY1);

        goto label13;

     label12:
        $stack190 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack191 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if $stack190 != $stack191 goto label13;

        $stack193 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.Line2D line>;

        virtualinvoke $stack193.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(transY0, transX0, transY1, transX1);

     label13:
        $stack192 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.Line2D line>;

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack192);

     label14:
        $stack95 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean getPlotArea()>();

        if $stack95 == 0 goto label20;

        if item <= 0 goto label20;

        $stack145 = itemCount - 1;

        if item != $stack145 goto label20;

        $stack146 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if zero#18 != $stack146 goto label15;

        $stack185 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack185, transX1, transZero);

        $stack186 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        virtualinvoke $stack186.<java.awt.geom.GeneralPath: void closePath()>();

        goto label16;

     label15:
        $stack147 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if zero#18 != $stack147 goto label16;

        $stack182 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack182, transZero, transX1);

        $stack183 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        virtualinvoke $stack183.<java.awt.geom.GeneralPath: void closePath()>();

     label16:
        $stack148 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint>;

        if $stack148 == 0 goto label17;

        paint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Paint lookupSeriesFillPaint(int)>(series);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(paint);

     label17:
        $stack149 = paint instanceof java.awt.GradientPaint;

        if $stack149 == 0 goto label18;

        gp = (java.awt.GradientPaint) paint;

        $stack175 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientTransformer>;

        adjGP = interfaceinvoke $stack175.<org.jfree.chart.ui.GradientPaintTransformer: java.awt.GradientPaint transform(java.awt.GradientPaint,java.awt.Shape)>(gp, dataArea);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(adjGP);

     label18:
        $stack150 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack150);

        $stack151 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean isOutline()>();

        if $stack151 == 0 goto label20;

        gp#79 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        adjGP#80 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(series);

        $stack153 = adjGP#80 instanceof java.awt.BasicStroke;

        if $stack153 == 0 goto label19;

        bs = (java.awt.BasicStroke) adjGP#80;

        $stack155 = virtualinvoke bs.<java.awt.BasicStroke: float[] getDashArray()>();

        if $stack155 == null goto label19;

        $stack163 = new java.awt.geom.Area;

        $stack164 = areaState.<org.jfree.chart.renderer.xy.XYAreaRenderer$XYAreaRendererState: java.awt.geom.GeneralPath area>;

        specialinvoke $stack163.<java.awt.geom.Area: void <init>(java.awt.Shape)>($stack164);

        $stack165 = new java.awt.geom.Area;

        $stack166 = new java.awt.geom.Rectangle2D$Double;

        $stack167 = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getX()>();

        $stack168 = $stack167 - 5.0;

        $stack169 = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getY()>();

        $stack170 = $stack169 - 5.0;

        $stack171 = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack172 = $stack171 + 10.0;

        $stack173 = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getHeight()>();

        $stack174 = $stack173 + 10.0;

        specialinvoke $stack166.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack168, $stack170, $stack172, $stack174);

        specialinvoke $stack165.<java.awt.geom.Area: void <init>(java.awt.Shape)>($stack166);

        virtualinvoke $stack163.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>($stack165);

        gp#79 = $stack163;

     label19:
        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(adjGP#80);

        $stack154 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Paint lookupSeriesOutlinePaint(int)>(series);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack154);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(gp#79);

     label20:
        gp#117 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: int indexOf(org.jfree.data.xy.XYDataset)>(dataset);

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,double,double,org.jfree.chart.plot.PlotOrientation)>(crosshairState, x1, y1, gp#117, transX1, transY1, zero#18);

        adjGP#178 = virtualinvoke state.<org.jfree.chart.renderer.xy.XYItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

        if adjGP#178 == null goto label23;

        $stack98 = new java.awt.geom.GeneralPath;

        specialinvoke $stack98.<java.awt.geom.GeneralPath: void <init>()>();

        $stack99 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack100 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if $stack99 != $stack100 goto label21;

        $stack116 = transX0 + transX1;

        $stack117 = $stack116 / 2.0;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void moveTo(java.awt.geom.GeneralPath,double,double)>($stack98, transZero, $stack117);

        $stack118 = transY0 + transY1;

        $stack121 = $stack118 / 2.0;

        $stack119 = transX0 + transX1;

        $stack120 = $stack119 / 2.0;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack98, $stack121, $stack120);

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack98, transY1, transX1);

        $stack122 = transY1 + transY2;

        $stack125 = $stack122 / 2.0;

        $stack123 = transX1 + transX2;

        $stack124 = $stack123 / 2.0;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack98, $stack125, $stack124);

        $stack126 = transX1 + transX2;

        $stack127 = $stack126 / 2.0;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack98, transZero, $stack127);

        goto label22;

     label21:
        $stack101 = transX0 + transX1;

        $stack102 = $stack101 / 2.0;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void moveTo(java.awt.geom.GeneralPath,double,double)>($stack98, $stack102, transZero);

        $stack103 = transX0 + transX1;

        $stack106 = $stack103 / 2.0;

        $stack104 = transY0 + transY1;

        $stack105 = $stack104 / 2.0;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack98, $stack106, $stack105);

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack98, transX1, transY1);

        $stack107 = transX1 + transX2;

        $stack110 = $stack107 / 2.0;

        $stack108 = transY1 + transY2;

        $stack109 = $stack108 / 2.0;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack98, $stack110, $stack109);

        $stack111 = transX1 + transX2;

        $stack112 = $stack111 / 2.0;

        staticinvoke <org.jfree.chart.renderer.xy.XYAreaRenderer: void lineTo(java.awt.geom.GeneralPath,double,double)>($stack98, $stack112, transZero);

     label22:
        virtualinvoke $stack98.<java.awt.geom.GeneralPath: void closePath()>();

        $stack113 = new java.awt.geom.Area;

        specialinvoke $stack113.<java.awt.geom.Area: void <init>(java.awt.Shape)>($stack98);

        $stack114 = new java.awt.geom.Area;

        specialinvoke $stack114.<java.awt.geom.Area: void <init>(java.awt.Shape)>(dataArea);

        virtualinvoke $stack113.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>($stack114);

        $stack115 = virtualinvoke $stack113.<java.awt.geom.Area: boolean isEmpty()>();

        if $stack115 != 0 goto label23;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,double,double)>(adjGP#178, $stack113, dataset, series, item, 0.0, 0.0);

     label23:
        return;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this, clone;
        java.lang.Object $stack2;
        java.awt.Shape $stack3, $stack4;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        $stack2 = specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>();

        clone = (org.jfree.chart.renderer.xy.XYAreaRenderer) $stack2;

        $stack3 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea>;

        $stack4 = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape clone(java.awt.Shape)>($stack3);

        clone.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea> = $stack4;

        return clone;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.xy.XYAreaRenderer this, that;
        boolean $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack16, $stack19;
        org.jfree.chart.ui.GradientPaintTransformer $stack14, $stack15;
        java.awt.Shape $stack17, $stack18;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.renderer.xy.XYAreaRenderer;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.renderer.xy.XYAreaRenderer) obj;

        $stack5 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea>;

        $stack4 = that.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines>;

        $stack6 = that.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines>;

        if $stack7 == $stack6 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes>;

        $stack8 = that.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes>;

        if $stack9 == $stack8 goto label5;

        return 0;

     label5:
        $stack11 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline>;

        $stack10 = that.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean showOutline>;

        if $stack11 == $stack10 goto label6;

        return 0;

     label6:
        $stack13 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint>;

        $stack12 = that.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint>;

        if $stack13 == $stack12 goto label7;

        return 0;

     label7:
        $stack15 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientTransformer>;

        $stack14 = that.<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.ui.GradientPaintTransformer gradientTransformer>;

        $stack16 = virtualinvoke $stack15.<java.lang.Object: boolean equals(java.lang.Object)>($stack14);

        if $stack16 != 0 goto label8;

        return 0;

     label8:
        $stack18 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea>;

        $stack17 = that.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea>;

        $stack19 = staticinvoke <org.jfree.chart.util.ShapeUtils: boolean equal(java.awt.Shape,java.awt.Shape)>($stack18, $stack17);

        if $stack19 != 0 goto label9;

        return 0;

     label9:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        boolean $stack3, $stack5, $stack7, $stack9;
        int result;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        result = specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: int hashCode()>();

        $stack3 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotArea>;

        result = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,boolean)>(result, $stack3);

        $stack5 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotLines>;

        result = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,boolean)>(result, $stack5);

        $stack7 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean plotShapes>;

        result = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,boolean)>(result, $stack7);

        $stack9 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean useFillPaint>;

        result = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,boolean)>(result, $stack9);

        return result;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        java.awt.Shape $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea> = $stack2;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.renderer.xy.XYAreaRenderer this;
        java.awt.Shape $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYAreaRenderer;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.awt.Shape legendArea>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.renderer.xy.XYAreaRenderer: int AREA_AND_SHAPES> = 5;

        <org.jfree.chart.renderer.xy.XYAreaRenderer: int AREA> = 4;

        <org.jfree.chart.renderer.xy.XYAreaRenderer: int SHAPES_AND_LINES> = 3;

        <org.jfree.chart.renderer.xy.XYAreaRenderer: int LINES> = 2;

        <org.jfree.chart.renderer.xy.XYAreaRenderer: int SHAPES> = 1;

        <org.jfree.chart.renderer.xy.XYAreaRenderer: long serialVersionUID> = -4481971353973876747L;

        return;
    }
}
