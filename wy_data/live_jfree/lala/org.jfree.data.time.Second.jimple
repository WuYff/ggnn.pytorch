public class org.jfree.data.time.Second extends org.jfree.data.time.RegularTimePeriod implements java.io.Serializable
{
    private static final long serialVersionUID;
    public static final int FIRST_SECOND_IN_MINUTE;
    public static final int LAST_SECOND_IN_MINUTE;
    private org.jfree.data.time.Day day;
    private byte hour;
    private byte minute;
    private byte second;
    private long firstMillisecond;

    public void <init>()
    {
        org.jfree.data.time.Second this;
        java.util.Date $stack1;

        this := @this: org.jfree.data.time.Second;

        $stack1 = new java.util.Date;

        specialinvoke $stack1.<java.util.Date: void <init>()>();

        specialinvoke this.<org.jfree.data.time.Second: void <init>(java.util.Date)>($stack1);

        return;
    }

    public void <init>(int, org.jfree.data.time.Minute)
    {
        org.jfree.data.time.Second this;
        int second, $stack4, $stack6;
        org.jfree.data.time.Minute minute;
        org.jfree.data.time.Day $stack3;
        byte $stack5, $stack7, $stack8;
        java.util.Calendar $stack9;

        this := @this: org.jfree.data.time.Second;

        second := @parameter0: int;

        minute := @parameter1: org.jfree.data.time.Minute;

        specialinvoke this.<org.jfree.data.time.RegularTimePeriod: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void requireInRange(int,java.lang.String,int,int)>(second, "second", 0, 59);

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(minute, "minute");

        $stack3 = virtualinvoke minute.<org.jfree.data.time.Minute: org.jfree.data.time.Day getDay()>();

        this.<org.jfree.data.time.Second: org.jfree.data.time.Day day> = $stack3;

        $stack4 = virtualinvoke minute.<org.jfree.data.time.Minute: int getHourValue()>();

        $stack5 = (byte) $stack4;

        this.<org.jfree.data.time.Second: byte hour> = $stack5;

        $stack6 = virtualinvoke minute.<org.jfree.data.time.Minute: int getMinute()>();

        $stack7 = (byte) $stack6;

        this.<org.jfree.data.time.Second: byte minute> = $stack7;

        $stack8 = (byte) second;

        this.<org.jfree.data.time.Second: byte second> = $stack8;

        $stack9 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke this.<org.jfree.data.time.Second: void peg(java.util.Calendar)>($stack9);

        return;
    }

    public void <init>(int, int, int, int, int, int)
    {
        org.jfree.data.time.Second this;
        int second, minute, hour, day, month, year;
        org.jfree.data.time.Minute $stack7;

        this := @this: org.jfree.data.time.Second;

        second := @parameter0: int;

        minute := @parameter1: int;

        hour := @parameter2: int;

        day := @parameter3: int;

        month := @parameter4: int;

        year := @parameter5: int;

        $stack7 = new org.jfree.data.time.Minute;

        specialinvoke $stack7.<org.jfree.data.time.Minute: void <init>(int,int,int,int,int)>(minute, hour, day, month, year);

        specialinvoke this.<org.jfree.data.time.Second: void <init>(int,org.jfree.data.time.Minute)>(second, $stack7);

        return;
    }

    public void <init>(java.util.Date)
    {
        org.jfree.data.time.Second this;
        java.util.Date time;
        java.util.TimeZone $stack2;
        java.util.Locale $stack3;

        this := @this: org.jfree.data.time.Second;

        time := @parameter0: java.util.Date;

        $stack2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $stack3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke this.<org.jfree.data.time.Second: void <init>(java.util.Date,java.util.TimeZone,java.util.Locale)>(time, $stack2, $stack3);

        return;
    }

    public void <init>(java.util.Date, java.util.TimeZone, java.util.Locale)
    {
        org.jfree.data.time.Second this;
        java.util.TimeZone zone;
        java.util.Locale locale;
        java.util.Calendar calendar;
        java.util.Date time;
        int $stack6, $stack8, $stack10;
        byte $stack7, $stack9, $stack11;
        org.jfree.data.time.Day $stack12;

        this := @this: org.jfree.data.time.Second;

        time := @parameter0: java.util.Date;

        zone := @parameter1: java.util.TimeZone;

        locale := @parameter2: java.util.Locale;

        specialinvoke this.<org.jfree.data.time.RegularTimePeriod: void <init>()>();

        calendar = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>(zone, locale);

        virtualinvoke calendar.<java.util.Calendar: void setTime(java.util.Date)>(time);

        $stack6 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(13);

        $stack7 = (byte) $stack6;

        this.<org.jfree.data.time.Second: byte second> = $stack7;

        $stack8 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(12);

        $stack9 = (byte) $stack8;

        this.<org.jfree.data.time.Second: byte minute> = $stack9;

        $stack10 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(11);

        $stack11 = (byte) $stack10;

        this.<org.jfree.data.time.Second: byte hour> = $stack11;

        $stack12 = new org.jfree.data.time.Day;

        specialinvoke $stack12.<org.jfree.data.time.Day: void <init>(java.util.Date,java.util.TimeZone,java.util.Locale)>(time, zone, locale);

        this.<org.jfree.data.time.Second: org.jfree.data.time.Day day> = $stack12;

        virtualinvoke this.<org.jfree.data.time.Second: void peg(java.util.Calendar)>(calendar);

        return;
    }

    public int getSecond()
    {
        org.jfree.data.time.Second this;
        byte $stack1;

        this := @this: org.jfree.data.time.Second;

        $stack1 = this.<org.jfree.data.time.Second: byte second>;

        return $stack1;
    }

    public org.jfree.data.time.Minute getMinute()
    {
        org.jfree.data.time.Minute $stack1;
        org.jfree.data.time.Second this;
        org.jfree.data.time.Hour $stack2;
        org.jfree.data.time.Day $stack3;
        byte $stack4, $stack5;

        this := @this: org.jfree.data.time.Second;

        $stack1 = new org.jfree.data.time.Minute;

        $stack5 = this.<org.jfree.data.time.Second: byte minute>;

        $stack2 = new org.jfree.data.time.Hour;

        $stack4 = this.<org.jfree.data.time.Second: byte hour>;

        $stack3 = this.<org.jfree.data.time.Second: org.jfree.data.time.Day day>;

        specialinvoke $stack2.<org.jfree.data.time.Hour: void <init>(int,org.jfree.data.time.Day)>($stack4, $stack3);

        specialinvoke $stack1.<org.jfree.data.time.Minute: void <init>(int,org.jfree.data.time.Hour)>($stack5, $stack2);

        return $stack1;
    }

    public long getFirstMillisecond()
    {
        org.jfree.data.time.Second this;
        long $stack1;

        this := @this: org.jfree.data.time.Second;

        $stack1 = this.<org.jfree.data.time.Second: long firstMillisecond>;

        return $stack1;
    }

    public long getLastMillisecond()
    {
        org.jfree.data.time.Second this;
        long $stack1, $stack2;

        this := @this: org.jfree.data.time.Second;

        $stack1 = this.<org.jfree.data.time.Second: long firstMillisecond>;

        $stack2 = $stack1 + 999L;

        return $stack2;
    }

    public void peg(java.util.Calendar)
    {
        org.jfree.data.time.Second this;
        java.util.Calendar calendar;
        long $stack2;

        this := @this: org.jfree.data.time.Second;

        calendar := @parameter0: java.util.Calendar;

        $stack2 = virtualinvoke this.<org.jfree.data.time.Second: long getFirstMillisecond(java.util.Calendar)>(calendar);

        this.<org.jfree.data.time.Second: long firstMillisecond> = $stack2;

        return;
    }

    public org.jfree.data.time.RegularTimePeriod previous()
    {
        org.jfree.data.time.Second this, $stack6, $stack8, result;
        byte $stack3, $stack9;
        org.jfree.data.time.Minute $stack4, previous, $stack11;
        org.jfree.data.time.RegularTimePeriod $stack5;
        int $stack10;

        this := @this: org.jfree.data.time.Second;

        result = null;

        $stack3 = this.<org.jfree.data.time.Second: byte second>;

        if $stack3 == 0 goto label1;

        $stack8 = new org.jfree.data.time.Second;

        $stack9 = this.<org.jfree.data.time.Second: byte second>;

        $stack10 = $stack9 - 1;

        $stack11 = virtualinvoke this.<org.jfree.data.time.Second: org.jfree.data.time.Minute getMinute()>();

        specialinvoke $stack8.<org.jfree.data.time.Second: void <init>(int,org.jfree.data.time.Minute)>($stack10, $stack11);

        result = $stack8;

        goto label2;

     label1:
        $stack4 = virtualinvoke this.<org.jfree.data.time.Second: org.jfree.data.time.Minute getMinute()>();

        $stack5 = virtualinvoke $stack4.<org.jfree.data.time.Minute: org.jfree.data.time.RegularTimePeriod previous()>();

        previous = (org.jfree.data.time.Minute) $stack5;

        if previous == null goto label2;

        $stack6 = new org.jfree.data.time.Second;

        specialinvoke $stack6.<org.jfree.data.time.Second: void <init>(int,org.jfree.data.time.Minute)>(59, previous);

        result = $stack6;

     label2:
        return result;
    }

    public org.jfree.data.time.RegularTimePeriod next()
    {
        org.jfree.data.time.Second this, $stack6, $stack8, result;
        byte $stack3, $stack9;
        org.jfree.data.time.Minute $stack4, next, $stack11;
        org.jfree.data.time.RegularTimePeriod $stack5;
        int $stack10;

        this := @this: org.jfree.data.time.Second;

        result = null;

        $stack3 = this.<org.jfree.data.time.Second: byte second>;

        if $stack3 == 59 goto label1;

        $stack8 = new org.jfree.data.time.Second;

        $stack9 = this.<org.jfree.data.time.Second: byte second>;

        $stack10 = $stack9 + 1;

        $stack11 = virtualinvoke this.<org.jfree.data.time.Second: org.jfree.data.time.Minute getMinute()>();

        specialinvoke $stack8.<org.jfree.data.time.Second: void <init>(int,org.jfree.data.time.Minute)>($stack10, $stack11);

        result = $stack8;

        goto label2;

     label1:
        $stack4 = virtualinvoke this.<org.jfree.data.time.Second: org.jfree.data.time.Minute getMinute()>();

        $stack5 = virtualinvoke $stack4.<org.jfree.data.time.Minute: org.jfree.data.time.RegularTimePeriod next()>();

        next = (org.jfree.data.time.Minute) $stack5;

        if next == null goto label2;

        $stack6 = new org.jfree.data.time.Second;

        specialinvoke $stack6.<org.jfree.data.time.Second: void <init>(int,org.jfree.data.time.Minute)>(0, next);

        result = $stack6;

     label2:
        return result;
    }

    public long getSerialIndex()
    {
        org.jfree.data.time.Second this;
        org.jfree.data.time.Day $stack5;
        long $stack6, $stack8, $stack9, hourIndex, $stack11, $stack12, minuteIndex, $stack14, $stack15, $stack16;
        byte $stack7, $stack10, $stack13;

        this := @this: org.jfree.data.time.Second;

        $stack5 = this.<org.jfree.data.time.Second: org.jfree.data.time.Day day>;

        $stack6 = virtualinvoke $stack5.<org.jfree.data.time.Day: long getSerialIndex()>();

        $stack9 = $stack6 * 24L;

        $stack7 = this.<org.jfree.data.time.Second: byte hour>;

        $stack8 = (long) $stack7;

        hourIndex = $stack9 + $stack8;

        $stack12 = hourIndex * 60L;

        $stack10 = this.<org.jfree.data.time.Second: byte minute>;

        $stack11 = (long) $stack10;

        minuteIndex = $stack12 + $stack11;

        $stack15 = minuteIndex * 60L;

        $stack13 = this.<org.jfree.data.time.Second: byte second>;

        $stack14 = (long) $stack13;

        $stack16 = $stack15 + $stack14;

        return $stack16;
    }

    public long getFirstMillisecond(java.util.Calendar)
    {
        org.jfree.data.time.Second this;
        org.jfree.data.time.Day $stack5, $stack7, $stack9;
        int year, $stack8, month, d;
        java.util.Calendar calendar;
        byte $stack11, $stack12, $stack13;
        long $stack14;

        this := @this: org.jfree.data.time.Second;

        calendar := @parameter0: java.util.Calendar;

        $stack5 = this.<org.jfree.data.time.Second: org.jfree.data.time.Day day>;

        year = virtualinvoke $stack5.<org.jfree.data.time.Day: int getYear()>();

        $stack7 = this.<org.jfree.data.time.Second: org.jfree.data.time.Day day>;

        $stack8 = virtualinvoke $stack7.<org.jfree.data.time.Day: int getMonth()>();

        month = $stack8 - 1;

        $stack9 = this.<org.jfree.data.time.Second: org.jfree.data.time.Day day>;

        d = virtualinvoke $stack9.<org.jfree.data.time.Day: int getDayOfMonth()>();

        virtualinvoke calendar.<java.util.Calendar: void clear()>();

        $stack13 = this.<org.jfree.data.time.Second: byte hour>;

        $stack12 = this.<org.jfree.data.time.Second: byte minute>;

        $stack11 = this.<org.jfree.data.time.Second: byte second>;

        virtualinvoke calendar.<java.util.Calendar: void set(int,int,int,int,int,int)>(year, month, d, $stack13, $stack12, $stack11);

        virtualinvoke calendar.<java.util.Calendar: void set(int,int)>(14, 0);

        $stack14 = virtualinvoke calendar.<java.util.Calendar: long getTimeInMillis()>();

        return $stack14;
    }

    public long getLastMillisecond(java.util.Calendar)
    {
        org.jfree.data.time.Second this;
        java.util.Calendar calendar;
        long $stack2, $stack3;

        this := @this: org.jfree.data.time.Second;

        calendar := @parameter0: java.util.Calendar;

        $stack2 = virtualinvoke this.<org.jfree.data.time.Second: long getFirstMillisecond(java.util.Calendar)>(calendar);

        $stack3 = $stack2 + 999L;

        return $stack3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.data.time.Second this, that;
        boolean $stack3, $stack12;
        byte $stack4, $stack5, $stack6, $stack7, $stack8, $stack9;
        org.jfree.data.time.Day $stack10, $stack11;

        this := @this: org.jfree.data.time.Second;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.data.time.Second;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.data.time.Second) obj;

        $stack5 = this.<org.jfree.data.time.Second: byte second>;

        $stack4 = that.<org.jfree.data.time.Second: byte second>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.data.time.Second: byte minute>;

        $stack6 = that.<org.jfree.data.time.Second: byte minute>;

        if $stack7 == $stack6 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.data.time.Second: byte hour>;

        $stack8 = that.<org.jfree.data.time.Second: byte hour>;

        if $stack9 == $stack8 goto label5;

        return 0;

     label5:
        $stack11 = this.<org.jfree.data.time.Second: org.jfree.data.time.Day day>;

        $stack10 = that.<org.jfree.data.time.Second: org.jfree.data.time.Day day>;

        $stack12 = virtualinvoke $stack11.<org.jfree.data.time.Day: boolean equals(java.lang.Object)>($stack10);

        if $stack12 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.time.Second this;
        byte $stack2, $stack4, $stack6;
        int $stack3, $stack5, $stack7, $stack9, $stack10, result#2;
        org.jfree.data.time.Day $stack8;

        this := @this: org.jfree.data.time.Second;

        $stack3 = 37 * 17;

        $stack2 = this.<org.jfree.data.time.Second: byte second>;

        result#2 = $stack3 + $stack2;

        $stack5 = 37 * result#2;

        $stack4 = this.<org.jfree.data.time.Second: byte minute>;

        result#2 = $stack5 + $stack4;

        $stack7 = 37 * result#2;

        $stack6 = this.<org.jfree.data.time.Second: byte hour>;

        result#2 = $stack7 + $stack6;

        $stack9 = 37 * result#2;

        $stack8 = this.<org.jfree.data.time.Second: org.jfree.data.time.Day day>;

        $stack10 = virtualinvoke $stack8.<org.jfree.data.time.Day: int hashCode()>();

        result#2 = $stack9 + $stack10;

        return result#2;
    }

    public int compareTo(java.lang.Object)
    {
        java.lang.Object o1;
        boolean $stack4, $stack5;
        org.jfree.data.time.Second s, this;
        long $stack7, $stack8, $stack10, $stack11;
        byte $stack9, $stack12, result;

        this := @this: org.jfree.data.time.Second;

        o1 := @parameter0: java.lang.Object;

        $stack4 = o1 instanceof org.jfree.data.time.Second;

        if $stack4 == 0 goto label3;

        s = (org.jfree.data.time.Second) o1;

        $stack8 = this.<org.jfree.data.time.Second: long firstMillisecond>;

        $stack7 = s.<org.jfree.data.time.Second: long firstMillisecond>;

        $stack9 = $stack8 cmp $stack7;

        if $stack9 >= 0 goto label1;

        return -1;

     label1:
        $stack11 = this.<org.jfree.data.time.Second: long firstMillisecond>;

        $stack10 = s.<org.jfree.data.time.Second: long firstMillisecond>;

        $stack12 = $stack11 cmp $stack10;

        if $stack12 <= 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $stack5 = o1 instanceof org.jfree.data.time.RegularTimePeriod;

        if $stack5 == 0 goto label4;

        result = 0;

        goto label5;

     label4:
        result = 1;

     label5:
        return result;
    }

    public static org.jfree.data.time.Second parseSecond(java.lang.String)
    {
        int $stack16, $stack17, $stack20, $stack21, $stack22, $stack23, $stack24, l, $stack29, $stack31, $stack32, $stack34, $stack35, hour, minute, second;
        java.lang.String daystr, hourstr, minstr, secstr, s, s#3, hmsstr;
        org.jfree.data.time.Day day;
        org.jfree.data.time.Minute $stack40;
        org.jfree.data.time.Hour $stack41;
        org.jfree.data.time.Second $stack43, result;

        s := @parameter0: java.lang.String;

        result = null;

        s#3 = virtualinvoke s.<java.lang.String: java.lang.String trim()>();

        $stack16 = virtualinvoke s#3.<java.lang.String: int length()>();

        $stack17 = staticinvoke <java.lang.Math: int min(int,int)>(10, $stack16);

        daystr = virtualinvoke s#3.<java.lang.String: java.lang.String substring(int,int)>(0, $stack17);

        day = staticinvoke <org.jfree.data.time.Day: org.jfree.data.time.Day parseDay(java.lang.String)>(daystr);

        if day == null goto label1;

        $stack20 = virtualinvoke daystr.<java.lang.String: int length()>();

        $stack21 = $stack20 + 1;

        $stack22 = virtualinvoke s#3.<java.lang.String: int length()>();

        $stack23 = staticinvoke <java.lang.Math: int min(int,int)>($stack21, $stack22);

        $stack24 = virtualinvoke s#3.<java.lang.String: int length()>();

        hmsstr = virtualinvoke s#3.<java.lang.String: java.lang.String substring(int,int)>($stack23, $stack24);

        hmsstr = virtualinvoke hmsstr.<java.lang.String: java.lang.String trim()>();

        l = virtualinvoke hmsstr.<java.lang.String: int length()>();

        $stack29 = staticinvoke <java.lang.Math: int min(int,int)>(2, l);

        hourstr = virtualinvoke hmsstr.<java.lang.String: java.lang.String substring(int,int)>(0, $stack29);

        $stack31 = staticinvoke <java.lang.Math: int min(int,int)>(3, l);

        $stack32 = staticinvoke <java.lang.Math: int min(int,int)>(5, l);

        minstr = virtualinvoke hmsstr.<java.lang.String: java.lang.String substring(int,int)>($stack31, $stack32);

        $stack34 = staticinvoke <java.lang.Math: int min(int,int)>(6, l);

        $stack35 = staticinvoke <java.lang.Math: int min(int,int)>(8, l);

        secstr = virtualinvoke hmsstr.<java.lang.String: java.lang.String substring(int,int)>($stack34, $stack35);

        hour = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(hourstr);

        if hour < 0 goto label1;

        if hour > 23 goto label1;

        minute = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(minstr);

        if minute < 0 goto label1;

        if minute > 59 goto label1;

        $stack40 = new org.jfree.data.time.Minute;

        $stack41 = new org.jfree.data.time.Hour;

        specialinvoke $stack41.<org.jfree.data.time.Hour: void <init>(int,org.jfree.data.time.Day)>(hour, day);

        specialinvoke $stack40.<org.jfree.data.time.Minute: void <init>(int,org.jfree.data.time.Hour)>(minute, $stack41);

        second = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(secstr);

        if second < 0 goto label1;

        if second > 59 goto label1;

        $stack43 = new org.jfree.data.time.Second;

        specialinvoke $stack43.<org.jfree.data.time.Second: void <init>(int,org.jfree.data.time.Minute)>(second, $stack40);

        result = $stack43;

     label1:
        return result;
    }

    public static void <clinit>()
    {
        <org.jfree.data.time.Second: int LAST_SECOND_IN_MINUTE> = 59;

        <org.jfree.data.time.Second: int FIRST_SECOND_IN_MINUTE> = 0;

        <org.jfree.data.time.Second: long serialVersionUID> = -6536564190712383466L;

        return;
    }
}
