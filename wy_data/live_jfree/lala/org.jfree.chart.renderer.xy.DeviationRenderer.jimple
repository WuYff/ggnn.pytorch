public class org.jfree.chart.renderer.xy.DeviationRenderer extends org.jfree.chart.renderer.xy.XYLineAndShapeRenderer
{
    private float alpha;

    public void <init>()
    {
        org.jfree.chart.renderer.xy.DeviationRenderer this;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        specialinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: void <init>(boolean,boolean)>(1, 1);

        return;
    }

    public void <init>(boolean, boolean)
    {
        org.jfree.chart.renderer.xy.DeviationRenderer this;
        boolean lines, shapes;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        lines := @parameter0: boolean;

        shapes := @parameter1: boolean;

        specialinvoke this.<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer: void <init>(boolean,boolean)>(lines, shapes);

        specialinvoke this.<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer: void setDrawSeriesLineAsPath(boolean)>(1);

        this.<org.jfree.chart.renderer.xy.DeviationRenderer: float alpha> = 0.5F;

        return;
    }

    public float getAlpha()
    {
        org.jfree.chart.renderer.xy.DeviationRenderer this;
        float $stack1;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.DeviationRenderer: float alpha>;

        return $stack1;
    }

    public void setAlpha(float)
    {
        float alpha;
        byte $stack2, $stack4;
        java.lang.IllegalArgumentException $stack3;
        org.jfree.chart.renderer.xy.DeviationRenderer this;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        alpha := @parameter0: float;

        $stack2 = alpha cmpg 0.0F;

        if $stack2 < 0 goto label1;

        $stack4 = alpha cmpl 1.0F;

        if $stack4 <= 0 goto label2;

     label1:
        $stack3 = new java.lang.IllegalArgumentException;

        specialinvoke $stack3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires \'alpha\' in the range 0.0 to 1.0.");

        throw $stack3;

     label2:
        this.<org.jfree.chart.renderer.xy.DeviationRenderer: float alpha> = alpha;

        virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: void fireChangeEvent()>();

        return;
    }

    public void setDrawSeriesLineAsPath(boolean)
    {
        org.jfree.chart.renderer.xy.DeviationRenderer this;
        boolean flag;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        flag := @parameter0: boolean;

        return;
    }

    public org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)
    {
        org.jfree.chart.renderer.xy.DeviationRenderer this;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.data.Range $stack2;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        dataset := @parameter0: org.jfree.data.xy.XYDataset;

        $stack2 = virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset,boolean)>(dataset, 1);

        return $stack2;
    }

    public org.jfree.chart.renderer.xy.XYItemRendererState initialise(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.data.xy.XYDataset, org.jfree.chart.plot.PlotRenderingInfo)
    {
        org.jfree.chart.renderer.xy.DeviationRenderer$State $stack7;
        org.jfree.chart.plot.PlotRenderingInfo info;
        java.awt.geom.GeneralPath $stack8;
        org.jfree.chart.renderer.xy.DeviationRenderer this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.data.xy.XYDataset dataset;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        dataArea := @parameter1: java.awt.geom.Rectangle2D;

        plot := @parameter2: org.jfree.chart.plot.XYPlot;

        dataset := @parameter3: org.jfree.data.xy.XYDataset;

        info := @parameter4: org.jfree.chart.plot.PlotRenderingInfo;

        $stack7 = new org.jfree.chart.renderer.xy.DeviationRenderer$State;

        specialinvoke $stack7.<org.jfree.chart.renderer.xy.DeviationRenderer$State: void <init>(org.jfree.chart.plot.PlotRenderingInfo)>(info);

        $stack8 = new java.awt.geom.GeneralPath;

        specialinvoke $stack8.<java.awt.geom.GeneralPath: void <init>()>();

        $stack7.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.awt.geom.GeneralPath seriesPath> = $stack8;

        virtualinvoke $stack7.<org.jfree.chart.renderer.xy.DeviationRenderer$State: void setProcessVisibleItemsOnly(boolean)>(0);

        return $stack7;
    }

    public int getPassCount()
    {
        org.jfree.chart.renderer.xy.DeviationRenderer this;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        return 3;
    }

    protected boolean isItemPass(int)
    {
        int pass;
        org.jfree.chart.renderer.xy.DeviationRenderer this;
        boolean $stack2;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        pass := @parameter0: int;

        if pass != 2 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    protected boolean isLinePass(int)
    {
        int pass;
        org.jfree.chart.renderer.xy.DeviationRenderer this;
        boolean $stack2;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        pass := @parameter0: int;

        if pass != 1 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    public void drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotRenderingInfo, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, org.jfree.chart.plot.CrosshairState, int)
    {
        org.jfree.chart.renderer.xy.DeviationRenderer this;
        int series, item, pass, $stack79, $stack81, $stack82, $stack91, $stack94, $stack68, $stack69, i;
        boolean $stack35, $stack37, $stack52, $stack36;
        org.jfree.chart.plot.PlotRenderingInfo info;
        java.awt.Graphics2D g2;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.chart.axis.ValueAxis domainAxis, rangeAxis;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.plot.CrosshairState crosshairState;
        org.jfree.chart.ChartRenderingInfo $stack38;
        org.jfree.chart.renderer.xy.XYItemRendererState state;
        java.awt.geom.GeneralPath $stack53, $stack76;
        org.jfree.chart.renderer.xy.DeviationRenderer$State drState, intervalDataset#27;
        double x, yLow, yHigh, xx, yyLow, yyHigh, $stack86, $stack87, $stack98, $stack99, $stack107, $stack108, $stack115, $stack116;
        org.jfree.chart.ui.RectangleEdge xAxisLocation, yAxisLocation;
        org.jfree.chart.plot.PlotOrientation orientation, $stack66, $stack67;
        java.awt.Composite originalComposite;
        float $stack73, $stack88, $stack89, $stack100, $stack101, $stack109, $stack110, $stack117, $stack118;
        java.awt.AlphaComposite $stack74;
        java.awt.Paint $stack75;
        java.util.List $stack77, $stack80, $stack83, $stack90, $stack92, $stack95, $stack102, $stack103, $stack104, $stack112, $stack122, $stack125, $stack132, $stack135;
        java.lang.Object $stack84, $stack96, $stack105, $stack113;
        double[] $stack85, $stack97, $stack106, $stack114, $stack121, $stack124, $stack131, $stack134, coords;
        org.jfree.data.xy.IntervalXYDataset intervalDataset;
        org.jfree.chart.entity.EntityCollection intervalDataset#28;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        state := @parameter1: org.jfree.chart.renderer.xy.XYItemRendererState;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        info := @parameter3: org.jfree.chart.plot.PlotRenderingInfo;

        plot := @parameter4: org.jfree.chart.plot.XYPlot;

        domainAxis := @parameter5: org.jfree.chart.axis.ValueAxis;

        rangeAxis := @parameter6: org.jfree.chart.axis.ValueAxis;

        dataset := @parameter7: org.jfree.data.xy.XYDataset;

        series := @parameter8: int;

        item := @parameter9: int;

        crosshairState := @parameter10: org.jfree.chart.plot.CrosshairState;

        pass := @parameter11: int;

        $stack35 = virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: boolean getItemVisible(int,int)>(series, item);

        if $stack35 != 0 goto label01;

        return;

     label01:
        if pass != 0 goto label08;

        intervalDataset = (org.jfree.data.xy.IntervalXYDataset) dataset;

        drState = (org.jfree.chart.renderer.xy.DeviationRenderer$State) state;

        x = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getXValue(int,int)>(series, item);

        yLow = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getStartYValue(int,int)>(series, item);

        yHigh = interfaceinvoke intervalDataset.<org.jfree.data.xy.IntervalXYDataset: double getEndYValue(int,int)>(series, item);

        xAxisLocation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        yAxisLocation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        xx = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(x, dataArea, xAxisLocation);

        yyLow = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(yLow, dataArea, yAxisLocation);

        yyHigh = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(yHigh, dataArea, yAxisLocation);

        orientation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack66 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack66 goto label02;

        $stack132 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List lowerCoordinates>;

        $stack131 = newarray (double)[2];

        $stack131[0] = yyLow;

        $stack131[1] = xx;

        interfaceinvoke $stack132.<java.util.List: boolean add(java.lang.Object)>($stack131);

        $stack135 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List upperCoordinates>;

        $stack134 = newarray (double)[2];

        $stack134[0] = yyHigh;

        $stack134[1] = xx;

        interfaceinvoke $stack135.<java.util.List: boolean add(java.lang.Object)>($stack134);

        goto label03;

     label02:
        $stack67 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack67 goto label03;

        $stack122 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List lowerCoordinates>;

        $stack121 = newarray (double)[2];

        $stack121[0] = xx;

        $stack121[1] = yyLow;

        interfaceinvoke $stack122.<java.util.List: boolean add(java.lang.Object)>($stack121);

        $stack125 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List upperCoordinates>;

        $stack124 = newarray (double)[2];

        $stack124[0] = xx;

        $stack124[1] = yyHigh;

        interfaceinvoke $stack125.<java.util.List: boolean add(java.lang.Object)>($stack124);

     label03:
        $stack68 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(series);

        $stack69 = $stack68 - 1;

        if item != $stack69 goto label08;

        originalComposite = virtualinvoke g2.<java.awt.Graphics2D: java.awt.Composite getComposite()>();

        $stack73 = this.<org.jfree.chart.renderer.xy.DeviationRenderer: float alpha>;

        $stack74 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, $stack73);

        virtualinvoke g2.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($stack74);

        $stack75 = virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: java.awt.Paint getItemFillPaint(int,int)>(series, item);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack75);

        $stack76 = new java.awt.geom.GeneralPath;

        $stack77 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List lowerCoordinates>;

        $stack79 = interfaceinvoke $stack77.<java.util.List: int size()>();

        $stack80 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List upperCoordinates>;

        $stack81 = interfaceinvoke $stack80.<java.util.List: int size()>();

        $stack82 = $stack79 + $stack81;

        specialinvoke $stack76.<java.awt.geom.GeneralPath: void <init>(int,int)>(1, $stack82);

        $stack83 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List lowerCoordinates>;

        $stack84 = interfaceinvoke $stack83.<java.util.List: java.lang.Object get(int)>(0);

        $stack85 = (double[]) $stack84;

        coords = (double[]) $stack85;

        $stack86 = coords[0];

        $stack89 = (float) $stack86;

        $stack87 = coords[1];

        $stack88 = (float) $stack87;

        virtualinvoke $stack76.<java.awt.geom.GeneralPath: void moveTo(float,float)>($stack89, $stack88);

        i = 1;

     label04:
        $stack90 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List lowerCoordinates>;

        $stack91 = interfaceinvoke $stack90.<java.util.List: int size()>();

        if i >= $stack91 goto label05;

        $stack112 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List lowerCoordinates>;

        $stack113 = interfaceinvoke $stack112.<java.util.List: java.lang.Object get(int)>(i);

        $stack114 = (double[]) $stack113;

        coords = (double[]) $stack114;

        $stack115 = coords[0];

        $stack118 = (float) $stack115;

        $stack116 = coords[1];

        $stack117 = (float) $stack116;

        virtualinvoke $stack76.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack118, $stack117);

        i = i + 1;

        goto label04;

     label05:
        $stack92 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List upperCoordinates>;

        i = interfaceinvoke $stack92.<java.util.List: int size()>();

        $stack95 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List upperCoordinates>;

        $stack94 = i - 1;

        $stack96 = interfaceinvoke $stack95.<java.util.List: java.lang.Object get(int)>($stack94);

        $stack97 = (double[]) $stack96;

        coords = (double[]) $stack97;

        $stack98 = coords[0];

        $stack101 = (float) $stack98;

        $stack99 = coords[1];

        $stack100 = (float) $stack99;

        virtualinvoke $stack76.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack101, $stack100);

        i = i - 2;

     label06:
        if i < 0 goto label07;

        $stack104 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List upperCoordinates>;

        $stack105 = interfaceinvoke $stack104.<java.util.List: java.lang.Object get(int)>(i);

        $stack106 = (double[]) $stack105;

        coords = (double[]) $stack106;

        $stack107 = coords[0];

        $stack110 = (float) $stack107;

        $stack108 = coords[1];

        $stack109 = (float) $stack108;

        virtualinvoke $stack76.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack110, $stack109);

        i = i + -1;

        goto label06;

     label07:
        virtualinvoke $stack76.<java.awt.geom.GeneralPath: void closePath()>();

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack76);

        virtualinvoke g2.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(originalComposite);

        $stack102 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List lowerCoordinates>;

        interfaceinvoke $stack102.<java.util.List: void clear()>();

        $stack103 = drState.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.util.List upperCoordinates>;

        interfaceinvoke $stack103.<java.util.List: void clear()>();

     label08:
        $stack36 = virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: boolean isLinePass(int)>(pass);

        if $stack36 == 0 goto label10;

        if item != 0 goto label09;

        intervalDataset#27 = (org.jfree.chart.renderer.xy.DeviationRenderer$State) state;

        $stack53 = intervalDataset#27.<org.jfree.chart.renderer.xy.DeviationRenderer$State: java.awt.geom.GeneralPath seriesPath>;

        virtualinvoke $stack53.<java.awt.geom.GeneralPath: void reset()>();

        virtualinvoke intervalDataset#27.<org.jfree.chart.renderer.xy.DeviationRenderer$State: void setLastPointGood(boolean)>(0);

     label09:
        $stack52 = virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: boolean getItemLineVisible(int,int)>(series, item);

        if $stack52 == 0 goto label12;

        virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: void drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>(state, g2, plot, dataset, pass, series, item, domainAxis, rangeAxis, dataArea);

        goto label12;

     label10:
        $stack37 = virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: boolean isItemPass(int)>(pass);

        if $stack37 == 0 goto label12;

        intervalDataset#28 = null;

        if info == null goto label11;

        $stack38 = virtualinvoke info.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>();

        intervalDataset#28 = virtualinvoke $stack38.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

     label11:
        virtualinvoke this.<org.jfree.chart.renderer.xy.DeviationRenderer: void drawSecondaryPass(java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D,org.jfree.chart.axis.ValueAxis,org.jfree.chart.plot.CrosshairState,org.jfree.chart.entity.EntityCollection)>(g2, plot, dataset, pass, series, item, domainAxis, dataArea, rangeAxis, crosshairState, intervalDataset#28);

     label12:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.xy.DeviationRenderer this, that;
        boolean $stack3, $stack7;
        float $stack4, $stack5;
        byte $stack6;

        this := @this: org.jfree.chart.renderer.xy.DeviationRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.renderer.xy.DeviationRenderer;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.renderer.xy.DeviationRenderer) obj;

        $stack5 = this.<org.jfree.chart.renderer.xy.DeviationRenderer: float alpha>;

        $stack4 = that.<org.jfree.chart.renderer.xy.DeviationRenderer: float alpha>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label3;

        return 0;

     label3:
        $stack7 = specialinvoke this.<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer: boolean equals(java.lang.Object)>(obj);

        return $stack7;
    }
}
