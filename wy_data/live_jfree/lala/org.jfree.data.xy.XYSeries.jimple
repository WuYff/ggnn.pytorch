public class org.jfree.data.xy.XYSeries extends org.jfree.data.general.Series implements java.lang.Cloneable, java.io.Serializable
{
    static final long serialVersionUID;
    protected java.util.List data;
    private int maximumItemCount;
    private boolean autoSort;
    private boolean allowDuplicateXValues;
    private double minX;
    private double maxX;
    private double minY;
    private double maxY;

    public void <init>(java.lang.Comparable)
    {
        org.jfree.data.xy.XYSeries this;
        java.lang.Comparable key;

        this := @this: org.jfree.data.xy.XYSeries;

        key := @parameter0: java.lang.Comparable;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void <init>(java.lang.Comparable,boolean,boolean)>(key, 1, 1);

        return;
    }

    public void <init>(java.lang.Comparable, boolean)
    {
        org.jfree.data.xy.XYSeries this;
        java.lang.Comparable key;
        boolean autoSort;

        this := @this: org.jfree.data.xy.XYSeries;

        key := @parameter0: java.lang.Comparable;

        autoSort := @parameter1: boolean;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void <init>(java.lang.Comparable,boolean,boolean)>(key, autoSort, 1);

        return;
    }

    public void <init>(java.lang.Comparable, boolean, boolean)
    {
        org.jfree.data.xy.XYSeries this;
        java.lang.Comparable key;
        java.util.ArrayList $stack4;
        boolean autoSort, allowDuplicateXValues;

        this := @this: org.jfree.data.xy.XYSeries;

        key := @parameter0: java.lang.Comparable;

        autoSort := @parameter1: boolean;

        allowDuplicateXValues := @parameter2: boolean;

        specialinvoke this.<org.jfree.data.general.Series: void <init>(java.lang.Comparable)>(key);

        this.<org.jfree.data.xy.XYSeries: int maximumItemCount> = 2147483647;

        $stack4 = new java.util.ArrayList;

        specialinvoke $stack4.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.data.xy.XYSeries: java.util.List data> = $stack4;

        this.<org.jfree.data.xy.XYSeries: boolean autoSort> = autoSort;

        this.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues> = allowDuplicateXValues;

        this.<org.jfree.data.xy.XYSeries: double minX> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double maxX> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double minY> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double maxY> = #NaN;

        return;
    }

    public double getMinX()
    {
        org.jfree.data.xy.XYSeries this;
        double $stack1;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: double minX>;

        return $stack1;
    }

    public double getMaxX()
    {
        org.jfree.data.xy.XYSeries this;
        double $stack1;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: double maxX>;

        return $stack1;
    }

    public double getMinY()
    {
        org.jfree.data.xy.XYSeries this;
        double $stack1;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: double minY>;

        return $stack1;
    }

    public double getMaxY()
    {
        org.jfree.data.xy.XYSeries this;
        double $stack1;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: double maxY>;

        return $stack1;
    }

    private void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)
    {
        org.jfree.data.xy.XYDataItem item;
        double x, $stack7, $stack8, $stack9, $stack10, y, $stack13, $stack14, $stack15, $stack16;
        org.jfree.data.xy.XYSeries this;
        java.lang.Number $stack11;

        this := @this: org.jfree.data.xy.XYSeries;

        item := @parameter0: org.jfree.data.xy.XYDataItem;

        x = virtualinvoke item.<org.jfree.data.xy.XYDataItem: double getXValue()>();

        $stack7 = this.<org.jfree.data.xy.XYSeries: double minX>;

        $stack8 = specialinvoke this.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($stack7, x);

        this.<org.jfree.data.xy.XYSeries: double minX> = $stack8;

        $stack9 = this.<org.jfree.data.xy.XYSeries: double maxX>;

        $stack10 = specialinvoke this.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($stack9, x);

        this.<org.jfree.data.xy.XYSeries: double maxX> = $stack10;

        $stack11 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>();

        if $stack11 == null goto label1;

        y = virtualinvoke item.<org.jfree.data.xy.XYDataItem: double getYValue()>();

        $stack13 = this.<org.jfree.data.xy.XYSeries: double minY>;

        $stack14 = specialinvoke this.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($stack13, y);

        this.<org.jfree.data.xy.XYSeries: double minY> = $stack14;

        $stack15 = this.<org.jfree.data.xy.XYSeries: double maxY>;

        $stack16 = specialinvoke this.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($stack15, y);

        this.<org.jfree.data.xy.XYSeries: double maxY> = $stack16;

     label1:
        return;
    }

    private void updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)
    {
        org.jfree.data.xy.XYDataItem item;
        double x, $stack13, $stack17, y, $stack21, $stack23, $stack26, $stack29;
        boolean $stack9, $stack11, $stack19, itemContributesToXBounds, itemContributesToYBounds;
        org.jfree.data.xy.XYSeries this;
        java.lang.Number $stack12, $stack16, $stack10;
        int $stack14, $stack15;
        byte $stack22, $stack24, $stack27, $stack30;

        this := @this: org.jfree.data.xy.XYSeries;

        item := @parameter0: org.jfree.data.xy.XYDataItem;

        itemContributesToXBounds = 0;

        itemContributesToYBounds = 0;

        x = virtualinvoke item.<org.jfree.data.xy.XYDataItem: double getXValue()>();

        $stack9 = staticinvoke <java.lang.Double: boolean isNaN(double)>(x);

        if $stack9 != 0 goto label2;

        $stack26 = this.<org.jfree.data.xy.XYSeries: double minX>;

        $stack27 = x cmpg $stack26;

        if $stack27 <= 0 goto label1;

        $stack29 = this.<org.jfree.data.xy.XYSeries: double maxX>;

        $stack30 = x cmpl $stack29;

        if $stack30 < 0 goto label2;

     label1:
        itemContributesToXBounds = 1;

     label2:
        $stack10 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>();

        if $stack10 == null goto label4;

        y = virtualinvoke item.<org.jfree.data.xy.XYDataItem: double getYValue()>();

        $stack19 = staticinvoke <java.lang.Double: boolean isNaN(double)>(y);

        if $stack19 != 0 goto label4;

        $stack21 = this.<org.jfree.data.xy.XYSeries: double minY>;

        $stack22 = y cmpg $stack21;

        if $stack22 <= 0 goto label3;

        $stack23 = this.<org.jfree.data.xy.XYSeries: double maxY>;

        $stack24 = y cmpl $stack23;

        if $stack24 < 0 goto label4;

     label3:
        itemContributesToYBounds = 1;

     label4:
        if itemContributesToYBounds == 0 goto label5;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void findBoundsByIteration()>();

        goto label7;

     label5:
        if itemContributesToXBounds == 0 goto label7;

        $stack11 = virtualinvoke this.<org.jfree.data.xy.XYSeries: boolean getAutoSort()>();

        if $stack11 == 0 goto label6;

        $stack12 = virtualinvoke this.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(0);

        $stack13 = virtualinvoke $stack12.<java.lang.Number: double doubleValue()>();

        this.<org.jfree.data.xy.XYSeries: double minX> = $stack13;

        $stack14 = virtualinvoke this.<org.jfree.data.xy.XYSeries: int getItemCount()>();

        $stack15 = $stack14 - 1;

        $stack16 = virtualinvoke this.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.Number: double doubleValue()>();

        this.<org.jfree.data.xy.XYSeries: double maxX> = $stack17;

        goto label7;

     label6:
        specialinvoke this.<org.jfree.data.xy.XYSeries: void findBoundsByIteration()>();

     label7:
        return;
    }

    private void findBoundsByIteration()
    {
        org.jfree.data.xy.XYSeries this;
        java.util.List $stack3;
        java.util.Iterator l1;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jfree.data.xy.XYDataItem item;

        this := @this: org.jfree.data.xy.XYSeries;

        this.<org.jfree.data.xy.XYSeries: double minX> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double maxX> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double minY> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double maxY> = #NaN;

        $stack3 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        l1 = interfaceinvoke $stack3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        item = (org.jfree.data.xy.XYDataItem) $stack6;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(item);

        goto label1;

     label2:
        return;
    }

    public boolean getAutoSort()
    {
        org.jfree.data.xy.XYSeries this;
        boolean $stack1;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: boolean autoSort>;

        return $stack1;
    }

    public boolean getAllowDuplicateXValues()
    {
        org.jfree.data.xy.XYSeries this;
        boolean $stack1;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>;

        return $stack1;
    }

    public int getItemCount()
    {
        org.jfree.data.xy.XYSeries this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public java.util.List getItems()
    {
        org.jfree.data.xy.XYSeries this;
        java.util.List $stack1, $stack2;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack1);

        return $stack2;
    }

    public int getMaximumItemCount()
    {
        org.jfree.data.xy.XYSeries this;
        int $stack1;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: int maximumItemCount>;

        return $stack1;
    }

    public void setMaximumItemCount(int)
    {
        org.jfree.data.xy.XYSeries this;
        int maximum, $stack4, remove;
        java.util.List $stack3, $stack5, $stack6;

        this := @this: org.jfree.data.xy.XYSeries;

        maximum := @parameter0: int;

        this.<org.jfree.data.xy.XYSeries: int maximumItemCount> = maximum;

        $stack3 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack4 = interfaceinvoke $stack3.<java.util.List: int size()>();

        remove = $stack4 - maximum;

        if remove <= 0 goto label1;

        $stack5 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: java.util.List subList(int,int)>(0, remove);

        interfaceinvoke $stack6.<java.util.List: void clear()>();

        specialinvoke this.<org.jfree.data.xy.XYSeries: void findBoundsByIteration()>();

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>();

     label1:
        return;
    }

    public void add(org.jfree.data.xy.XYDataItem)
    {
        org.jfree.data.xy.XYSeries this;
        org.jfree.data.xy.XYDataItem item;

        this := @this: org.jfree.data.xy.XYSeries;

        item := @parameter0: org.jfree.data.xy.XYDataItem;

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>(item, 1);

        return;
    }

    public void add(double, double)
    {
        org.jfree.data.xy.XYSeries this;
        double x, y;
        java.lang.Double $stack5, $stack6;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: double;

        y := @parameter1: double;

        $stack5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(x);

        $stack6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(y);

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($stack5, $stack6, 1);

        return;
    }

    public void add(double, double, boolean)
    {
        org.jfree.data.xy.XYSeries this;
        double x, y;
        java.lang.Double $stack6, $stack7;
        boolean notify;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: double;

        y := @parameter1: double;

        notify := @parameter2: boolean;

        $stack6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(x);

        $stack7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(y);

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($stack6, $stack7, notify);

        return;
    }

    public void add(double, java.lang.Number)
    {
        org.jfree.data.xy.XYSeries this;
        double x;
        java.lang.Double $stack4;
        java.lang.Number y;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: double;

        y := @parameter1: java.lang.Number;

        $stack4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(x);

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number)>($stack4, y);

        return;
    }

    public void add(double, java.lang.Number, boolean)
    {
        org.jfree.data.xy.XYSeries this;
        double x;
        java.lang.Double $stack5;
        java.lang.Number y;
        boolean notify;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: double;

        y := @parameter1: java.lang.Number;

        notify := @parameter2: boolean;

        $stack5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(x);

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>($stack5, y, notify);

        return;
    }

    public void add(java.lang.Number, java.lang.Number)
    {
        org.jfree.data.xy.XYSeries this;
        java.lang.Number x, y;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: java.lang.Number;

        y := @parameter1: java.lang.Number;

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void add(java.lang.Number,java.lang.Number,boolean)>(x, y, 1);

        return;
    }

    public void add(java.lang.Number, java.lang.Number, boolean)
    {
        org.jfree.data.xy.XYDataItem $stack5;
        java.lang.Number x, y;
        org.jfree.data.xy.XYSeries this;
        boolean notify;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: java.lang.Number;

        y := @parameter1: java.lang.Number;

        notify := @parameter2: boolean;

        $stack5 = new org.jfree.data.xy.XYDataItem;

        specialinvoke $stack5.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(x, y);

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem,boolean)>($stack5, notify);

        return;
    }

    public void add(org.jfree.data.xy.XYDataItem, boolean)
    {
        java.lang.Object $stack5, $stack13, $stack36;
        org.jfree.data.xy.XYSeries this;
        boolean $stack6, $stack7, notify, $stack26;
        java.util.List $stack8, $stack12, $stack24, $stack28, $stack30, $stack32, $stack34, $stack35, $stack45;
        java.lang.Number $stack15;
        org.jfree.data.general.SeriesException $stack23, $stack27;
        int size, $stack31, $stack38, $stack43, $stack44, index, $stack10, $stack11;
        org.jfree.data.xy.XYDataItem $stack37, item, item#2, index#17;

        this := @this: org.jfree.data.xy.XYSeries;

        item := @parameter0: org.jfree.data.xy.XYDataItem;

        notify := @parameter1: boolean;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(item, "item");

        $stack5 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>();

        item#2 = (org.jfree.data.xy.XYDataItem) $stack5;

        $stack6 = this.<org.jfree.data.xy.XYSeries: boolean autoSort>;

        if $stack6 == 0 goto label08;

        $stack24 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        index = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($stack24, item#2);

        if index >= 0 goto label01;

        $stack45 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack43 = neg index;

        $stack44 = $stack43 - 1;

        interfaceinvoke $stack45.<java.util.List: void add(int,java.lang.Object)>($stack44, item#2);

        goto label07;

     label01:
        $stack26 = this.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>;

        if $stack26 == 0 goto label06;

        $stack28 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        size = interfaceinvoke $stack28.<java.util.List: int size()>();

     label02:
        if index >= size goto label03;

        $stack35 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack36 = interfaceinvoke $stack35.<java.util.List: java.lang.Object get(int)>(index);

        $stack37 = (org.jfree.data.xy.XYDataItem) $stack36;

        $stack38 = virtualinvoke item#2.<org.jfree.data.xy.XYDataItem: int compareTo(org.jfree.data.xy.XYDataItem)>($stack37);

        if $stack38 != 0 goto label03;

        index = index + 1;

        goto label02;

     label03:
        $stack30 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack31 = interfaceinvoke $stack30.<java.util.List: int size()>();

        if index >= $stack31 goto label04;

        $stack34 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        interfaceinvoke $stack34.<java.util.List: void add(int,java.lang.Object)>(index, item#2);

        goto label05;

     label04:
        $stack32 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        interfaceinvoke $stack32.<java.util.List: boolean add(java.lang.Object)>(item#2);

     label05:
        goto label07;

     label06:
        $stack27 = new org.jfree.data.general.SeriesException;

        specialinvoke $stack27.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.");

        throw $stack27;

     label07:
        goto label10;

     label08:
        $stack7 = this.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>;

        if $stack7 != 0 goto label09;

        $stack15 = virtualinvoke item#2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>();

        index = virtualinvoke this.<org.jfree.data.xy.XYSeries: int indexOf(java.lang.Number)>($stack15);

        if index < 0 goto label09;

        $stack23 = new org.jfree.data.general.SeriesException;

        specialinvoke $stack23.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>("X-value already exists.");

        throw $stack23;

     label09:
        $stack8 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>(item#2);

     label10:
        specialinvoke this.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(item#2);

        $stack10 = virtualinvoke this.<org.jfree.data.xy.XYSeries: int getItemCount()>();

        $stack11 = this.<org.jfree.data.xy.XYSeries: int maximumItemCount>;

        if $stack10 <= $stack11 goto label11;

        $stack12 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack13 = interfaceinvoke $stack12.<java.util.List: java.lang.Object remove(int)>(0);

        index#17 = (org.jfree.data.xy.XYDataItem) $stack13;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)>(index#17);

     label11:
        if notify == 0 goto label12;

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>();

     label12:
        return;
    }

    public void delete(int, int)
    {
        org.jfree.data.xy.XYSeries this;
        int start, end, $stack3;
        java.util.List $stack4, $stack5;

        this := @this: org.jfree.data.xy.XYSeries;

        start := @parameter0: int;

        end := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack3 = end + 1;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.util.List subList(int,int)>(start, $stack3);

        interfaceinvoke $stack5.<java.util.List: void clear()>();

        specialinvoke this.<org.jfree.data.xy.XYSeries: void findBoundsByIteration()>();

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>();

        return;
    }

    public org.jfree.data.xy.XYDataItem remove(int)
    {
        org.jfree.data.xy.XYSeries this;
        int index;
        java.util.List $stack3;
        java.lang.Object $stack4;
        org.jfree.data.xy.XYDataItem removed;

        this := @this: org.jfree.data.xy.XYSeries;

        index := @parameter0: int;

        $stack3 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack4 = interfaceinvoke $stack3.<java.util.List: java.lang.Object remove(int)>(index);

        removed = (org.jfree.data.xy.XYDataItem) $stack4;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)>(removed);

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>();

        return removed;
    }

    public org.jfree.data.xy.XYDataItem remove(java.lang.Number)
    {
        org.jfree.data.xy.XYSeries this;
        java.lang.Number x;
        int $stack2;
        org.jfree.data.xy.XYDataItem $stack3;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: java.lang.Number;

        $stack2 = virtualinvoke this.<org.jfree.data.xy.XYSeries: int indexOf(java.lang.Number)>(x);

        $stack3 = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem remove(int)>($stack2);

        return $stack3;
    }

    public void clear()
    {
        org.jfree.data.xy.XYSeries this;
        java.util.List $stack1, $stack3;
        int $stack2;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack1 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        if $stack2 <= 0 goto label1;

        $stack3 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        interfaceinvoke $stack3.<java.util.List: void clear()>();

        this.<org.jfree.data.xy.XYSeries: double minX> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double maxX> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double minY> = #NaN;

        this.<org.jfree.data.xy.XYSeries: double maxY> = #NaN;

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>();

     label1:
        return;
    }

    public org.jfree.data.xy.XYDataItem getDataItem(int)
    {
        org.jfree.data.xy.XYSeries this;
        int index;
        java.util.List $stack3;
        java.lang.Object $stack4, $stack5;
        org.jfree.data.xy.XYDataItem item, $stack6;

        this := @this: org.jfree.data.xy.XYSeries;

        index := @parameter0: int;

        $stack3 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack4 = interfaceinvoke $stack3.<java.util.List: java.lang.Object get(int)>(index);

        item = (org.jfree.data.xy.XYDataItem) $stack4;

        $stack5 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>();

        $stack6 = (org.jfree.data.xy.XYDataItem) $stack5;

        return $stack6;
    }

    org.jfree.data.xy.XYDataItem getRawDataItem(int)
    {
        org.jfree.data.xy.XYSeries this;
        int index;
        java.util.List $stack2;
        java.lang.Object $stack3;
        org.jfree.data.xy.XYDataItem $stack4;

        this := @this: org.jfree.data.xy.XYSeries;

        index := @parameter0: int;

        $stack2 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(index);

        $stack4 = (org.jfree.data.xy.XYDataItem) $stack3;

        return $stack4;
    }

    public java.lang.Number getX(int)
    {
        org.jfree.data.xy.XYSeries this;
        int index;
        org.jfree.data.xy.XYDataItem $stack2;
        java.lang.Number $stack3;

        this := @this: org.jfree.data.xy.XYSeries;

        index := @parameter0: int;

        $stack2 = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(index);

        $stack3 = virtualinvoke $stack2.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>();

        return $stack3;
    }

    public java.lang.Number getY(int)
    {
        org.jfree.data.xy.XYSeries this;
        int index;
        org.jfree.data.xy.XYDataItem $stack2;
        java.lang.Number $stack3;

        this := @this: org.jfree.data.xy.XYSeries;

        index := @parameter0: int;

        $stack2 = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(index);

        $stack3 = virtualinvoke $stack2.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>();

        return $stack3;
    }

    private double minIgnoreNaN(double, double)
    {
        double a, b, $stack7;
        boolean $stack5, $stack6;
        org.jfree.data.xy.XYSeries this;

        this := @this: org.jfree.data.xy.XYSeries;

        a := @parameter0: double;

        b := @parameter1: double;

        $stack5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(a);

        if $stack5 == 0 goto label1;

        return b;

     label1:
        $stack6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(b);

        if $stack6 == 0 goto label2;

        return a;

     label2:
        $stack7 = staticinvoke <java.lang.Math: double min(double,double)>(a, b);

        return $stack7;
    }

    private double maxIgnoreNaN(double, double)
    {
        double a, b, $stack7;
        boolean $stack5, $stack6;
        org.jfree.data.xy.XYSeries this;

        this := @this: org.jfree.data.xy.XYSeries;

        a := @parameter0: double;

        b := @parameter1: double;

        $stack5 = staticinvoke <java.lang.Double: boolean isNaN(double)>(a);

        if $stack5 == 0 goto label1;

        return b;

     label1:
        $stack6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(b);

        if $stack6 == 0 goto label2;

        return a;

     label2:
        $stack7 = staticinvoke <java.lang.Math: double max(double,double)>(a, b);

        return $stack7;
    }

    public void updateByIndex(int, java.lang.Number)
    {
        org.jfree.data.xy.XYSeries this;
        int index;
        org.jfree.data.xy.XYDataItem item;
        double oldY, yy, $stack13, $stack14, $stack15, $stack16, $stack18, $stack23;
        boolean $stack11, iterate, $stack25;
        java.lang.Number y;
        byte $stack19, $stack24;

        this := @this: org.jfree.data.xy.XYSeries;

        index := @parameter0: int;

        y := @parameter1: java.lang.Number;

        item = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(index);

        iterate = 0;

        oldY = virtualinvoke item.<org.jfree.data.xy.XYDataItem: double getYValue()>();

        $stack11 = staticinvoke <java.lang.Double: boolean isNaN(double)>(oldY);

        if $stack11 != 0 goto label4;

        $stack18 = this.<org.jfree.data.xy.XYSeries: double minY>;

        $stack19 = oldY cmpg $stack18;

        if $stack19 <= 0 goto label1;

        $stack23 = this.<org.jfree.data.xy.XYSeries: double maxY>;

        $stack24 = oldY cmpl $stack23;

        if $stack24 < 0 goto label2;

     label1:
        $stack25 = 1;

        goto label3;

     label2:
        $stack25 = 0;

     label3:
        iterate = $stack25;

     label4:
        virtualinvoke item.<org.jfree.data.xy.XYDataItem: void setY(java.lang.Number)>(y);

        if iterate == 0 goto label5;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void findBoundsByIteration()>();

        goto label6;

     label5:
        if y == null goto label6;

        yy = virtualinvoke y.<java.lang.Number: double doubleValue()>();

        $stack13 = this.<org.jfree.data.xy.XYSeries: double minY>;

        $stack14 = specialinvoke this.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($stack13, yy);

        this.<org.jfree.data.xy.XYSeries: double minY> = $stack14;

        $stack15 = this.<org.jfree.data.xy.XYSeries: double maxY>;

        $stack16 = specialinvoke this.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($stack15, yy);

        this.<org.jfree.data.xy.XYSeries: double maxY> = $stack16;

     label6:
        virtualinvoke this.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>();

        return;
    }

    public void update(java.lang.Number, java.lang.Number)
    {
        org.jfree.data.xy.XYSeries this;
        java.lang.Number x, y;
        int index;
        org.jfree.data.general.SeriesException $stack5;
        java.lang.StringBuilder $stack6, $stack7, $stack8;
        java.lang.String $stack9;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: java.lang.Number;

        y := @parameter1: java.lang.Number;

        index = virtualinvoke this.<org.jfree.data.xy.XYSeries: int indexOf(java.lang.Number)>(x);

        if index >= 0 goto label1;

        $stack5 = new org.jfree.data.general.SeriesException;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No observation for x = ");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(x);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack5.<org.jfree.data.general.SeriesException: void <init>(java.lang.String)>($stack9);

        throw $stack5;

     label1:
        virtualinvoke this.<org.jfree.data.xy.XYSeries: void updateByIndex(int,java.lang.Number)>(index, y);

        return;
    }

    public org.jfree.data.xy.XYDataItem addOrUpdate(double, double)
    {
        org.jfree.data.xy.XYSeries this;
        double x, y;
        java.lang.Double $stack5, $stack6;
        org.jfree.data.xy.XYDataItem $stack7;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: double;

        y := @parameter1: double;

        $stack5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(x);

        $stack6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(y);

        $stack7 = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem addOrUpdate(java.lang.Number,java.lang.Number)>($stack5, $stack6);

        return $stack7;
    }

    public org.jfree.data.xy.XYDataItem addOrUpdate(java.lang.Number, java.lang.Number)
    {
        org.jfree.data.xy.XYSeries this;
        org.jfree.data.xy.XYDataItem $stack3, $stack4;
        java.lang.Number x, y;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: java.lang.Number;

        y := @parameter1: java.lang.Number;

        $stack3 = new org.jfree.data.xy.XYDataItem;

        specialinvoke $stack3.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(x, y);

        $stack4 = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem addOrUpdate(org.jfree.data.xy.XYDataItem)>($stack3);

        return $stack4;
    }

    public org.jfree.data.xy.XYDataItem addOrUpdate(org.jfree.data.xy.XYDataItem)
    {
        org.jfree.data.xy.XYSeries this;
        boolean $stack10, $stack14, $stack34, iterate, $stack50;
        java.lang.Number $stack11, $stack36, $stack37, $stack35;
        int index, $stack17, $stack18, $stack23, $stack24;
        java.lang.Object $stack13, $stack20, $stack31, $stack32;
        java.util.List $stack15, $stack19, $stack25, $stack30;
        double oldY, yy, $stack39, $stack40, $stack41, $stack42, $stack43, $stack48;
        byte $stack44, $stack49;
        org.jfree.data.xy.XYDataItem item, overwritten, existing, item#14;

        this := @this: org.jfree.data.xy.XYSeries;

        item := @parameter0: org.jfree.data.xy.XYDataItem;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(item, "item");

        $stack10 = this.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>;

        if $stack10 == 0 goto label01;

        virtualinvoke this.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem)>(item);

        return null;

     label01:
        overwritten = null;

        $stack11 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>();

        index = virtualinvoke this.<org.jfree.data.xy.XYSeries: int indexOf(java.lang.Number)>($stack11);

        if index < 0 goto label08;

        $stack30 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack31 = interfaceinvoke $stack30.<java.util.List: java.lang.Object get(int)>(index);

        existing = (org.jfree.data.xy.XYDataItem) $stack31;

        $stack32 = virtualinvoke existing.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>();

        overwritten = (org.jfree.data.xy.XYDataItem) $stack32;

        iterate = 0;

        oldY = virtualinvoke existing.<org.jfree.data.xy.XYDataItem: double getYValue()>();

        $stack34 = staticinvoke <java.lang.Double: boolean isNaN(double)>(oldY);

        if $stack34 != 0 goto label05;

        $stack43 = this.<org.jfree.data.xy.XYSeries: double minY>;

        $stack44 = oldY cmpg $stack43;

        if $stack44 <= 0 goto label02;

        $stack48 = this.<org.jfree.data.xy.XYSeries: double maxY>;

        $stack49 = oldY cmpl $stack48;

        if $stack49 < 0 goto label03;

     label02:
        $stack50 = 1;

        goto label04;

     label03:
        $stack50 = 0;

     label04:
        iterate = $stack50;

     label05:
        $stack35 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>();

        virtualinvoke existing.<org.jfree.data.xy.XYDataItem: void setY(java.lang.Number)>($stack35);

        if iterate == 0 goto label06;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void findBoundsByIteration()>();

        goto label07;

     label06:
        $stack36 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>();

        if $stack36 == null goto label07;

        $stack37 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Number getY()>();

        yy = virtualinvoke $stack37.<java.lang.Number: double doubleValue()>();

        $stack39 = this.<org.jfree.data.xy.XYSeries: double minY>;

        $stack40 = specialinvoke this.<org.jfree.data.xy.XYSeries: double minIgnoreNaN(double,double)>($stack39, yy);

        this.<org.jfree.data.xy.XYSeries: double minY> = $stack40;

        $stack41 = this.<org.jfree.data.xy.XYSeries: double maxY>;

        $stack42 = specialinvoke this.<org.jfree.data.xy.XYSeries: double maxIgnoreNaN(double,double)>($stack41, yy);

        this.<org.jfree.data.xy.XYSeries: double maxY> = $stack42;

     label07:
        goto label11;

     label08:
        $stack13 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Object clone()>();

        item#14 = (org.jfree.data.xy.XYDataItem) $stack13;

        $stack14 = this.<org.jfree.data.xy.XYSeries: boolean autoSort>;

        if $stack14 == 0 goto label09;

        $stack25 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack23 = neg index;

        $stack24 = $stack23 - 1;

        interfaceinvoke $stack25.<java.util.List: void add(int,java.lang.Object)>($stack24, item#14);

        goto label10;

     label09:
        $stack15 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        interfaceinvoke $stack15.<java.util.List: boolean add(java.lang.Object)>(item#14);

     label10:
        specialinvoke this.<org.jfree.data.xy.XYSeries: void updateBoundsForAddedItem(org.jfree.data.xy.XYDataItem)>(item#14);

        $stack17 = virtualinvoke this.<org.jfree.data.xy.XYSeries: int getItemCount()>();

        $stack18 = this.<org.jfree.data.xy.XYSeries: int maximumItemCount>;

        if $stack17 <= $stack18 goto label11;

        $stack19 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack20 = interfaceinvoke $stack19.<java.util.List: java.lang.Object remove(int)>(0);

        existing = (org.jfree.data.xy.XYDataItem) $stack20;

        specialinvoke this.<org.jfree.data.xy.XYSeries: void updateBoundsForRemovedItem(org.jfree.data.xy.XYDataItem)>(existing);

     label11:
        virtualinvoke this.<org.jfree.data.xy.XYSeries: void fireSeriesChanged()>();

        return overwritten;
    }

    public int indexOf(java.lang.Number)
    {
        org.jfree.data.xy.XYSeries this;
        boolean $stack4, $stack10;
        java.util.List $stack5, $stack7, $stack14;
        int $stack6, $stack15, i;
        java.lang.Object $stack8;
        org.jfree.data.xy.XYDataItem item, $stack13;
        java.lang.Number $stack9, x;

        this := @this: org.jfree.data.xy.XYSeries;

        x := @parameter0: java.lang.Number;

        $stack4 = this.<org.jfree.data.xy.XYSeries: boolean autoSort>;

        if $stack4 == 0 goto label1;

        $stack14 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack13 = new org.jfree.data.xy.XYDataItem;

        specialinvoke $stack13.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>(x, null);

        $stack15 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($stack14, $stack13);

        return $stack15;

     label1:
        i = 0;

     label2:
        $stack5 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>();

        if i >= $stack6 goto label4;

        $stack7 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(i);

        item = (org.jfree.data.xy.XYDataItem) $stack8;

        $stack9 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>();

        $stack10 = virtualinvoke $stack9.<java.lang.Object: boolean equals(java.lang.Object)>(x);

        if $stack10 == 0 goto label3;

        return i;

     label3:
        i = i + 1;

        goto label2;

     label4:
        return -1;
    }

    public double[][] toArray()
    {
        org.jfree.data.xy.XYSeries this;
        int itemCount, i;
        double[][] result;
        double[] $stack6, $stack10, $stack13;
        java.lang.Number $stack7, y;
        double $stack8, $stack14;

        this := @this: org.jfree.data.xy.XYSeries;

        itemCount = virtualinvoke this.<org.jfree.data.xy.XYSeries: int getItemCount()>();

        result = newmultiarray (double)[2][itemCount];

        i = 0;

     label1:
        if i >= itemCount goto label4;

        $stack6 = result[0];

        $stack7 = virtualinvoke this.<org.jfree.data.xy.XYSeries: java.lang.Number getX(int)>(i);

        $stack8 = virtualinvoke $stack7.<java.lang.Number: double doubleValue()>();

        $stack6[i] = $stack8;

        y = virtualinvoke this.<org.jfree.data.xy.XYSeries: java.lang.Number getY(int)>(i);

        if y == null goto label2;

        $stack13 = result[1];

        $stack14 = virtualinvoke y.<java.lang.Number: double doubleValue()>();

        $stack13[i] = $stack14;

        goto label3;

     label2:
        $stack10 = result[1];

        $stack10[i] = #NaN;

     label3:
        i = i + 1;

        goto label1;

     label4:
        return result;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.data.xy.XYSeries this, clone;
        java.lang.Object $stack2;
        java.util.List $stack3, $stack4;

        this := @this: org.jfree.data.xy.XYSeries;

        $stack2 = specialinvoke this.<org.jfree.data.general.Series: java.lang.Object clone()>();

        clone = (org.jfree.data.xy.XYSeries) $stack2;

        $stack3 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack4 = staticinvoke <org.jfree.chart.util.CloneUtils: java.util.List cloneList(java.util.List)>($stack3);

        clone.<org.jfree.data.xy.XYSeries: java.util.List data> = $stack4;

        return clone;
    }

    public org.jfree.data.xy.XYSeries createCopy(int, int) throws java.lang.CloneNotSupportedException
    {
        org.jfree.data.xy.XYSeries this, copy;
        java.lang.Object $stack8, $stack14, $stack15;
        java.util.ArrayList $stack9;
        java.util.List $stack10, $stack13;
        boolean $stack11;
        int start, end, index;
        org.jfree.data.xy.XYDataItem item, clone;
        org.jfree.data.general.SeriesException $stack18;
        java.lang.RuntimeException $stack19;

        this := @this: org.jfree.data.xy.XYSeries;

        start := @parameter0: int;

        end := @parameter1: int;

        $stack8 = specialinvoke this.<org.jfree.data.general.Series: java.lang.Object clone()>();

        copy = (org.jfree.data.xy.XYSeries) $stack8;

        $stack9 = new java.util.ArrayList;

        specialinvoke $stack9.<java.util.ArrayList: void <init>()>();

        copy.<org.jfree.data.xy.XYSeries: java.util.List data> = $stack9;

        $stack10 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack11 = interfaceinvoke $stack10.<java.util.List: boolean isEmpty()>();

        if $stack11 != 0 goto label6;

        index = start;

     label1:
        if index > end goto label6;

        $stack13 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack14 = interfaceinvoke $stack13.<java.util.List: java.lang.Object get(int)>(index);

        item = (org.jfree.data.xy.XYDataItem) $stack14;

        $stack15 = staticinvoke <org.jfree.chart.util.CloneUtils: java.lang.Object clone(java.lang.Object)>(item);

        clone = (org.jfree.data.xy.XYDataItem) $stack15;

     label2:
        virtualinvoke copy.<org.jfree.data.xy.XYSeries: void add(org.jfree.data.xy.XYDataItem)>(clone);

     label3:
        goto label5;

     label4:
        $stack18 := @caughtexception;

        $stack19 = new java.lang.RuntimeException;

        specialinvoke $stack19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to add cloned data item.", $stack18);

        throw $stack19;

     label5:
        index = index + 1;

        goto label1;

     label6:
        return copy;

        catch org.jfree.data.general.SeriesException from label2 to label3 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.data.xy.XYSeries this, that;
        boolean $stack3, $stack4, $stack7, $stack8, $stack9, $stack10, $stack13;
        int $stack5, $stack6;
        java.util.List $stack11, $stack12;

        this := @this: org.jfree.data.xy.XYSeries;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.data.xy.XYSeries;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        $stack4 = specialinvoke this.<org.jfree.data.general.Series: boolean equals(java.lang.Object)>(obj);

        if $stack4 != 0 goto label3;

        return 0;

     label3:
        that = (org.jfree.data.xy.XYSeries) obj;

        $stack6 = this.<org.jfree.data.xy.XYSeries: int maximumItemCount>;

        $stack5 = that.<org.jfree.data.xy.XYSeries: int maximumItemCount>;

        if $stack6 == $stack5 goto label4;

        return 0;

     label4:
        $stack8 = this.<org.jfree.data.xy.XYSeries: boolean autoSort>;

        $stack7 = that.<org.jfree.data.xy.XYSeries: boolean autoSort>;

        if $stack8 == $stack7 goto label5;

        return 0;

     label5:
        $stack10 = this.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>;

        $stack9 = that.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>;

        if $stack10 == $stack9 goto label6;

        return 0;

     label6:
        $stack12 = this.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack11 = that.<org.jfree.data.xy.XYSeries: java.util.List data>;

        $stack13 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack12, $stack11);

        if $stack13 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.xy.XYSeries this;
        int count, $stack6, $stack7, $stack9, $stack11, $stack20, $stack22, $stack23, $stack31, $stack33, $stack34, $stack38, $stack39, result;
        boolean $stack8, $stack10;
        org.jfree.data.xy.XYDataItem item;
        byte $stack15, $stack12;

        this := @this: org.jfree.data.xy.XYSeries;

        result = specialinvoke this.<org.jfree.data.general.Series: int hashCode()>();

        count = virtualinvoke this.<org.jfree.data.xy.XYSeries: int getItemCount()>();

        if count <= 0 goto label1;

        item = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>(0);

        $stack38 = 29 * result;

        $stack39 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: int hashCode()>();

        result = $stack38 + $stack39;

     label1:
        if count <= 1 goto label2;

        $stack31 = count - 1;

        item = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>($stack31);

        $stack33 = 29 * result;

        $stack34 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: int hashCode()>();

        result = $stack33 + $stack34;

     label2:
        if count <= 2 goto label3;

        $stack20 = count / 2;

        item = virtualinvoke this.<org.jfree.data.xy.XYSeries: org.jfree.data.xy.XYDataItem getRawDataItem(int)>($stack20);

        $stack22 = 29 * result;

        $stack23 = virtualinvoke item.<org.jfree.data.xy.XYDataItem: int hashCode()>();

        result = $stack22 + $stack23;

     label3:
        $stack7 = 29 * result;

        $stack6 = this.<org.jfree.data.xy.XYSeries: int maximumItemCount>;

        result = $stack7 + $stack6;

        $stack9 = 29 * result;

        $stack8 = this.<org.jfree.data.xy.XYSeries: boolean autoSort>;

        if $stack8 == 0 goto label4;

        $stack15 = 1;

        goto label5;

     label4:
        $stack15 = 0;

     label5:
        result = $stack9 + $stack15;

        $stack11 = 29 * result;

        $stack10 = this.<org.jfree.data.xy.XYSeries: boolean allowDuplicateXValues>;

        if $stack10 == 0 goto label6;

        $stack12 = 1;

        goto label7;

     label6:
        $stack12 = 0;

     label7:
        result = $stack11 + $stack12;

        return result;
    }

    public static void <clinit>()
    {
        <org.jfree.data.xy.XYSeries: long serialVersionUID> = -5908509288197150436L;

        return;
    }
}
