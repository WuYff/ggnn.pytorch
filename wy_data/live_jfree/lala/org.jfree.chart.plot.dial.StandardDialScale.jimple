public class org.jfree.chart.plot.dial.StandardDialScale extends org.jfree.chart.plot.dial.AbstractDialLayer implements org.jfree.chart.plot.dial.DialScale, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    static final long serialVersionUID;
    private double lowerBound;
    private double upperBound;
    private double startAngle;
    private double extent;
    private double tickRadius;
    private double majorTickIncrement;
    private double majorTickLength;
    private transient java.awt.Paint majorTickPaint;
    private transient java.awt.Stroke majorTickStroke;
    private int minorTickCount;
    private double minorTickLength;
    private transient java.awt.Paint minorTickPaint;
    private transient java.awt.Stroke minorTickStroke;
    private double tickLabelOffset;
    private java.awt.Font tickLabelFont;
    private boolean tickLabelsVisible;
    private java.text.NumberFormat tickLabelFormatter;
    private boolean firstTickLabelVisible;
    private transient java.awt.Paint tickLabelPaint;

    public void <init>()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        specialinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void <init>(double,double,double,double,double,int)>(0.0, 100.0, 175.0, -170.0, 10.0, 4);

        return;
    }

    public void <init>(double, double, double, double, double, int)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double majorTickIncrement, startAngle, extent, lowerBound, upperBound;
        byte $stack12;
        java.text.DecimalFormat $stack13;
        java.awt.Font $stack14;
        java.awt.Color $stack15, $stack16, $stack18;
        java.awt.BasicStroke $stack17, $stack19;
        int minorTickCount;
        java.lang.IllegalArgumentException $stack20;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        lowerBound := @parameter0: double;

        upperBound := @parameter1: double;

        startAngle := @parameter2: double;

        extent := @parameter3: double;

        majorTickIncrement := @parameter4: double;

        minorTickCount := @parameter5: int;

        specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: void <init>()>();

        $stack12 = majorTickIncrement cmpg 0.0;

        if $stack12 > 0 goto label1;

        $stack20 = new java.lang.IllegalArgumentException;

        specialinvoke $stack20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires \'majorTickIncrement\' > 0.");

        throw $stack20;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle> = startAngle;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double extent> = extent;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound> = lowerBound;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound> = upperBound;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius> = 0.7;

        this.<org.jfree.chart.plot.dial.StandardDialScale: boolean tickLabelsVisible> = 1;

        $stack13 = new java.text.DecimalFormat;

        specialinvoke $stack13.<java.text.DecimalFormat: void <init>(java.lang.String)>("0.0");

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.text.NumberFormat tickLabelFormatter> = $stack13;

        this.<org.jfree.chart.plot.dial.StandardDialScale: boolean firstTickLabelVisible> = 1;

        $stack14 = new java.awt.Font;

        specialinvoke $stack14.<java.awt.Font: void <init>(java.lang.String,int,int)>("Dialog", 1, 16);

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Font tickLabelFont> = $stack14;

        $stack15 = <java.awt.Color: java.awt.Color BLUE>;

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint tickLabelPaint> = $stack15;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double tickLabelOffset> = 0.1;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickIncrement> = majorTickIncrement;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickLength> = 0.04;

        $stack16 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint majorTickPaint> = $stack16;

        $stack17 = new java.awt.BasicStroke;

        specialinvoke $stack17.<java.awt.BasicStroke: void <init>(float)>(3.0F);

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke majorTickStroke> = $stack17;

        this.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount> = minorTickCount;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength> = 0.02;

        $stack18 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint minorTickPaint> = $stack18;

        $stack19 = new java.awt.BasicStroke;

        specialinvoke $stack19.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke minorTickStroke> = $stack19;

        return;
    }

    public double getLowerBound()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound>;

        return $stack1;
    }

    public void setLowerBound(double)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double lower;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        lower := @parameter0: double;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound> = lower;

        $stack3 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack3);

        return;
    }

    public double getUpperBound()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound>;

        return $stack1;
    }

    public void setUpperBound(double)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double upper;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        upper := @parameter0: double;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound> = upper;

        $stack3 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack3);

        return;
    }

    public double getStartAngle()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        return $stack1;
    }

    public void setStartAngle(double)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double angle;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        angle := @parameter0: double;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle> = angle;

        $stack3 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack3);

        return;
    }

    public double getExtent()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double extent>;

        return $stack1;
    }

    public void setExtent(double)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double extent;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        extent := @parameter0: double;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double extent> = extent;

        $stack3 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack3);

        return;
    }

    public double getTickRadius()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        return $stack1;
    }

    public void setTickRadius(double)
    {
        double radius;
        byte $stack3;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack4;
        java.lang.IllegalArgumentException $stack5;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        radius := @parameter0: double;

        $stack3 = radius cmpg 0.0;

        if $stack3 > 0 goto label1;

        $stack5 = new java.lang.IllegalArgumentException;

        specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'radius\' must be positive.");

        throw $stack5;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius> = radius;

        $stack4 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack4);

        return;
    }

    public double getMajorTickIncrement()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickIncrement>;

        return $stack1;
    }

    public void setMajorTickIncrement(double)
    {
        double increment;
        byte $stack3;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack4;
        java.lang.IllegalArgumentException $stack5;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        increment := @parameter0: double;

        $stack3 = increment cmpg 0.0;

        if $stack3 > 0 goto label1;

        $stack5 = new java.lang.IllegalArgumentException;

        specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'increment\' must be positive.");

        throw $stack5;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickIncrement> = increment;

        $stack4 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack4);

        return;
    }

    public double getMajorTickLength()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickLength>;

        return $stack1;
    }

    public void setMajorTickLength(double)
    {
        double length;
        byte $stack3;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack4;
        java.lang.IllegalArgumentException $stack5;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        length := @parameter0: double;

        $stack3 = length cmpg 0.0;

        if $stack3 >= 0 goto label1;

        $stack5 = new java.lang.IllegalArgumentException;

        specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative \'length\' argument.");

        throw $stack5;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickLength> = length;

        $stack4 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack4);

        return;
    }

    public java.awt.Paint getMajorTickPaint()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint majorTickPaint>;

        return $stack1;
    }

    public void setMajorTickPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint majorTickPaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Stroke getMajorTickStroke()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke majorTickStroke>;

        return $stack1;
    }

    public void setMajorTickStroke(java.awt.Stroke)
    {
        java.awt.Stroke stroke;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        stroke := @parameter0: java.awt.Stroke;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(stroke, "stroke");

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke majorTickStroke> = stroke;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public int getMinorTickCount()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        int $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount>;

        return $stack1;
    }

    public void setMinorTickCount(int)
    {
        int count;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;
        java.lang.IllegalArgumentException $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        count := @parameter0: int;

        if count >= 0 goto label1;

        $stack3 = new java.lang.IllegalArgumentException;

        specialinvoke $stack3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'count\' cannot be negative.");

        throw $stack3;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount> = count;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public double getMinorTickLength()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength>;

        return $stack1;
    }

    public void setMinorTickLength(double)
    {
        double length;
        byte $stack3;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack4;
        java.lang.IllegalArgumentException $stack5;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        length := @parameter0: double;

        $stack3 = length cmpg 0.0;

        if $stack3 >= 0 goto label1;

        $stack5 = new java.lang.IllegalArgumentException;

        specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative \'length\' argument.");

        throw $stack5;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength> = length;

        $stack4 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack4);

        return;
    }

    public java.awt.Paint getMinorTickPaint()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint minorTickPaint>;

        return $stack1;
    }

    public void setMinorTickPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint minorTickPaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Stroke getMinorTickStroke()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke minorTickStroke>;

        return $stack1;
    }

    public void setMinorTickStroke(java.awt.Stroke)
    {
        java.awt.Stroke stroke;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        stroke := @parameter0: java.awt.Stroke;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(stroke, "stroke");

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke minorTickStroke> = stroke;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public double getTickLabelOffset()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickLabelOffset>;

        return $stack1;
    }

    public void setTickLabelOffset(double)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double offset;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        offset := @parameter0: double;

        this.<org.jfree.chart.plot.dial.StandardDialScale: double tickLabelOffset> = offset;

        $stack3 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack3);

        return;
    }

    public java.awt.Font getTickLabelFont()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Font tickLabelFont>;

        return $stack1;
    }

    public void setTickLabelFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Font tickLabelFont> = font;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Paint getTickLabelPaint()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint tickLabelPaint>;

        return $stack1;
    }

    public void setTickLabelPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint tickLabelPaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public boolean getTickLabelsVisible()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        boolean $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: boolean tickLabelsVisible>;

        return $stack1;
    }

    public void setTickLabelsVisible(boolean)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        boolean visible;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.plot.dial.StandardDialScale: boolean tickLabelsVisible> = visible;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.text.NumberFormat getTickLabelFormatter()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.text.NumberFormat $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.text.NumberFormat tickLabelFormatter>;

        return $stack1;
    }

    public void setTickLabelFormatter(java.text.NumberFormat)
    {
        java.text.NumberFormat formatter;
        org.jfree.chart.plot.dial.StandardDialScale this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        formatter := @parameter0: java.text.NumberFormat;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(formatter, "formatter");

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.text.NumberFormat tickLabelFormatter> = formatter;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public boolean getFirstTickLabelVisible()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        boolean $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialScale: boolean firstTickLabelVisible>;

        return $stack1;
    }

    public void setFirstTickLabelVisible(boolean)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        boolean visible;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.plot.dial.StandardDialScale: boolean firstTickLabelVisible> = visible;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public boolean isClippedToWindow()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        return 1;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.dial.DialPlot, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D frame, arcRect, arcRectMajor, arcRectForLabels, view, arcRectMinor;
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack25, $stack26, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack47, $stack48, $stack49, $stack50, $stack52, $stack53, $stack54, $stack55, $stack59, $stack60, $stack61, $stack62, $stack69, $stack76, $stack77, minorTickIncrement, $stack80, $stack81, vv, $stack82, angle, $stack85, $stack86, $stack87, $stack89, $stack90, $stack91, $stack101, $stack103, $stack119, $stack129, $stack130, $stack131, $stack132, $stack133, $stack134, $stack37, $stack36, $stack41, $stack39, $stack38, $stack40, v, $stack45, $stack66;
        int $stack35, $stack74, $stack75, $stack78, $stack79, $stack65, i;
        java.awt.geom.Point2D pt1, pt2, pt3, pt0;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack57, $stack94, $stack98;
        java.awt.Stroke $stack58, $stack93;
        boolean $stack64, $stack109, firstLabel;
        byte $stack70, $stack83, $stack120, $stack46;
        java.awt.Font $stack97;
        java.text.NumberFormat $stack99;
        java.lang.String $stack100;
        float $stack102, $stack105;
        org.jfree.chart.ui.TextAnchor $stack104;
        org.jfree.chart.plot.dial.DialPlot plot;
        java.awt.geom.Arc2D$Double $stack43;
        java.awt.geom.Line2D$Double $stack44;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.dial.DialPlot;

        frame := @parameter2: java.awt.geom.Rectangle2D;

        view := @parameter3: java.awt.geom.Rectangle2D;

        $stack26 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack25 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        arcRect = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack26, $stack25);

        $stack29 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack28 = this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickLength>;

        $stack33 = $stack29 - $stack28;

        $stack31 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack30 = this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickLength>;

        $stack32 = $stack31 - $stack30;

        arcRectMajor = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack33, $stack32);

        arcRectMinor = arcRect;

        $stack35 = this.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount>;

        if $stack35 <= 0 goto label1;

        $stack119 = this.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength>;

        $stack120 = $stack119 cmpl 0.0;

        if $stack120 <= 0 goto label1;

        $stack130 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack129 = this.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength>;

        $stack134 = $stack130 - $stack129;

        $stack132 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack131 = this.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength>;

        $stack133 = $stack132 - $stack131;

        arcRectMinor = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack134, $stack133);

     label1:
        $stack37 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack36 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickLabelOffset>;

        $stack41 = $stack37 - $stack36;

        $stack39 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack38 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickLabelOffset>;

        $stack40 = $stack39 - $stack38;

        arcRectForLabels = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack41, $stack40);

        firstLabel = 1;

        $stack43 = new java.awt.geom.Arc2D$Double;

        specialinvoke $stack43.<java.awt.geom.Arc2D$Double: void <init>()>();

        $stack44 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack44.<java.awt.geom.Line2D$Double: void <init>()>();

        v = this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound>;

     label2:
        $stack45 = this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound>;

        $stack46 = v cmpg $stack45;

        if $stack46 > 0 goto label8;

        $stack47 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack48 = virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: double valueToAngle(double)>(v);

        $stack49 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack50 = $stack48 - $stack49;

        virtualinvoke $stack43.<java.awt.geom.Arc2D: void setArc(java.awt.geom.Rectangle2D,double,double,int)>(arcRect, $stack47, $stack50, 0);

        pt0 = virtualinvoke $stack43.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>();

        $stack52 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack53 = virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: double valueToAngle(double)>(v);

        $stack54 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack55 = $stack53 - $stack54;

        virtualinvoke $stack43.<java.awt.geom.Arc2D: void setArc(java.awt.geom.Rectangle2D,double,double,int)>(arcRectMajor, $stack52, $stack55, 0);

        pt1 = virtualinvoke $stack43.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>();

        $stack57 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint majorTickPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack57);

        $stack58 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke majorTickStroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack58);

        virtualinvoke $stack44.<java.awt.geom.Line2D: void setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(pt0, pt1);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack44);

        $stack59 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack60 = virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: double valueToAngle(double)>(v);

        $stack61 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack62 = $stack60 - $stack61;

        virtualinvoke $stack43.<java.awt.geom.Arc2D: void setArc(java.awt.geom.Rectangle2D,double,double,int)>(arcRectForLabels, $stack59, $stack62, 0);

        pt2 = virtualinvoke $stack43.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>();

        $stack64 = this.<org.jfree.chart.plot.dial.StandardDialScale: boolean tickLabelsVisible>;

        if $stack64 == 0 goto label4;

        if firstLabel == 0 goto label3;

        $stack109 = this.<org.jfree.chart.plot.dial.StandardDialScale: boolean firstTickLabelVisible>;

        if $stack109 == 0 goto label4;

     label3:
        $stack97 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Font tickLabelFont>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack97);

        $stack98 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint tickLabelPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack98);

        $stack99 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.text.NumberFormat tickLabelFormatter>;

        $stack100 = virtualinvoke $stack99.<java.text.NumberFormat: java.lang.String format(double)>(v);

        $stack101 = virtualinvoke pt2.<java.awt.geom.Point2D: double getX()>();

        $stack102 = (float) $stack101;

        $stack103 = virtualinvoke pt2.<java.awt.geom.Point2D: double getY()>();

        $stack105 = (float) $stack103;

        $stack104 = <org.jfree.chart.ui.TextAnchor: org.jfree.chart.ui.TextAnchor CENTER>;

        staticinvoke <org.jfree.chart.text.TextUtils: java.awt.geom.Rectangle2D drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.ui.TextAnchor)>($stack100, g2, $stack102, $stack105, $stack104);

     label4:
        firstLabel = 0;

        $stack65 = this.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount>;

        if $stack65 <= 0 goto label7;

        $stack69 = this.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength>;

        $stack70 = $stack69 cmpl 0.0;

        if $stack70 <= 0 goto label7;

        $stack77 = this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickIncrement>;

        $stack74 = this.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount>;

        $stack75 = $stack74 + 1;

        $stack76 = (double) $stack75;

        minorTickIncrement = $stack77 / $stack76;

        i = 0;

     label5:
        $stack78 = this.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount>;

        if i >= $stack78 goto label7;

        $stack79 = i + 1;

        $stack80 = (double) $stack79;

        $stack81 = $stack80 * minorTickIncrement;

        vv = v + $stack81;

        $stack82 = this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound>;

        $stack83 = vv cmpl $stack82;

        if $stack83 < 0 goto label6;

        goto label7;

     label6:
        angle = virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialScale: double valueToAngle(double)>(vv);

        $stack87 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack85 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack86 = angle - $stack85;

        virtualinvoke $stack43.<java.awt.geom.Arc2D: void setArc(java.awt.geom.Rectangle2D,double,double,int)>(arcRect, $stack87, $stack86, 0);

        pt0 = virtualinvoke $stack43.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>();

        $stack91 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack89 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack90 = angle - $stack89;

        virtualinvoke $stack43.<java.awt.geom.Arc2D: void setArc(java.awt.geom.Rectangle2D,double,double,int)>(arcRectMinor, $stack91, $stack90, 0);

        pt3 = virtualinvoke $stack43.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>();

        $stack93 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke minorTickStroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack93);

        $stack94 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint minorTickPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack94);

        virtualinvoke $stack44.<java.awt.geom.Line2D: void setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(pt0, pt3);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack44);

        i = i + 1;

        goto label5;

     label7:
        $stack66 = this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickIncrement>;

        v = v + $stack66;

        goto label2;

     label8:
        return;
    }

    public double valueToAngle(double)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack7, $stack8, range, $stack9, unit, value, $stack10, $stack11, $stack12, $stack13, $stack14;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        value := @parameter0: double;

        $stack8 = this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound>;

        $stack7 = this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound>;

        range = $stack8 - $stack7;

        $stack9 = this.<org.jfree.chart.plot.dial.StandardDialScale: double extent>;

        unit = $stack9 / range;

        $stack13 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack10 = this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound>;

        $stack11 = value - $stack10;

        $stack12 = unit * $stack11;

        $stack14 = $stack13 + $stack12;

        return $stack14;
    }

    public double angleToValue(double)
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack7, $stack8, range, $stack9, unit, angle, $stack10, $stack11, $stack12;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        angle := @parameter0: double;

        $stack8 = this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound>;

        $stack7 = this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound>;

        range = $stack8 - $stack7;

        $stack9 = this.<org.jfree.chart.plot.dial.StandardDialScale: double extent>;

        unit = range / $stack9;

        $stack10 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack11 = angle - $stack10;

        $stack12 = $stack11 * unit;

        return $stack12;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.plot.dial.StandardDialScale this, that;
        boolean $stack3, $stack27, $stack30, $stack38, $stack41, $stack42, $stack43, $stack49, $stack52, $stack53;
        double $stack4, $stack5, $stack7, $stack8, $stack10, $stack11, $stack13, $stack14, $stack16, $stack17, $stack19, $stack20, $stack22, $stack23, $stack33, $stack34, $stack44, $stack45;
        byte $stack6, $stack9, $stack12, $stack15, $stack18, $stack21, $stack24, $stack35, $stack46;
        java.awt.Paint $stack25, $stack26, $stack36, $stack37, $stack50, $stack51;
        java.awt.Stroke $stack28, $stack29, $stack39, $stack40;
        int $stack31, $stack32;
        java.awt.Font $stack47, $stack48;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack3 = obj instanceof org.jfree.chart.plot.dial.StandardDialScale;

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        that = (org.jfree.chart.plot.dial.StandardDialScale) obj;

        $stack5 = this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound>;

        $stack4 = that.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label03;

        return 0;

     label03:
        $stack8 = this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound>;

        $stack7 = that.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound>;

        $stack9 = $stack8 cmpl $stack7;

        if $stack9 == 0 goto label04;

        return 0;

     label04:
        $stack11 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack10 = that.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        $stack12 = $stack11 cmpl $stack10;

        if $stack12 == 0 goto label05;

        return 0;

     label05:
        $stack14 = this.<org.jfree.chart.plot.dial.StandardDialScale: double extent>;

        $stack13 = that.<org.jfree.chart.plot.dial.StandardDialScale: double extent>;

        $stack15 = $stack14 cmpl $stack13;

        if $stack15 == 0 goto label06;

        return 0;

     label06:
        $stack17 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack16 = that.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        $stack18 = $stack17 cmpl $stack16;

        if $stack18 == 0 goto label07;

        return 0;

     label07:
        $stack20 = this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickIncrement>;

        $stack19 = that.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickIncrement>;

        $stack21 = $stack20 cmpl $stack19;

        if $stack21 == 0 goto label08;

        return 0;

     label08:
        $stack23 = this.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickLength>;

        $stack22 = that.<org.jfree.chart.plot.dial.StandardDialScale: double majorTickLength>;

        $stack24 = $stack23 cmpl $stack22;

        if $stack24 == 0 goto label09;

        return 0;

     label09:
        $stack26 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint majorTickPaint>;

        $stack25 = that.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint majorTickPaint>;

        $stack27 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack26, $stack25);

        if $stack27 != 0 goto label10;

        return 0;

     label10:
        $stack29 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke majorTickStroke>;

        $stack28 = that.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke majorTickStroke>;

        $stack30 = virtualinvoke $stack29.<java.lang.Object: boolean equals(java.lang.Object)>($stack28);

        if $stack30 != 0 goto label11;

        return 0;

     label11:
        $stack32 = this.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount>;

        $stack31 = that.<org.jfree.chart.plot.dial.StandardDialScale: int minorTickCount>;

        if $stack32 == $stack31 goto label12;

        return 0;

     label12:
        $stack34 = this.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength>;

        $stack33 = that.<org.jfree.chart.plot.dial.StandardDialScale: double minorTickLength>;

        $stack35 = $stack34 cmpl $stack33;

        if $stack35 == 0 goto label13;

        return 0;

     label13:
        $stack37 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint minorTickPaint>;

        $stack36 = that.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint minorTickPaint>;

        $stack38 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack37, $stack36);

        if $stack38 != 0 goto label14;

        return 0;

     label14:
        $stack40 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke minorTickStroke>;

        $stack39 = that.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke minorTickStroke>;

        $stack41 = virtualinvoke $stack40.<java.lang.Object: boolean equals(java.lang.Object)>($stack39);

        if $stack41 != 0 goto label15;

        return 0;

     label15:
        $stack43 = this.<org.jfree.chart.plot.dial.StandardDialScale: boolean tickLabelsVisible>;

        $stack42 = that.<org.jfree.chart.plot.dial.StandardDialScale: boolean tickLabelsVisible>;

        if $stack43 == $stack42 goto label16;

        return 0;

     label16:
        $stack45 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickLabelOffset>;

        $stack44 = that.<org.jfree.chart.plot.dial.StandardDialScale: double tickLabelOffset>;

        $stack46 = $stack45 cmpl $stack44;

        if $stack46 == 0 goto label17;

        return 0;

     label17:
        $stack48 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Font tickLabelFont>;

        $stack47 = that.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Font tickLabelFont>;

        $stack49 = virtualinvoke $stack48.<java.awt.Font: boolean equals(java.lang.Object)>($stack47);

        if $stack49 != 0 goto label18;

        return 0;

     label18:
        $stack51 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint tickLabelPaint>;

        $stack50 = that.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint tickLabelPaint>;

        $stack52 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack51, $stack50);

        if $stack52 != 0 goto label19;

        return 0;

     label19:
        $stack53 = specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: boolean equals(java.lang.Object)>(obj);

        return $stack53;
    }

    public int hashCode()
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        double $stack4, $stack10, $stack16, $stack22, $stack28;
        long $stack6, $stack7, $stack12, $stack13, $stack18, $stack19, $stack24, $stack25, $stack30, $stack31, temp;
        int $stack8, $stack9, $stack14, $stack15, $stack20, $stack21, $stack26, $stack27, $stack32, $stack33, result#3;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack4 = this.<org.jfree.chart.plot.dial.StandardDialScale: double lowerBound>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack4);

        $stack9 = 37 * 193;

        $stack6 = temp >>> 32;

        $stack7 = temp ^ $stack6;

        $stack8 = (int) $stack7;

        result#3 = $stack9 + $stack8;

        $stack10 = this.<org.jfree.chart.plot.dial.StandardDialScale: double upperBound>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack10);

        $stack15 = 37 * result#3;

        $stack12 = temp >>> 32;

        $stack13 = temp ^ $stack12;

        $stack14 = (int) $stack13;

        result#3 = $stack15 + $stack14;

        $stack16 = this.<org.jfree.chart.plot.dial.StandardDialScale: double startAngle>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack16);

        $stack21 = 37 * result#3;

        $stack18 = temp >>> 32;

        $stack19 = temp ^ $stack18;

        $stack20 = (int) $stack19;

        result#3 = $stack21 + $stack20;

        $stack22 = this.<org.jfree.chart.plot.dial.StandardDialScale: double extent>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack22);

        $stack27 = 37 * result#3;

        $stack24 = temp >>> 32;

        $stack25 = temp ^ $stack24;

        $stack26 = (int) $stack25;

        result#3 = $stack27 + $stack26;

        $stack28 = this.<org.jfree.chart.plot.dial.StandardDialScale: double tickRadius>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack28);

        $stack33 = 37 * result#3;

        $stack30 = temp >>> 32;

        $stack31 = temp ^ $stack30;

        $stack32 = (int) $stack31;

        result#3 = $stack33 + $stack32;

        return result#3;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        $stack1 = specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.awt.Paint $stack2, $stack4, $stack6;
        java.awt.Stroke $stack3, $stack5;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint majorTickPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke majorTickStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint minorTickPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack4, stream);

        $stack5 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke minorTickStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack5, stream);

        $stack6 = this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint tickLabelPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack6, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.plot.dial.StandardDialScale this;
        java.awt.Paint $stack2, $stack4, $stack6;
        java.awt.Stroke $stack3, $stack5;

        this := @this: org.jfree.chart.plot.dial.StandardDialScale;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint majorTickPaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke majorTickStroke> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint minorTickPaint> = $stack4;

        $stack5 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Stroke minorTickStroke> = $stack5;

        $stack6 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialScale: java.awt.Paint tickLabelPaint> = $stack6;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.plot.dial.StandardDialScale: long serialVersionUID> = 3715644629665918516L;

        return;
    }
}
