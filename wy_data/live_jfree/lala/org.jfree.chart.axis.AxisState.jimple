public class org.jfree.chart.axis.AxisState extends java.lang.Object
{
    private double cursor;
    private java.util.List ticks;
    private double max;

    public void <init>()
    {
        org.jfree.chart.axis.AxisState this;

        this := @this: org.jfree.chart.axis.AxisState;

        specialinvoke this.<org.jfree.chart.axis.AxisState: void <init>(double)>(0.0);

        return;
    }

    public void <init>(double)
    {
        org.jfree.chart.axis.AxisState this;
        double cursor;
        java.util.ArrayList $stack3;

        this := @this: org.jfree.chart.axis.AxisState;

        cursor := @parameter0: double;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jfree.chart.axis.AxisState: double cursor> = cursor;

        $stack3 = new java.util.ArrayList;

        specialinvoke $stack3.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.axis.AxisState: java.util.List ticks> = $stack3;

        return;
    }

    public double getCursor()
    {
        org.jfree.chart.axis.AxisState this;
        double $stack1;

        this := @this: org.jfree.chart.axis.AxisState;

        $stack1 = this.<org.jfree.chart.axis.AxisState: double cursor>;

        return $stack1;
    }

    public void setCursor(double)
    {
        org.jfree.chart.axis.AxisState this;
        double cursor;

        this := @this: org.jfree.chart.axis.AxisState;

        cursor := @parameter0: double;

        this.<org.jfree.chart.axis.AxisState: double cursor> = cursor;

        return;
    }

    public void moveCursor(double, org.jfree.chart.ui.RectangleEdge)
    {
        org.jfree.chart.ui.RectangleEdge edge;
        int[] $stack5;
        int $stack6, $stack7;
        org.jfree.chart.axis.AxisState this;
        double units;
        java.lang.IllegalStateException $stack8;
        java.lang.StringBuilder $stack9, $stack10, $stack11;
        java.lang.String $stack12;

        this := @this: org.jfree.chart.axis.AxisState;

        units := @parameter0: double;

        edge := @parameter1: org.jfree.chart.ui.RectangleEdge;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(edge);

        $stack5 = <org.jfree.chart.axis.AxisState$1: int[] $SwitchMap$org$jfree$chart$ui$RectangleEdge>;

        $stack6 = virtualinvoke edge.<org.jfree.chart.ui.RectangleEdge: int ordinal()>();

        $stack7 = $stack5[$stack6];

        tableswitch($stack7)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        virtualinvoke this.<org.jfree.chart.axis.AxisState: void cursorUp(double)>(units);

        goto label6;

     label2:
        virtualinvoke this.<org.jfree.chart.axis.AxisState: void cursorDown(double)>(units);

        goto label6;

     label3:
        virtualinvoke this.<org.jfree.chart.axis.AxisState: void cursorLeft(double)>(units);

        goto label6;

     label4:
        virtualinvoke this.<org.jfree.chart.axis.AxisState: void cursorRight(double)>(units);

        goto label6;

     label5:
        $stack8 = new java.lang.IllegalStateException;

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected enum value ");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(edge);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack12);

        throw $stack8;

     label6:
        return;
    }

    public void cursorUp(double)
    {
        org.jfree.chart.axis.AxisState this;
        double units, $stack3, $stack4;

        this := @this: org.jfree.chart.axis.AxisState;

        units := @parameter0: double;

        $stack3 = this.<org.jfree.chart.axis.AxisState: double cursor>;

        $stack4 = $stack3 - units;

        this.<org.jfree.chart.axis.AxisState: double cursor> = $stack4;

        return;
    }

    public void cursorDown(double)
    {
        org.jfree.chart.axis.AxisState this;
        double units, $stack3, $stack4;

        this := @this: org.jfree.chart.axis.AxisState;

        units := @parameter0: double;

        $stack3 = this.<org.jfree.chart.axis.AxisState: double cursor>;

        $stack4 = $stack3 + units;

        this.<org.jfree.chart.axis.AxisState: double cursor> = $stack4;

        return;
    }

    public void cursorLeft(double)
    {
        org.jfree.chart.axis.AxisState this;
        double units, $stack3, $stack4;

        this := @this: org.jfree.chart.axis.AxisState;

        units := @parameter0: double;

        $stack3 = this.<org.jfree.chart.axis.AxisState: double cursor>;

        $stack4 = $stack3 - units;

        this.<org.jfree.chart.axis.AxisState: double cursor> = $stack4;

        return;
    }

    public void cursorRight(double)
    {
        org.jfree.chart.axis.AxisState this;
        double units, $stack3, $stack4;

        this := @this: org.jfree.chart.axis.AxisState;

        units := @parameter0: double;

        $stack3 = this.<org.jfree.chart.axis.AxisState: double cursor>;

        $stack4 = $stack3 + units;

        this.<org.jfree.chart.axis.AxisState: double cursor> = $stack4;

        return;
    }

    public java.util.List getTicks()
    {
        org.jfree.chart.axis.AxisState this;
        java.util.List $stack1;

        this := @this: org.jfree.chart.axis.AxisState;

        $stack1 = this.<org.jfree.chart.axis.AxisState: java.util.List ticks>;

        return $stack1;
    }

    public void setTicks(java.util.List)
    {
        org.jfree.chart.axis.AxisState this;
        java.util.List ticks;

        this := @this: org.jfree.chart.axis.AxisState;

        ticks := @parameter0: java.util.List;

        this.<org.jfree.chart.axis.AxisState: java.util.List ticks> = ticks;

        return;
    }

    public double getMax()
    {
        org.jfree.chart.axis.AxisState this;
        double $stack1;

        this := @this: org.jfree.chart.axis.AxisState;

        $stack1 = this.<org.jfree.chart.axis.AxisState: double max>;

        return $stack1;
    }

    public void setMax(double)
    {
        org.jfree.chart.axis.AxisState this;
        double max;

        this := @this: org.jfree.chart.axis.AxisState;

        max := @parameter0: double;

        this.<org.jfree.chart.axis.AxisState: double max> = max;

        return;
    }
}
