public class org.jfree.chart.ui.FontDisplayField extends javax.swing.JTextField
{
    private java.awt.Font displayFont;
    protected static final java.util.ResourceBundle localizationResources;

    public void <init>(java.awt.Font)
    {
        org.jfree.chart.ui.FontDisplayField this;
        java.awt.Font font;

        this := @this: org.jfree.chart.ui.FontDisplayField;

        font := @parameter0: java.awt.Font;

        specialinvoke this.<javax.swing.JTextField: void <init>(java.lang.String)>("");

        virtualinvoke this.<org.jfree.chart.ui.FontDisplayField: void setDisplayFont(java.awt.Font)>(font);

        virtualinvoke this.<org.jfree.chart.ui.FontDisplayField: void setEnabled(boolean)>(0);

        return;
    }

    public java.awt.Font getDisplayFont()
    {
        org.jfree.chart.ui.FontDisplayField this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.ui.FontDisplayField;

        $stack1 = this.<org.jfree.chart.ui.FontDisplayField: java.awt.Font displayFont>;

        return $stack1;
    }

    public void setDisplayFont(java.awt.Font)
    {
        org.jfree.chart.ui.FontDisplayField this;
        java.awt.Font font, $stack2;
        java.lang.String $stack3;

        this := @this: org.jfree.chart.ui.FontDisplayField;

        font := @parameter0: java.awt.Font;

        this.<org.jfree.chart.ui.FontDisplayField: java.awt.Font displayFont> = font;

        $stack2 = this.<org.jfree.chart.ui.FontDisplayField: java.awt.Font displayFont>;

        $stack3 = specialinvoke this.<org.jfree.chart.ui.FontDisplayField: java.lang.String fontToString(java.awt.Font)>($stack2);

        virtualinvoke this.<org.jfree.chart.ui.FontDisplayField: void setText(java.lang.String)>($stack3);

        return;
    }

    private java.lang.String fontToString(java.awt.Font)
    {
        java.awt.Font font;
        java.util.ResourceBundle $stack2;
        java.lang.String $stack3, $stack5, $stack10;
        java.lang.StringBuilder $stack4, $stack6, $stack7, $stack9;
        int $stack8;
        org.jfree.chart.ui.FontDisplayField this;

        this := @this: org.jfree.chart.ui.FontDisplayField;

        font := @parameter0: java.awt.Font;

        if font == null goto label1;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke font.<java.awt.Font: java.lang.String getFontName()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $stack8 = virtualinvoke font.<java.awt.Font: int getSize()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;

     label1:
        $stack2 = <org.jfree.chart.ui.FontDisplayField: java.util.ResourceBundle localizationResources>;

        $stack3 = virtualinvoke $stack2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("No_Font_Selected");

        return $stack3;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $stack0;

        $stack0 = staticinvoke <org.jfree.chart.util.ResourceBundleWrapper: java.util.ResourceBundle getBundle(java.lang.String)>("org.jfree.chart.ui.LocalizationBundle");

        <org.jfree.chart.ui.FontDisplayField: java.util.ResourceBundle localizationResources> = $stack0;

        return;
    }
}
