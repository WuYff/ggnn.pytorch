public class org.jfree.chart.annotations.XYShapeAnnotation extends org.jfree.chart.annotations.AbstractXYAnnotation implements java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.awt.Shape shape;
    private transient java.awt.Stroke stroke;
    private transient java.awt.Paint outlinePaint;
    private transient java.awt.Paint fillPaint;

    public void <init>(java.awt.Shape)
    {
        org.jfree.chart.annotations.XYShapeAnnotation this;
        java.awt.Shape shape;
        java.awt.BasicStroke $stack2;
        java.awt.Color $stack3;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        shape := @parameter0: java.awt.Shape;

        $stack2 = new java.awt.BasicStroke;

        specialinvoke $stack2.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        $stack3 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke this.<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint)>(shape, $stack2, $stack3);

        return;
    }

    public void <init>(java.awt.Shape, java.awt.Stroke, java.awt.Paint)
    {
        org.jfree.chart.annotations.XYShapeAnnotation this;
        java.awt.Shape shape;
        java.awt.Stroke stroke;
        java.awt.Paint outlinePaint;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        shape := @parameter0: java.awt.Shape;

        stroke := @parameter1: java.awt.Stroke;

        outlinePaint := @parameter2: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.annotations.XYShapeAnnotation: void <init>(java.awt.Shape,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>(shape, stroke, outlinePaint, null);

        return;
    }

    public void <init>(java.awt.Shape, java.awt.Stroke, java.awt.Paint, java.awt.Paint)
    {
        org.jfree.chart.annotations.XYShapeAnnotation this;
        java.awt.Shape shape;
        java.awt.Stroke stroke;
        java.awt.Paint outlinePaint, fillPaint;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        shape := @parameter0: java.awt.Shape;

        stroke := @parameter1: java.awt.Stroke;

        outlinePaint := @parameter2: java.awt.Paint;

        fillPaint := @parameter3: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(shape, "shape");

        this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape> = shape;

        this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke> = stroke;

        this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint outlinePaint> = outlinePaint;

        this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint fillPaint> = fillPaint;

        return;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.XYPlot, java.awt.geom.Rectangle2D, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, int, org.jfree.chart.plot.PlotRenderingInfo)
    {
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.chart.plot.PlotOrientation orientation, $stack60, $stack61;
        org.jfree.chart.axis.AxisLocation $stack40, $stack42;
        org.jfree.chart.ui.RectangleEdge domainEdge, rangeEdge;
        org.jfree.chart.annotations.XYShapeAnnotation this;
        java.awt.Shape $stack44, $stack78, $stack83, s;
        java.awt.geom.Rectangle2D bounds, dataArea;
        double x0, x1, xx0, xx1, $stack50, $stack51, m00, $stack52, m02, y0, y1, yy0, yy1, $stack57, $stack58, m11, $stack59, m12;
        org.jfree.chart.axis.ValueAxis domainAxis, rangeAxis;
        java.awt.Stroke $stack63, $stack74;
        org.jfree.chart.plot.PlotRenderingInfo info;
        int rendererIndex;
        java.awt.Paint $stack66, $stack73, $stack75, $stack62;
        java.awt.Graphics2D g2;
        java.awt.geom.AffineTransform $stack77, $stack81, $stack82;
        java.lang.String $stack64, $stack65;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.XYPlot;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        domainAxis := @parameter3: org.jfree.chart.axis.ValueAxis;

        rangeAxis := @parameter4: org.jfree.chart.axis.ValueAxis;

        rendererIndex := @parameter5: int;

        info := @parameter6: org.jfree.chart.plot.PlotRenderingInfo;

        orientation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack40 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>();

        domainEdge = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.chart.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($stack40, orientation);

        $stack42 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>();

        rangeEdge = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.chart.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($stack42, orientation);

        $stack44 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape>;

        bounds = interfaceinvoke $stack44.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        x0 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMinX()>();

        x1 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMaxX()>();

        xx0 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(x0, dataArea, domainEdge);

        xx1 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(x1, dataArea, domainEdge);

        $stack51 = xx1 - xx0;

        $stack50 = x1 - x0;

        m00 = $stack51 / $stack50;

        $stack52 = x0 * m00;

        m02 = xx0 - $stack52;

        y0 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMaxY()>();

        y1 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMinY()>();

        yy0 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(y0, dataArea, rangeEdge);

        yy1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(y1, dataArea, rangeEdge);

        $stack58 = yy1 - yy0;

        $stack57 = y1 - y0;

        m11 = $stack58 / $stack57;

        $stack59 = m11 * y0;

        m12 = yy0 - $stack59;

        s = null;

        $stack60 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack60 goto label1;

        $stack81 = new java.awt.geom.AffineTransform;

        specialinvoke $stack81.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>(0.0F, 1.0F, 1.0F, 0.0F, 0.0F, 0.0F);

        $stack82 = new java.awt.geom.AffineTransform;

        specialinvoke $stack82.<java.awt.geom.AffineTransform: void <init>(double,double,double,double,double,double)>(m11, 0.0, 0.0, m00, m12, m02);

        $stack83 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape>;

        s = virtualinvoke $stack81.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($stack83);

        s = virtualinvoke $stack82.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(s);

        goto label2;

     label1:
        $stack61 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack61 goto label2;

        $stack77 = new java.awt.geom.AffineTransform;

        specialinvoke $stack77.<java.awt.geom.AffineTransform: void <init>(double,double,double,double,double,double)>(m00, 0.0, 0.0, m11, m02, m12);

        $stack78 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape>;

        s = virtualinvoke $stack77.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>($stack78);

     label2:
        $stack62 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint fillPaint>;

        if $stack62 == null goto label3;

        $stack75 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint fillPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack75);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(s);

     label3:
        $stack63 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke>;

        if $stack63 == null goto label4;

        $stack66 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint outlinePaint>;

        if $stack66 == null goto label4;

        $stack73 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint outlinePaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack73);

        $stack74 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack74);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(s);

     label4:
        $stack64 = virtualinvoke this.<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.String getToolTipText()>();

        $stack65 = virtualinvoke this.<org.jfree.chart.annotations.XYShapeAnnotation: java.lang.String getURL()>();

        virtualinvoke this.<org.jfree.chart.annotations.XYShapeAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>(info, s, rendererIndex, $stack64, $stack65);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.annotations.XYShapeAnnotation this, that;
        boolean $stack3, $stack4, $stack7, $stack10, $stack13, $stack16;
        java.awt.Shape $stack5, $stack6;
        java.awt.Stroke $stack8, $stack9;
        java.awt.Paint $stack11, $stack12, $stack14, $stack15;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = specialinvoke this.<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>(obj);

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        $stack4 = obj instanceof org.jfree.chart.annotations.XYShapeAnnotation;

        if $stack4 != 0 goto label3;

        return 0;

     label3:
        that = (org.jfree.chart.annotations.XYShapeAnnotation) obj;

        $stack6 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape>;

        $stack5 = that.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape>;

        $stack7 = virtualinvoke $stack6.<java.lang.Object: boolean equals(java.lang.Object)>($stack5);

        if $stack7 != 0 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke>;

        $stack8 = that.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke>;

        $stack10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack9, $stack8);

        if $stack10 != 0 goto label5;

        return 0;

     label5:
        $stack12 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint outlinePaint>;

        $stack11 = that.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint outlinePaint>;

        $stack13 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack12, $stack11);

        if $stack13 != 0 goto label6;

        return 0;

     label6:
        $stack15 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint fillPaint>;

        $stack14 = that.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint fillPaint>;

        $stack16 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack15, $stack14);

        if $stack16 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.annotations.XYShapeAnnotation this;
        java.awt.Shape $stack2;
        int $stack3, $stack4, $stack7, $stack8, $stack10, $stack11, $stack13, $stack14, result#2;
        java.awt.Stroke $stack5, $stack12;
        java.awt.Paint $stack6, $stack9;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        $stack3 = 37 * 193;

        $stack2 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape>;

        $stack4 = virtualinvoke $stack2.<java.lang.Object: int hashCode()>();

        result#2 = $stack3 + $stack4;

        $stack5 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke>;

        if $stack5 == null goto label1;

        $stack13 = 37 * result#2;

        $stack12 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke>;

        $stack14 = virtualinvoke $stack12.<java.lang.Object: int hashCode()>();

        result#2 = $stack13 + $stack14;

     label1:
        $stack7 = 37 * result#2;

        $stack6 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint outlinePaint>;

        $stack8 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack6);

        result#2 = $stack7 + $stack8;

        $stack10 = 37 * result#2;

        $stack9 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint fillPaint>;

        $stack11 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack9);

        result#2 = $stack10 + $stack11;

        return result#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.annotations.XYShapeAnnotation this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        $stack1 = specialinvoke this.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.annotations.XYShapeAnnotation this;
        java.awt.Shape $stack2;
        java.awt.Stroke $stack3;
        java.awt.Paint $stack4, $stack5;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint outlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack4, stream);

        $stack5 = this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint fillPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack5, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.annotations.XYShapeAnnotation this;
        java.awt.Shape $stack2;
        java.awt.Stroke $stack3;
        java.awt.Paint $stack4, $stack5;

        this := @this: org.jfree.chart.annotations.XYShapeAnnotation;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Shape shape> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Stroke stroke> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint outlinePaint> = $stack4;

        $stack5 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.XYShapeAnnotation: java.awt.Paint fillPaint> = $stack5;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.annotations.XYShapeAnnotation: long serialVersionUID> = -8553218317600684041L;

        return;
    }
}
