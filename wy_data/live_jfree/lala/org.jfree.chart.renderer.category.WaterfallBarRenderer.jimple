public class org.jfree.chart.renderer.category.WaterfallBarRenderer extends org.jfree.chart.renderer.category.BarRenderer
{
    private static final long serialVersionUID;
    private transient java.awt.Paint firstBarPaint;
    private transient java.awt.Paint lastBarPaint;
    private transient java.awt.Paint positiveBarPaint;
    private transient java.awt.Paint negativeBarPaint;

    public void <init>()
    {
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        java.awt.GradientPaint $stack1, $stack8, $stack15, $stack22;
        java.awt.Color $stack2, $stack5, $stack9, $stack12, $stack16, $stack19, $stack23, $stack26;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        $stack1 = new java.awt.GradientPaint;

        $stack2 = new java.awt.Color;

        specialinvoke $stack2.<java.awt.Color: void <init>(int,int,int)>(34, 34, 255);

        $stack5 = new java.awt.Color;

        specialinvoke $stack5.<java.awt.Color: void <init>(int,int,int)>(102, 102, 255);

        specialinvoke $stack1.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, $stack2, 0.0F, 0.0F, $stack5);

        $stack8 = new java.awt.GradientPaint;

        $stack9 = new java.awt.Color;

        specialinvoke $stack9.<java.awt.Color: void <init>(int,int,int)>(34, 255, 34);

        $stack12 = new java.awt.Color;

        specialinvoke $stack12.<java.awt.Color: void <init>(int,int,int)>(102, 255, 102);

        specialinvoke $stack8.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, $stack9, 0.0F, 0.0F, $stack12);

        $stack15 = new java.awt.GradientPaint;

        $stack16 = new java.awt.Color;

        specialinvoke $stack16.<java.awt.Color: void <init>(int,int,int)>(255, 34, 34);

        $stack19 = new java.awt.Color;

        specialinvoke $stack19.<java.awt.Color: void <init>(int,int,int)>(255, 102, 102);

        specialinvoke $stack15.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, $stack16, 0.0F, 0.0F, $stack19);

        $stack22 = new java.awt.GradientPaint;

        $stack23 = new java.awt.Color;

        specialinvoke $stack23.<java.awt.Color: void <init>(int,int,int)>(255, 255, 34);

        $stack26 = new java.awt.Color;

        specialinvoke $stack26.<java.awt.Color: void <init>(int,int,int)>(255, 255, 102);

        specialinvoke $stack22.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, $stack23, 0.0F, 0.0F, $stack26);

        specialinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void <init>(java.awt.Paint,java.awt.Paint,java.awt.Paint,java.awt.Paint)>($stack1, $stack8, $stack15, $stack22);

        return;
    }

    public void <init>(java.awt.Paint, java.awt.Paint, java.awt.Paint, java.awt.Paint)
    {
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        java.awt.Paint firstBarPaint, positiveBarPaint, negativeBarPaint, lastBarPaint;
        org.jfree.chart.ui.StandardGradientPaintTransformer $stack5;
        org.jfree.chart.ui.GradientPaintTransformType $stack6;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        firstBarPaint := @parameter0: java.awt.Paint;

        positiveBarPaint := @parameter1: java.awt.Paint;

        negativeBarPaint := @parameter2: java.awt.Paint;

        lastBarPaint := @parameter3: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.renderer.category.BarRenderer: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(firstBarPaint, "firstBarPaint");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(positiveBarPaint, "positiveBarPaint");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(negativeBarPaint, "negativeBarPaint");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(lastBarPaint, "lastBarPaint");

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint firstBarPaint> = firstBarPaint;

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint lastBarPaint> = lastBarPaint;

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint positiveBarPaint> = positiveBarPaint;

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint negativeBarPaint> = negativeBarPaint;

        $stack5 = new org.jfree.chart.ui.StandardGradientPaintTransformer;

        $stack6 = <org.jfree.chart.ui.GradientPaintTransformType: org.jfree.chart.ui.GradientPaintTransformType CENTER_VERTICAL>;

        specialinvoke $stack5.<org.jfree.chart.ui.StandardGradientPaintTransformer: void <init>(org.jfree.chart.ui.GradientPaintTransformType)>($stack6);

        virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void setGradientPaintTransformer(org.jfree.chart.ui.GradientPaintTransformer)>($stack5);

        virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void setMinimumBarLength(double)>(1.0);

        return;
    }

    public java.awt.Paint getFirstBarPaint()
    {
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint firstBarPaint>;

        return $stack1;
    }

    public void setFirstBarPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint firstBarPaint> = paint;

        virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Paint getLastBarPaint()
    {
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint lastBarPaint>;

        return $stack1;
    }

    public void setLastBarPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint lastBarPaint> = paint;

        virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Paint getPositiveBarPaint()
    {
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint positiveBarPaint>;

        return $stack1;
    }

    public void setPositiveBarPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint positiveBarPaint> = paint;

        virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Paint getNegativeBarPaint()
    {
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint negativeBarPaint>;

        return $stack1;
    }

    public void setNegativeBarPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint negativeBarPaint> = paint;

        virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)
    {
        org.jfree.data.category.CategoryDataset dataset;
        int columnCount, $stack16, $stack18, $stack26, row, column;
        org.jfree.data.Range $stack17;
        java.lang.Number n;
        double value, minimum, maximum, runningTotal;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        boolean allItemsNull;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        dataset := @parameter0: org.jfree.data.category.CategoryDataset;

        if dataset != null goto label1;

        return null;

     label1:
        allItemsNull = 1;

        minimum = 0.0;

        maximum = 0.0;

        columnCount = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getColumnCount()>();

        row = 0;

     label2:
        $stack16 = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getRowCount()>();

        if row >= $stack16 goto label8;

        runningTotal = 0.0;

        column = 0;

     label3:
        $stack18 = columnCount - 1;

        if column > $stack18 goto label7;

        n = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(row, column);

        if n == null goto label6;

        allItemsNull = 0;

        value = virtualinvoke n.<java.lang.Number: double doubleValue()>();

        $stack26 = columnCount - 1;

        if column != $stack26 goto label4;

        runningTotal = value;

        goto label5;

     label4:
        runningTotal = runningTotal + value;

     label5:
        minimum = staticinvoke <java.lang.Math: double min(double,double)>(minimum, runningTotal);

        maximum = staticinvoke <java.lang.Math: double max(double,double)>(maximum, runningTotal);

     label6:
        column = column + 1;

        goto label3;

     label7:
        row = row + 1;

        goto label2;

     label8:
        if allItemsNull != 0 goto label9;

        $stack17 = new org.jfree.data.Range;

        specialinvoke $stack17.<org.jfree.data.Range: void <init>(double,double)>(minimum, maximum);

        return $stack17;

     label9:
        return null;
    }

    public void drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset, int, int, int)
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState state;
        int column, $stack40, $stack41, row, categoryCount, $stack59, pass;
        org.jfree.data.category.CategoryDataset dataset;
        java.lang.Number n;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        org.jfree.chart.plot.CategoryPlot plot;
        org.jfree.chart.plot.PlotOrientation orientation, $stack56, $stack57;
        org.jfree.chart.ui.RectangleEdge rangeAxisLocation, $stack100, $stack109;
        org.jfree.chart.axis.ValueAxis rangeAxis;
        java.awt.geom.Rectangle2D dataArea;
        double valDiff, $stack50, $stack51, $stack52, $stack79, $stack99, $stack102, $stack108, $stack112, $stack113, $stack114, $stack115, $stack126, previous, current, rectX, rectY, j2dy0, j2dy1, temp, rectHeight;
        byte $stack48, $stack60, $stack69, $stack80;
        java.lang.Comparable seriesKey, categoryKey;
        java.awt.Graphics2D g2;
        boolean $stack66, $stack87, $stack63, $stack77;
        org.jfree.chart.ui.GradientPaintTransformer $stack93, $stack62;
        org.jfree.chart.axis.CategoryAxis domainAxis;
        java.awt.geom.Rectangle2D$Double $stack58;
        java.awt.Paint seriesPaint, paint;
        java.awt.GradientPaint gp;
        java.awt.Stroke gp#45;
        org.jfree.chart.labels.CategoryItemLabelGenerator gp#63;
        org.jfree.chart.entity.EntityCollection paint#75;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        state := @parameter1: org.jfree.chart.renderer.category.CategoryItemRendererState;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        plot := @parameter3: org.jfree.chart.plot.CategoryPlot;

        domainAxis := @parameter4: org.jfree.chart.axis.CategoryAxis;

        rangeAxis := @parameter5: org.jfree.chart.axis.ValueAxis;

        dataset := @parameter6: org.jfree.data.category.CategoryDataset;

        row := @parameter7: int;

        column := @parameter8: int;

        pass := @parameter9: int;

        previous = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: double getSeriesRunningTotal()>();

        $stack40 = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getColumnCount()>();

        $stack41 = $stack40 - 1;

        if column != $stack41 goto label01;

        previous = 0.0;

     label01:
        current = 0.0;

        n = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(row, column);

        if n == null goto label02;

        $stack126 = virtualinvoke n.<java.lang.Number: double doubleValue()>();

        current = previous + $stack126;

     label02:
        virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: void setSeriesRunningTotal(double)>(current);

        categoryCount = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: int getColumnCount()>();

        orientation = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        rectX = 0.0;

        rectY = 0.0;

        rangeAxisLocation = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        j2dy0 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(previous, dataArea, rangeAxisLocation);

        j2dy1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(current, dataArea, rangeAxisLocation);

        valDiff = current - previous;

        $stack48 = j2dy1 cmpg j2dy0;

        if $stack48 >= 0 goto label03;

        temp = j2dy1;

        j2dy1 = j2dy0;

        j2dy0 = temp;

     label03:
        temp = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: double getBarWidth()>();

        $stack50 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: double getMinimumBarLength()>();

        $stack51 = j2dy1 - j2dy0;

        $stack52 = staticinvoke <java.lang.Math: double abs(double)>($stack51);

        rectHeight = staticinvoke <java.lang.Math: double max(double,double)>($stack50, $stack52);

        seriesKey = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(row);

        categoryKey = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getColumnKey(int)>(column);

        $stack56 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack56 goto label04;

        $stack108 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: double getItemMargin()>();

        $stack109 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        rectY = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(categoryKey, seriesKey, dataset, $stack108, dataArea, $stack109);

        rectX = j2dy0;

        rectHeight = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: double getBarWidth()>();

        $stack112 = rectHeight / 2.0;

        rectY = rectY - $stack112;

        $stack113 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: double getMinimumBarLength()>();

        $stack114 = j2dy1 - j2dy0;

        $stack115 = staticinvoke <java.lang.Math: double abs(double)>($stack114);

        temp = staticinvoke <java.lang.Math: double max(double,double)>($stack113, $stack115);

        goto label05;

     label04:
        $stack57 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack57 goto label05;

        $stack99 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: double getItemMargin()>();

        $stack100 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

        rectX = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategorySeriesMiddle(java.lang.Comparable,java.lang.Comparable,org.jfree.data.category.CategoryDataset,double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(categoryKey, seriesKey, dataset, $stack99, dataArea, $stack100);

        $stack102 = temp / 2.0;

        rectX = rectX - $stack102;

        rectY = j2dy0;

     label05:
        $stack58 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack58.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(rectX, rectY, temp, rectHeight);

        if column != 0 goto label06;

        seriesPaint = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint getFirstBarPaint()>();

        goto label09;

     label06:
        $stack59 = categoryCount - 1;

        if column != $stack59 goto label07;

        seriesPaint = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint getLastBarPaint()>();

        goto label09;

     label07:
        $stack60 = valDiff cmpl 0.0;

        if $stack60 < 0 goto label08;

        seriesPaint = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint getPositiveBarPaint()>();

        goto label09;

     label08:
        seriesPaint = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint getNegativeBarPaint()>();

     label09:
        $stack62 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.chart.ui.GradientPaintTransformer getGradientPaintTransformer()>();

        if $stack62 == null goto label10;

        $stack87 = seriesPaint instanceof java.awt.GradientPaint;

        if $stack87 == 0 goto label10;

        gp = (java.awt.GradientPaint) seriesPaint;

        $stack93 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.chart.ui.GradientPaintTransformer getGradientPaintTransformer()>();

        seriesPaint = interfaceinvoke $stack93.<org.jfree.chart.ui.GradientPaintTransformer: java.awt.GradientPaint transform(java.awt.GradientPaint,java.awt.Shape)>(gp, $stack58);

     label10:
        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(seriesPaint);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack58);

        $stack63 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: boolean isDrawBarOutline()>();

        if $stack63 == 0 goto label11;

        $stack79 = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: double getBarWidth()>();

        $stack80 = $stack79 cmpl 3.0;

        if $stack80 <= 0 goto label11;

        gp#45 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Stroke getItemOutlineStroke(int,int)>(row, column);

        paint = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint getItemOutlinePaint(int,int)>(row, column);

        if gp#45 == null goto label11;

        if paint == null goto label11;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(gp#45);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(paint);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack58);

     label11:
        gp#63 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.chart.labels.CategoryItemLabelGenerator getItemLabelGenerator(int,int)>(row, column);

        if gp#63 == null goto label14;

        $stack66 = virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: boolean isItemLabelVisible(int,int)>(row, column);

        if $stack66 == 0 goto label14;

        $stack69 = valDiff cmpg 0.0;

        if $stack69 >= 0 goto label12;

        $stack77 = 1;

        goto label13;

     label12:
        $stack77 = 0;

     label13:
        virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void drawItemLabel(java.awt.Graphics2D,org.jfree.data.category.CategoryDataset,int,int,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)>(g2, dataset, row, column, plot, gp#63, $stack58, $stack77);

     label14:
        paint#75 = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

        if paint#75 == null goto label15;

        virtualinvoke this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: void addItemEntity(org.jfree.chart.entity.EntityCollection,org.jfree.data.category.CategoryDataset,int,int,java.awt.Shape)>(paint#75, dataset, row, column, $stack58);

     label15:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this, that;
        boolean $stack3, $stack4, $stack7, $stack10, $stack13, $stack16;
        java.awt.Paint $stack5, $stack6, $stack8, $stack9, $stack11, $stack12, $stack14, $stack15;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = specialinvoke this.<org.jfree.chart.renderer.category.BarRenderer: boolean equals(java.lang.Object)>(obj);

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        $stack4 = obj instanceof org.jfree.chart.renderer.category.WaterfallBarRenderer;

        if $stack4 != 0 goto label3;

        return 0;

     label3:
        that = (org.jfree.chart.renderer.category.WaterfallBarRenderer) obj;

        $stack6 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint firstBarPaint>;

        $stack5 = that.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint firstBarPaint>;

        $stack7 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack6, $stack5);

        if $stack7 != 0 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint lastBarPaint>;

        $stack8 = that.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint lastBarPaint>;

        $stack10 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack9, $stack8);

        if $stack10 != 0 goto label5;

        return 0;

     label5:
        $stack12 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint positiveBarPaint>;

        $stack11 = that.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint positiveBarPaint>;

        $stack13 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack12, $stack11);

        if $stack13 != 0 goto label6;

        return 0;

     label6:
        $stack15 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint negativeBarPaint>;

        $stack14 = that.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint negativeBarPaint>;

        $stack16 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack15, $stack14);

        if $stack16 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        java.awt.Paint $stack2, $stack3, $stack4, $stack5;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint firstBarPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint lastBarPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint positiveBarPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack4, stream);

        $stack5 = this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint negativeBarPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack5, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.renderer.category.WaterfallBarRenderer this;
        java.awt.Paint $stack2, $stack3, $stack4, $stack5;

        this := @this: org.jfree.chart.renderer.category.WaterfallBarRenderer;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint firstBarPaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint lastBarPaint> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint positiveBarPaint> = $stack4;

        $stack5 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.category.WaterfallBarRenderer: java.awt.Paint negativeBarPaint> = $stack5;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.renderer.category.WaterfallBarRenderer: long serialVersionUID> = -2482910643727230911L;

        return;
    }
}
