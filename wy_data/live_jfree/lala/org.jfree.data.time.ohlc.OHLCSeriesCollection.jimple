public class org.jfree.data.time.ohlc.OHLCSeriesCollection extends org.jfree.data.xy.AbstractXYDataset implements org.jfree.data.xy.OHLCDataset, java.io.Serializable
{
    private java.util.List data;
    private org.jfree.data.time.TimePeriodAnchor xPosition;

    public void <init>()
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        org.jfree.data.time.TimePeriodAnchor $stack1;
        java.util.ArrayList $stack2;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        specialinvoke this.<org.jfree.data.xy.AbstractXYDataset: void <init>()>();

        $stack1 = <org.jfree.data.time.TimePeriodAnchor: org.jfree.data.time.TimePeriodAnchor MIDDLE>;

        this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition> = $stack1;

        $stack2 = new java.util.ArrayList;

        specialinvoke $stack2.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data> = $stack2;

        return;
    }

    public org.jfree.data.time.TimePeriodAnchor getXPosition()
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        org.jfree.data.time.TimePeriodAnchor $stack1;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        $stack1 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>;

        return $stack1;
    }

    public void setXPosition(org.jfree.data.time.TimePeriodAnchor)
    {
        org.jfree.data.time.TimePeriodAnchor anchor;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        org.jfree.data.general.DatasetChangeEvent $stack2;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        anchor := @parameter0: org.jfree.data.time.TimePeriodAnchor;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(anchor, "anchor");

        this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition> = anchor;

        $stack2 = new org.jfree.data.general.DatasetChangeEvent;

        specialinvoke $stack2.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(this, this);

        virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($stack2);

        return;
    }

    public void addSeries(org.jfree.data.time.ohlc.OHLCSeries)
    {
        org.jfree.data.time.ohlc.OHLCSeries series;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        java.util.List $stack2;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: org.jfree.data.time.ohlc.OHLCSeries;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(series, "series");

        $stack2 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(series);

        virtualinvoke series.<org.jfree.data.time.ohlc.OHLCSeries: void addChangeListener(org.jfree.data.general.SeriesChangeListener)>(this);

        virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: void fireDatasetChanged()>();

        return;
    }

    public int getSeriesCount()
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        $stack1 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public org.jfree.data.time.ohlc.OHLCSeries getSeries(int)
    {
        int series, $stack3;
        java.lang.IllegalArgumentException $stack2;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        java.util.List $stack4;
        java.lang.Object $stack5;
        org.jfree.data.time.ohlc.OHLCSeries $stack6;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        if series < 0 goto label1;

        $stack3 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: int getSeriesCount()>();

        if series < $stack3 goto label2;

     label1:
        $stack2 = new java.lang.IllegalArgumentException;

        specialinvoke $stack2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Series index out of bounds");

        throw $stack2;

     label2:
        $stack4 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        $stack6 = (org.jfree.data.time.ohlc.OHLCSeries) $stack5;

        return $stack6;
    }

    public java.lang.Comparable getSeriesKey(int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series;
        org.jfree.data.time.ohlc.OHLCSeries $stack2;
        java.lang.Comparable $stack3;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        $stack2 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.ohlc.OHLCSeries getSeries(int)>(series);

        $stack3 = virtualinvoke $stack2.<org.jfree.data.time.ohlc.OHLCSeries: java.lang.Comparable getKey()>();

        return $stack3;
    }

    public int getItemCount(int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, $stack3;
        org.jfree.data.time.ohlc.OHLCSeries $stack2;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        $stack2 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.ohlc.OHLCSeries getSeries(int)>(series);

        $stack3 = virtualinvoke $stack2.<org.jfree.data.time.ohlc.OHLCSeries: int getItemCount()>();

        return $stack3;
    }

    protected synchronized long getX(org.jfree.data.time.RegularTimePeriod)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        org.jfree.data.time.TimePeriodAnchor $stack4, $stack5, $stack6, $stack7, $stack8, $stack9;
        org.jfree.data.time.RegularTimePeriod period;
        long result;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        period := @parameter0: org.jfree.data.time.RegularTimePeriod;

        result = 0L;

        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack4 = <org.jfree.data.time.TimePeriodAnchor: org.jfree.data.time.TimePeriodAnchor START>;

        if $stack5 != $stack4 goto label1;

        result = virtualinvoke period.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond()>();

        goto label3;

     label1:
        $stack7 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack6 = <org.jfree.data.time.TimePeriodAnchor: org.jfree.data.time.TimePeriodAnchor MIDDLE>;

        if $stack7 != $stack6 goto label2;

        result = virtualinvoke period.<org.jfree.data.time.RegularTimePeriod: long getMiddleMillisecond()>();

        goto label3;

     label2:
        $stack9 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack8 = <org.jfree.data.time.TimePeriodAnchor: org.jfree.data.time.TimePeriodAnchor END>;

        if $stack9 != $stack8 goto label3;

        result = virtualinvoke period.<org.jfree.data.time.RegularTimePeriod: long getLastMillisecond()>();

     label3:
        return result;
    }

    public double getXValue(int, int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        java.util.List $stack6;
        java.lang.Object $stack7;
        org.jfree.data.time.ohlc.OHLCSeries s;
        org.jfree.data.ComparableObjectItem $stack8;
        org.jfree.data.time.ohlc.OHLCItem di;
        org.jfree.data.time.RegularTimePeriod period;
        long $stack10;
        double $stack11;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack6 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack7 = interfaceinvoke $stack6.<java.util.List: java.lang.Object get(int)>(series);

        s = (org.jfree.data.time.ohlc.OHLCSeries) $stack7;

        $stack8 = virtualinvoke s.<org.jfree.data.time.ohlc.OHLCSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(item);

        di = (org.jfree.data.time.ohlc.OHLCItem) $stack8;

        period = virtualinvoke di.<org.jfree.data.time.ohlc.OHLCItem: org.jfree.data.time.RegularTimePeriod getPeriod()>();

        $stack10 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: long getX(org.jfree.data.time.RegularTimePeriod)>(period);

        $stack11 = (double) $stack10;

        return $stack11;
    }

    public java.lang.Number getX(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: double getXValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public java.lang.Number getY(int, int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        java.util.List $stack5;
        java.lang.Object $stack6;
        org.jfree.data.time.ohlc.OHLCSeries s;
        org.jfree.data.ComparableObjectItem $stack7;
        org.jfree.data.time.ohlc.OHLCItem di;
        java.lang.Double $stack8;
        double $stack9;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>(series);

        s = (org.jfree.data.time.ohlc.OHLCSeries) $stack6;

        $stack7 = virtualinvoke s.<org.jfree.data.time.ohlc.OHLCSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(item);

        di = (org.jfree.data.time.ohlc.OHLCItem) $stack7;

        $stack8 = new java.lang.Double;

        $stack9 = virtualinvoke di.<org.jfree.data.time.ohlc.OHLCItem: double getYValue()>();

        specialinvoke $stack8.<java.lang.Double: void <init>(double)>($stack9);

        return $stack8;
    }

    public double getOpenValue(int, int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        java.util.List $stack5;
        java.lang.Object $stack6;
        org.jfree.data.time.ohlc.OHLCSeries s;
        org.jfree.data.ComparableObjectItem $stack7;
        org.jfree.data.time.ohlc.OHLCItem di;
        double $stack8;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>(series);

        s = (org.jfree.data.time.ohlc.OHLCSeries) $stack6;

        $stack7 = virtualinvoke s.<org.jfree.data.time.ohlc.OHLCSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(item);

        di = (org.jfree.data.time.ohlc.OHLCItem) $stack7;

        $stack8 = virtualinvoke di.<org.jfree.data.time.ohlc.OHLCItem: double getOpenValue()>();

        return $stack8;
    }

    public java.lang.Number getOpen(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: double getOpenValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public double getCloseValue(int, int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        java.util.List $stack5;
        java.lang.Object $stack6;
        org.jfree.data.time.ohlc.OHLCSeries s;
        org.jfree.data.ComparableObjectItem $stack7;
        org.jfree.data.time.ohlc.OHLCItem di;
        double $stack8;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>(series);

        s = (org.jfree.data.time.ohlc.OHLCSeries) $stack6;

        $stack7 = virtualinvoke s.<org.jfree.data.time.ohlc.OHLCSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(item);

        di = (org.jfree.data.time.ohlc.OHLCItem) $stack7;

        $stack8 = virtualinvoke di.<org.jfree.data.time.ohlc.OHLCItem: double getCloseValue()>();

        return $stack8;
    }

    public java.lang.Number getClose(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: double getCloseValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public double getHighValue(int, int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        java.util.List $stack5;
        java.lang.Object $stack6;
        org.jfree.data.time.ohlc.OHLCSeries s;
        org.jfree.data.ComparableObjectItem $stack7;
        org.jfree.data.time.ohlc.OHLCItem di;
        double $stack8;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>(series);

        s = (org.jfree.data.time.ohlc.OHLCSeries) $stack6;

        $stack7 = virtualinvoke s.<org.jfree.data.time.ohlc.OHLCSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(item);

        di = (org.jfree.data.time.ohlc.OHLCItem) $stack7;

        $stack8 = virtualinvoke di.<org.jfree.data.time.ohlc.OHLCItem: double getHighValue()>();

        return $stack8;
    }

    public java.lang.Number getHigh(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: double getHighValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public double getLowValue(int, int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        java.util.List $stack5;
        java.lang.Object $stack6;
        org.jfree.data.time.ohlc.OHLCSeries s;
        org.jfree.data.ComparableObjectItem $stack7;
        org.jfree.data.time.ohlc.OHLCItem di;
        double $stack8;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>(series);

        s = (org.jfree.data.time.ohlc.OHLCSeries) $stack6;

        $stack7 = virtualinvoke s.<org.jfree.data.time.ohlc.OHLCSeries: org.jfree.data.ComparableObjectItem getDataItem(int)>(item);

        di = (org.jfree.data.time.ohlc.OHLCItem) $stack7;

        $stack8 = virtualinvoke di.<org.jfree.data.time.ohlc.OHLCItem: double getLowValue()>();

        return $stack8;
    }

    public java.lang.Number getLow(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: double getLowValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public java.lang.Number getVolume(int, int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        return null;
    }

    public double getVolumeValue(int, int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int series, item;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: int;

        item := @parameter1: int;

        return #NaN;
    }

    public void removeSeries(int)
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        int index;
        org.jfree.data.time.ohlc.OHLCSeries series;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        index := @parameter0: int;

        series = virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.ohlc.OHLCSeries getSeries(int)>(index);

        if series == null goto label1;

        virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: boolean removeSeries(org.jfree.data.time.ohlc.OHLCSeries)>(series);

     label1:
        return;
    }

    public boolean removeSeries(org.jfree.data.time.ohlc.OHLCSeries)
    {
        org.jfree.data.time.ohlc.OHLCSeries series;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        java.util.List $stack3;
        boolean removed;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        series := @parameter0: org.jfree.data.time.ohlc.OHLCSeries;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(series, "series");

        $stack3 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        removed = interfaceinvoke $stack3.<java.util.List: boolean remove(java.lang.Object)>(series);

        if removed == 0 goto label1;

        virtualinvoke series.<org.jfree.data.time.ohlc.OHLCSeries: void removeChangeListener(org.jfree.data.general.SeriesChangeListener)>(this);

        virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: void fireDatasetChanged()>();

     label1:
        return removed;
    }

    public void removeAllSeries()
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        java.util.List $stack3, $stack5, $stack7, $stack8;
        boolean $stack4;
        int $stack6, i;
        java.lang.Object $stack9;
        org.jfree.data.time.ohlc.OHLCSeries series;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        $stack3 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack4 = interfaceinvoke $stack3.<java.util.List: boolean isEmpty()>();

        if $stack4 == 0 goto label1;

        return;

     label1:
        i = 0;

     label2:
        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>();

        if i >= $stack6 goto label3;

        $stack8 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack9 = interfaceinvoke $stack8.<java.util.List: java.lang.Object get(int)>(i);

        series = (org.jfree.data.time.ohlc.OHLCSeries) $stack9;

        virtualinvoke series.<org.jfree.data.time.ohlc.OHLCSeries: void removeChangeListener(org.jfree.data.general.SeriesChangeListener)>(this);

        i = i + 1;

        goto label2;

     label3:
        $stack7 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        interfaceinvoke $stack7.<java.util.List: void clear()>();

        virtualinvoke this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: void fireDatasetChanged()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.data.time.ohlc.OHLCSeriesCollection this, that;
        boolean $stack3, $stack6, $stack9;
        org.jfree.data.time.TimePeriodAnchor $stack4, $stack5;
        java.util.List $stack7, $stack8;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.data.time.ohlc.OHLCSeriesCollection;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.data.time.ohlc.OHLCSeriesCollection) obj;

        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack4 = that.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack6 = virtualinvoke $stack5.<org.jfree.data.time.TimePeriodAnchor: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack7 = that.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        return $stack9;
    }

    public int hashCode()
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this;
        org.jfree.data.time.TimePeriodAnchor $stack3;
        java.util.List $stack5, $stack7;
        int $stack6, result#2, i;
        java.lang.Object $stack8;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        $stack3 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: org.jfree.data.time.TimePeriodAnchor xPosition>;

        result#2 = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,java.lang.Comparable)>(137, $stack3);

        i = 0;

     label1:
        $stack5 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: int size()>();

        if i >= $stack6 goto label2;

        $stack7 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(i);

        result#2 = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,java.lang.Object)>(result#2, $stack8);

        i = i + 1;

        goto label1;

     label2:
        return result#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.data.time.ohlc.OHLCSeriesCollection this, clone;
        java.lang.Object $stack2;
        java.util.List $stack3, $stack4;

        this := @this: org.jfree.data.time.ohlc.OHLCSeriesCollection;

        $stack2 = specialinvoke this.<org.jfree.data.xy.AbstractXYDataset: java.lang.Object clone()>();

        clone = (org.jfree.data.time.ohlc.OHLCSeriesCollection) $stack2;

        $stack3 = this.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data>;

        $stack4 = staticinvoke <org.jfree.chart.util.CloneUtils: java.util.List cloneList(java.util.List)>($stack3);

        clone.<org.jfree.data.time.ohlc.OHLCSeriesCollection: java.util.List data> = $stack4;

        return clone;
    }
}
