public class org.jfree.chart.labels.StandardCategorySeriesLabelGenerator extends java.lang.Object implements org.jfree.chart.labels.CategorySeriesLabelGenerator, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.lang.String DEFAULT_LABEL_FORMAT;
    private java.lang.String formatPattern;

    public void <init>()
    {
        org.jfree.chart.labels.StandardCategorySeriesLabelGenerator this;

        this := @this: org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;

        specialinvoke this.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: void <init>(java.lang.String)>("{0}");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.jfree.chart.labels.StandardCategorySeriesLabelGenerator this;
        java.lang.String format;

        this := @this: org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;

        format := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(format, "format");

        this.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern> = format;

        return;
    }

    public java.lang.String generateLabel(org.jfree.data.category.CategoryDataset, int)
    {
        org.jfree.data.category.CategoryDataset dataset;
        org.jfree.chart.labels.StandardCategorySeriesLabelGenerator this;
        int series;
        java.lang.String $stack4, label;
        java.lang.Object[] $stack5;

        this := @this: org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;

        dataset := @parameter0: org.jfree.data.category.CategoryDataset;

        series := @parameter1: int;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(dataset, "dataset");

        $stack4 = this.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern>;

        $stack5 = virtualinvoke this.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.Object[] createItemArray(org.jfree.data.category.CategoryDataset,int)>(dataset, series);

        label = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack4, $stack5);

        return label;
    }

    protected java.lang.Object[] createItemArray(org.jfree.data.category.CategoryDataset, int)
    {
        java.lang.Object[] result;
        org.jfree.data.category.CategoryDataset dataset;
        int series;
        java.lang.Comparable $stack5;
        java.lang.String $stack6;
        org.jfree.chart.labels.StandardCategorySeriesLabelGenerator this;

        this := @this: org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;

        dataset := @parameter0: org.jfree.data.category.CategoryDataset;

        series := @parameter1: int;

        result = newarray (java.lang.Object)[1];

        $stack5 = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Comparable getRowKey(int)>(series);

        $stack6 = virtualinvoke $stack5.<java.lang.Object: java.lang.String toString()>();

        result[0] = $stack6;

        return result;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.labels.StandardCategorySeriesLabelGenerator this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;

        $stack1 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        return $stack1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.labels.StandardCategorySeriesLabelGenerator this, that;
        boolean $stack3, $stack6;
        java.lang.String $stack4, $stack5;

        this := @this: org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.labels.StandardCategorySeriesLabelGenerator) obj;

        $stack5 = this.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern>;

        $stack4 = that.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.labels.StandardCategorySeriesLabelGenerator this;
        java.lang.String $stack2;
        int result#2;

        this := @this: org.jfree.chart.labels.StandardCategorySeriesLabelGenerator;

        $stack2 = this.<org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String formatPattern>;

        result#2 = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,java.lang.String)>(127, $stack2);

        return result#2;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: java.lang.String DEFAULT_LABEL_FORMAT> = "{0}";

        <org.jfree.chart.labels.StandardCategorySeriesLabelGenerator: long serialVersionUID> = 4630760091523940820L;

        return;
    }
}
