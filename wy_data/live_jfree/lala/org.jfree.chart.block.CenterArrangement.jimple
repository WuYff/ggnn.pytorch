public class org.jfree.chart.block.CenterArrangement extends java.lang.Object implements org.jfree.chart.block.Arrangement, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.jfree.chart.block.CenterArrangement this;

        this := @this: org.jfree.chart.block.CenterArrangement;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void add(org.jfree.chart.block.Block, java.lang.Object)
    {
        org.jfree.chart.block.CenterArrangement this;
        org.jfree.chart.block.Block block;
        java.lang.Object key;

        this := @this: org.jfree.chart.block.CenterArrangement;

        block := @parameter0: org.jfree.chart.block.Block;

        key := @parameter1: java.lang.Object;

        return;
    }

    public org.jfree.chart.ui.Size2D arrange(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.RectangleConstraint constraint;
        org.jfree.chart.block.LengthConstraintType w, h, $stack8, $stack9, $stack10, $stack12, $stack13, $stack14, $stack19, $stack20, $stack21, $stack25, $stack26, $stack27;
        org.jfree.chart.block.CenterArrangement this;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.Size2D $stack16, $stack17, $stack18, $stack24, $stack30;
        java.lang.RuntimeException $stack22, $stack23, $stack28, $stack29;
        java.lang.IllegalArgumentException $stack11;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        w = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>();

        h = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>();

        $stack8 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if w != $stack8 goto label3;

        $stack25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack25 goto label1;

        $stack30 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(container, g2);

        return $stack30;

     label1:
        $stack26 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack26 goto label2;

        $stack29 = new java.lang.RuntimeException;

        specialinvoke $stack29.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented.");

        throw $stack29;

     label2:
        $stack27 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack27 goto label9;

        $stack28 = new java.lang.RuntimeException;

        specialinvoke $stack28.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented.");

        throw $stack28;

     label3:
        $stack9 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if w != $stack9 goto label6;

        $stack19 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack19 goto label4;

        $stack24 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        return $stack24;

     label4:
        $stack20 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack20 goto label5;

        $stack23 = new java.lang.RuntimeException;

        specialinvoke $stack23.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented.");

        throw $stack23;

     label5:
        $stack21 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack21 goto label9;

        $stack22 = new java.lang.RuntimeException;

        specialinvoke $stack22.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented.");

        throw $stack22;

     label6:
        $stack10 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if w != $stack10 goto label9;

        $stack12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack12 goto label7;

        $stack18 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeRN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        return $stack18;

     label7:
        $stack13 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack13 goto label8;

        $stack17 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeRF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        return $stack17;

     label8:
        $stack14 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack14 goto label9;

        $stack16 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        return $stack16;

     label9:
        $stack11 = new java.lang.IllegalArgumentException;

        specialinvoke $stack11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unknown LengthConstraintType.");

        throw $stack11;
    }

    protected org.jfree.chart.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.BlockContainer container;
        java.util.List blocks;
        java.lang.Object $stack11;
        org.jfree.chart.block.Block b;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.RectangleConstraint $stack12, constraint;
        org.jfree.chart.ui.Size2D s, $stack21;
        double width, $stack16, $stack17, $stack18, $stack19, $stack20, $stack22, $stack23, $stack24, $stack25;
        java.awt.geom.Rectangle2D$Double $stack15;
        org.jfree.chart.block.CenterArrangement this;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        blocks = virtualinvoke container.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>();

        $stack11 = interfaceinvoke blocks.<java.util.List: java.lang.Object get(int)>(0);

        b = (org.jfree.chart.block.Block) $stack11;

        $stack12 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>;

        s = interfaceinvoke b.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack12);

        width = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        $stack15 = new java.awt.geom.Rectangle2D$Double;

        $stack16 = s.<org.jfree.chart.ui.Size2D: double width>;

        $stack17 = width - $stack16;

        $stack20 = $stack17 / 2.0;

        $stack19 = s.<org.jfree.chart.ui.Size2D: double width>;

        $stack18 = s.<org.jfree.chart.ui.Size2D: double height>;

        specialinvoke $stack15.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack20, 0.0, $stack19, $stack18);

        interfaceinvoke b.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack15);

        $stack21 = new org.jfree.chart.ui.Size2D;

        $stack22 = s.<org.jfree.chart.ui.Size2D: double width>;

        $stack23 = width - $stack22;

        $stack25 = $stack23 / 2.0;

        $stack24 = s.<org.jfree.chart.ui.Size2D: double height>;

        specialinvoke $stack21.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack25, $stack24);

        return $stack21;
    }

    protected org.jfree.chart.ui.Size2D arrangeFR(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.CenterArrangement this;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.RectangleConstraint constraint, c;
        org.jfree.chart.ui.Size2D s, $stack14;
        org.jfree.data.Range $stack7, $stack10;
        double $stack8, $stack11, $stack12;
        boolean $stack9;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        s = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        $stack7 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>();

        $stack8 = s.<org.jfree.chart.ui.Size2D: double height>;

        $stack9 = virtualinvoke $stack7.<org.jfree.data.Range: boolean contains(double)>($stack8);

        if $stack9 == 0 goto label1;

        return s;

     label1:
        $stack10 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>();

        $stack11 = virtualinvoke s.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack12 = virtualinvoke $stack10.<org.jfree.data.Range: double constrain(double)>($stack11);

        c = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedHeight(double)>($stack12);

        $stack14 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, c);

        return $stack14;
    }

    protected org.jfree.chart.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.CenterArrangement this;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.RectangleConstraint constraint;
        org.jfree.chart.ui.Size2D $stack4;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        $stack4 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        return $stack4;
    }

    protected org.jfree.chart.ui.Size2D arrangeRR(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.CenterArrangement this;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.Size2D s1, $stack13;
        org.jfree.chart.block.RectangleConstraint constraint, c;
        org.jfree.data.Range $stack7, $stack10;
        double $stack8, $stack11;
        boolean $stack9;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        s1 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(container, g2);

        $stack7 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        $stack8 = s1.<org.jfree.chart.ui.Size2D: double width>;

        $stack9 = virtualinvoke $stack7.<org.jfree.data.Range: boolean contains(double)>($stack8);

        if $stack9 == 0 goto label1;

        return s1;

     label1:
        $stack10 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        $stack11 = virtualinvoke $stack10.<org.jfree.data.Range: double getUpperBound()>();

        c = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($stack11);

        $stack13 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeFR(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, c);

        return $stack13;
    }

    protected org.jfree.chart.ui.Size2D arrangeRF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.CenterArrangement this;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.RectangleConstraint constraint, c;
        org.jfree.chart.ui.Size2D s, $stack14;
        org.jfree.data.Range $stack7, $stack10;
        double $stack8, $stack11, $stack12;
        boolean $stack9;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        s = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeNF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, constraint);

        $stack7 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        $stack8 = s.<org.jfree.chart.ui.Size2D: double width>;

        $stack9 = virtualinvoke $stack7.<org.jfree.data.Range: boolean contains(double)>($stack8);

        if $stack9 == 0 goto label1;

        return s;

     label1:
        $stack10 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        $stack11 = virtualinvoke s.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack12 = virtualinvoke $stack10.<org.jfree.data.Range: double constrain(double)>($stack11);

        c = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($stack12);

        $stack14 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeFF(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, c);

        return $stack14;
    }

    protected org.jfree.chart.ui.Size2D arrangeRN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.CenterArrangement this;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.Size2D s1, $stack13;
        org.jfree.chart.block.RectangleConstraint constraint, c;
        org.jfree.data.Range $stack7, $stack10;
        double $stack8, $stack11;
        boolean $stack9;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        s1 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(container, g2);

        $stack7 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        $stack8 = s1.<org.jfree.chart.ui.Size2D: double width>;

        $stack9 = virtualinvoke $stack7.<org.jfree.data.Range: boolean contains(double)>($stack8);

        if $stack9 == 0 goto label1;

        return s1;

     label1:
        $stack10 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        $stack11 = virtualinvoke $stack10.<org.jfree.data.Range: double getUpperBound()>();

        c = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint toFixedWidth(double)>($stack11);

        $stack13 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeFN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(container, g2, c);

        return $stack13;
    }

    protected org.jfree.chart.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D)
    {
        org.jfree.chart.block.BlockContainer container;
        java.util.List blocks;
        java.lang.Object $stack7;
        org.jfree.chart.block.Block b;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.RectangleConstraint $stack8;
        org.jfree.chart.ui.Size2D s, $stack13;
        java.awt.geom.Rectangle2D$Double $stack10;
        double $stack11, $stack12, $stack14, $stack15;
        org.jfree.chart.block.CenterArrangement this;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        blocks = virtualinvoke container.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>();

        $stack7 = interfaceinvoke blocks.<java.util.List: java.lang.Object get(int)>(0);

        b = (org.jfree.chart.block.Block) $stack7;

        $stack8 = <org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.RectangleConstraint NONE>;

        s = interfaceinvoke b.<org.jfree.chart.block.Block: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, $stack8);

        $stack10 = new java.awt.geom.Rectangle2D$Double;

        $stack12 = s.<org.jfree.chart.ui.Size2D: double width>;

        $stack11 = s.<org.jfree.chart.ui.Size2D: double height>;

        specialinvoke $stack10.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(0.0, 0.0, $stack12, $stack11);

        interfaceinvoke b.<org.jfree.chart.block.Block: void setBounds(java.awt.geom.Rectangle2D)>($stack10);

        $stack13 = new org.jfree.chart.ui.Size2D;

        $stack15 = s.<org.jfree.chart.ui.Size2D: double width>;

        $stack14 = s.<org.jfree.chart.ui.Size2D: double height>;

        specialinvoke $stack13.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack15, $stack14);

        return $stack13;
    }

    protected org.jfree.chart.ui.Size2D arrangeNF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.block.CenterArrangement this;
        org.jfree.chart.block.BlockContainer container;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.Size2D $stack4;
        org.jfree.chart.block.RectangleConstraint constraint;

        this := @this: org.jfree.chart.block.CenterArrangement;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        g2 := @parameter1: java.awt.Graphics2D;

        constraint := @parameter2: org.jfree.chart.block.RectangleConstraint;

        $stack4 = virtualinvoke this.<org.jfree.chart.block.CenterArrangement: org.jfree.chart.ui.Size2D arrangeNN(org.jfree.chart.block.BlockContainer,java.awt.Graphics2D)>(container, g2);

        return $stack4;
    }

    public void clear()
    {
        org.jfree.chart.block.CenterArrangement this;

        this := @this: org.jfree.chart.block.CenterArrangement;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.block.CenterArrangement this;
        boolean $stack2;

        this := @this: org.jfree.chart.block.CenterArrangement;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack2 = obj instanceof org.jfree.chart.block.CenterArrangement;

        if $stack2 != 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.block.CenterArrangement: long serialVersionUID> = -353308149220382047L;

        return;
    }
}
