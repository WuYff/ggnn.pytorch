public class org.jfree.data.statistics.SimpleHistogramBin extends java.lang.Object implements java.lang.Comparable, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private double lowerBound;
    private double upperBound;
    private boolean includeLowerBound;
    private boolean includeUpperBound;
    private int itemCount;

    public void <init>(double, double)
    {
        org.jfree.data.statistics.SimpleHistogramBin this;
        double lowerBound, upperBound;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        lowerBound := @parameter0: double;

        upperBound := @parameter1: double;

        specialinvoke this.<org.jfree.data.statistics.SimpleHistogramBin: void <init>(double,double,boolean,boolean)>(lowerBound, upperBound, 1, 1);

        return;
    }

    public void <init>(double, double, boolean, boolean)
    {
        org.jfree.data.statistics.SimpleHistogramBin this;
        double lowerBound, upperBound;
        byte $stack7;
        boolean includeLowerBound, includeUpperBound;
        java.lang.IllegalArgumentException $stack8;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        lowerBound := @parameter0: double;

        upperBound := @parameter1: double;

        includeLowerBound := @parameter2: boolean;

        includeUpperBound := @parameter3: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack7 = lowerBound cmpl upperBound;

        if $stack7 < 0 goto label1;

        $stack8 = new java.lang.IllegalArgumentException;

        specialinvoke $stack8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid bounds");

        throw $stack8;

     label1:
        this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound> = lowerBound;

        this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound> = upperBound;

        this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeLowerBound> = includeLowerBound;

        this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeUpperBound> = includeUpperBound;

        this.<org.jfree.data.statistics.SimpleHistogramBin: int itemCount> = 0;

        return;
    }

    public double getLowerBound()
    {
        org.jfree.data.statistics.SimpleHistogramBin this;
        double $stack1;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        $stack1 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        return $stack1;
    }

    public double getUpperBound()
    {
        org.jfree.data.statistics.SimpleHistogramBin this;
        double $stack1;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        $stack1 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        return $stack1;
    }

    public int getItemCount()
    {
        org.jfree.data.statistics.SimpleHistogramBin this;
        int $stack1;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        $stack1 = this.<org.jfree.data.statistics.SimpleHistogramBin: int itemCount>;

        return $stack1;
    }

    public void setItemCount(int)
    {
        org.jfree.data.statistics.SimpleHistogramBin this;
        int count;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        count := @parameter0: int;

        this.<org.jfree.data.statistics.SimpleHistogramBin: int itemCount> = count;

        return;
    }

    public boolean accepts(double)
    {
        double value, $stack4, $stack6, $stack8, $stack10;
        boolean $stack3, $stack12, $stack13;
        org.jfree.data.statistics.SimpleHistogramBin this;
        byte $stack5, $stack7, $stack9, $stack11;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        value := @parameter0: double;

        $stack3 = staticinvoke <java.lang.Double: boolean isNaN(double)>(value);

        if $stack3 == 0 goto label1;

        return 0;

     label1:
        $stack4 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack5 = value cmpg $stack4;

        if $stack5 >= 0 goto label2;

        return 0;

     label2:
        $stack6 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack7 = value cmpl $stack6;

        if $stack7 <= 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack9 = value cmpl $stack8;

        if $stack9 != 0 goto label4;

        $stack13 = this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeLowerBound>;

        return $stack13;

     label4:
        $stack10 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack11 = value cmpl $stack10;

        if $stack11 != 0 goto label5;

        $stack12 = this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeUpperBound>;

        return $stack12;

     label5:
        return 1;
    }

    public boolean overlapsWith(org.jfree.data.statistics.SimpleHistogramBin)
    {
        org.jfree.data.statistics.SimpleHistogramBin this, bin;
        double $stack2, $stack3, $stack5, $stack6, $stack8, $stack9, $stack11, $stack12;
        byte $stack4, $stack7, $stack10, $stack13;
        boolean $stack14, $stack15, $stack17, $stack18, $stack19, $stack16;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        bin := @parameter0: org.jfree.data.statistics.SimpleHistogramBin;

        $stack3 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack2 = bin.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack4 = $stack3 cmpg $stack2;

        if $stack4 >= 0 goto label1;

        return 0;

     label1:
        $stack6 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack5 = bin.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack7 = $stack6 cmpl $stack5;

        if $stack7 <= 0 goto label2;

        return 0;

     label2:
        $stack9 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack8 = bin.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack10 = $stack9 cmpl $stack8;

        if $stack10 != 0 goto label5;

        $stack17 = this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeUpperBound>;

        if $stack17 == 0 goto label3;

        $stack18 = bin.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeLowerBound>;

        if $stack18 == 0 goto label3;

        $stack19 = 1;

        goto label4;

     label3:
        $stack19 = 0;

     label4:
        return $stack19;

     label5:
        $stack12 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack11 = bin.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack13 = $stack12 cmpl $stack11;

        if $stack13 != 0 goto label8;

        $stack14 = this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeLowerBound>;

        if $stack14 == 0 goto label6;

        $stack15 = bin.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeUpperBound>;

        if $stack15 == 0 goto label6;

        $stack16 = 1;

        goto label7;

     label6:
        $stack16 = 0;

     label7:
        return $stack16;

     label8:
        return 1;
    }

    public int compareTo(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack3;
        org.jfree.data.statistics.SimpleHistogramBin bin, this;
        double $stack4, $stack5, $stack7, $stack8, $stack10, $stack11, $stack13, $stack14;
        byte $stack6, $stack9, $stack12, $stack15;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        obj := @parameter0: java.lang.Object;

        $stack3 = obj instanceof org.jfree.data.statistics.SimpleHistogramBin;

        if $stack3 != 0 goto label1;

        return 0;

     label1:
        bin = (org.jfree.data.statistics.SimpleHistogramBin) obj;

        $stack5 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack4 = bin.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack6 = $stack5 cmpg $stack4;

        if $stack6 >= 0 goto label2;

        return -1;

     label2:
        $stack8 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack7 = bin.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack9 = $stack8 cmpl $stack7;

        if $stack9 <= 0 goto label3;

        return 1;

     label3:
        $stack11 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack10 = bin.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack12 = $stack11 cmpg $stack10;

        if $stack12 >= 0 goto label4;

        return -1;

     label4:
        $stack14 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack13 = bin.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack15 = $stack14 cmpl $stack13;

        if $stack15 <= 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack3, $stack10, $stack11, $stack12, $stack13;
        org.jfree.data.statistics.SimpleHistogramBin that, this;
        double $stack4, $stack5, $stack7, $stack8;
        byte $stack6, $stack9;
        int $stack14, $stack15;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        obj := @parameter0: java.lang.Object;

        $stack3 = obj instanceof org.jfree.data.statistics.SimpleHistogramBin;

        if $stack3 != 0 goto label1;

        return 0;

     label1:
        that = (org.jfree.data.statistics.SimpleHistogramBin) obj;

        $stack5 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack4 = that.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label2;

        return 0;

     label2:
        $stack8 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack7 = that.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack9 = $stack8 cmpl $stack7;

        if $stack9 == 0 goto label3;

        return 0;

     label3:
        $stack11 = this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeLowerBound>;

        $stack10 = that.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeLowerBound>;

        if $stack11 == $stack10 goto label4;

        return 0;

     label4:
        $stack13 = this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeUpperBound>;

        $stack12 = that.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeUpperBound>;

        if $stack13 == $stack12 goto label5;

        return 0;

     label5:
        $stack15 = this.<org.jfree.data.statistics.SimpleHistogramBin: int itemCount>;

        $stack14 = that.<org.jfree.data.statistics.SimpleHistogramBin: int itemCount>;

        if $stack15 == $stack14 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.statistics.SimpleHistogramBin this;
        double $stack2, $stack5, $stack10, $stack13;
        int $stack3, $stack9, $stack11, $stack17, $stack19, $stack21, $stack22, $stack23, hash#2;
        long $stack4, $stack6, $stack7, $stack8, $stack12, $stack14, $stack15, $stack16;
        boolean $stack18, $stack20;
        byte $stack31, $stack24;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        $stack3 = 67 * 5;

        $stack2 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack4 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack2);

        $stack5 = this.<org.jfree.data.statistics.SimpleHistogramBin: double lowerBound>;

        $stack6 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack5);

        $stack7 = $stack6 >>> 32;

        $stack8 = $stack4 ^ $stack7;

        $stack9 = (int) $stack8;

        hash#2 = $stack3 + $stack9;

        $stack11 = 67 * hash#2;

        $stack10 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack12 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack10);

        $stack13 = this.<org.jfree.data.statistics.SimpleHistogramBin: double upperBound>;

        $stack14 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack13);

        $stack15 = $stack14 >>> 32;

        $stack16 = $stack12 ^ $stack15;

        $stack17 = (int) $stack16;

        hash#2 = $stack11 + $stack17;

        $stack19 = 67 * hash#2;

        $stack18 = this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeLowerBound>;

        if $stack18 == 0 goto label1;

        $stack31 = 1;

        goto label2;

     label1:
        $stack31 = 0;

     label2:
        hash#2 = $stack19 + $stack31;

        $stack21 = 67 * hash#2;

        $stack20 = this.<org.jfree.data.statistics.SimpleHistogramBin: boolean includeUpperBound>;

        if $stack20 == 0 goto label3;

        $stack24 = 1;

        goto label4;

     label3:
        $stack24 = 0;

     label4:
        hash#2 = $stack21 + $stack24;

        $stack23 = 67 * hash#2;

        $stack22 = this.<org.jfree.data.statistics.SimpleHistogramBin: int itemCount>;

        hash#2 = $stack23 + $stack22;

        return hash#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.data.statistics.SimpleHistogramBin this;
        java.lang.Object $stack1;

        this := @this: org.jfree.data.statistics.SimpleHistogramBin;

        $stack1 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        return $stack1;
    }

    public static void <clinit>()
    {
        <org.jfree.data.statistics.SimpleHistogramBin: long serialVersionUID> = 3480862537505941742L;

        return;
    }
}
