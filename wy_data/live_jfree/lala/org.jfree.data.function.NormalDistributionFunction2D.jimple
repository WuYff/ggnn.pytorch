public class org.jfree.data.function.NormalDistributionFunction2D extends java.lang.Object implements org.jfree.data.function.Function2D, java.io.Serializable
{
    private double mean;
    private double std;
    private double factor;
    private double denominator;

    public void <init>(double, double)
    {
        org.jfree.data.function.NormalDistributionFunction2D this;
        double std, mean, $stack7, $stack8, $stack9, $stack10, $stack11;
        byte $stack5;
        java.lang.IllegalArgumentException $stack12;

        this := @this: org.jfree.data.function.NormalDistributionFunction2D;

        mean := @parameter0: double;

        std := @parameter1: double;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack5 = std cmpg 0.0;

        if $stack5 > 0 goto label1;

        $stack12 = new java.lang.IllegalArgumentException;

        specialinvoke $stack12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires \'std\' > 0.");

        throw $stack12;

     label1:
        this.<org.jfree.data.function.NormalDistributionFunction2D: double mean> = mean;

        this.<org.jfree.data.function.NormalDistributionFunction2D: double std> = std;

        $stack7 = staticinvoke <java.lang.Math: double sqrt(double)>(6.283185307179586);

        $stack8 = std * $stack7;

        $stack9 = 1.0 / $stack8;

        this.<org.jfree.data.function.NormalDistributionFunction2D: double factor> = $stack9;

        $stack10 = 2.0 * std;

        $stack11 = $stack10 * std;

        this.<org.jfree.data.function.NormalDistributionFunction2D: double denominator> = $stack11;

        return;
    }

    public double getMean()
    {
        org.jfree.data.function.NormalDistributionFunction2D this;
        double $stack1;

        this := @this: org.jfree.data.function.NormalDistributionFunction2D;

        $stack1 = this.<org.jfree.data.function.NormalDistributionFunction2D: double mean>;

        return $stack1;
    }

    public double getStandardDeviation()
    {
        org.jfree.data.function.NormalDistributionFunction2D this;
        double $stack1;

        this := @this: org.jfree.data.function.NormalDistributionFunction2D;

        $stack1 = this.<org.jfree.data.function.NormalDistributionFunction2D: double std>;

        return $stack1;
    }

    public double getValue(double)
    {
        double x, $stack5, z, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12;
        org.jfree.data.function.NormalDistributionFunction2D this;

        this := @this: org.jfree.data.function.NormalDistributionFunction2D;

        x := @parameter0: double;

        $stack5 = this.<org.jfree.data.function.NormalDistributionFunction2D: double mean>;

        z = x - $stack5;

        $stack10 = this.<org.jfree.data.function.NormalDistributionFunction2D: double factor>;

        $stack6 = neg z;

        $stack8 = $stack6 * z;

        $stack7 = this.<org.jfree.data.function.NormalDistributionFunction2D: double denominator>;

        $stack9 = $stack8 / $stack7;

        $stack11 = staticinvoke <java.lang.Math: double exp(double)>($stack9);

        $stack12 = $stack10 * $stack11;

        return $stack12;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack3;
        org.jfree.data.function.NormalDistributionFunction2D that, this;
        double $stack4, $stack5, $stack7, $stack8;
        byte $stack6, $stack9;

        this := @this: org.jfree.data.function.NormalDistributionFunction2D;

        obj := @parameter0: java.lang.Object;

        $stack3 = obj instanceof org.jfree.data.function.NormalDistributionFunction2D;

        if $stack3 != 0 goto label1;

        return 0;

     label1:
        that = (org.jfree.data.function.NormalDistributionFunction2D) obj;

        $stack5 = this.<org.jfree.data.function.NormalDistributionFunction2D: double mean>;

        $stack4 = that.<org.jfree.data.function.NormalDistributionFunction2D: double mean>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label2;

        return 0;

     label2:
        $stack8 = this.<org.jfree.data.function.NormalDistributionFunction2D: double std>;

        $stack7 = that.<org.jfree.data.function.NormalDistributionFunction2D: double std>;

        $stack9 = $stack8 cmpl $stack7;

        if $stack9 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.function.NormalDistributionFunction2D this;
        double $stack2, $stack4;
        int result#2;

        this := @this: org.jfree.data.function.NormalDistributionFunction2D;

        $stack2 = this.<org.jfree.data.function.NormalDistributionFunction2D: double mean>;

        result#2 = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,double)>(29, $stack2);

        $stack4 = this.<org.jfree.data.function.NormalDistributionFunction2D: double std>;

        result#2 = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,double)>(result#2, $stack4);

        return result#2;
    }
}
