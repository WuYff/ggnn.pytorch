public class org.jfree.chart.ui.PaintSample extends javax.swing.JComponent
{
    private java.awt.Paint paint;
    private java.awt.Dimension preferredSize;

    public void <init>(java.awt.Paint)
    {
        org.jfree.chart.ui.PaintSample this;
        java.awt.Paint paint;
        java.awt.Dimension $stack2;

        this := @this: org.jfree.chart.ui.PaintSample;

        paint := @parameter0: java.awt.Paint;

        specialinvoke this.<javax.swing.JComponent: void <init>()>();

        this.<org.jfree.chart.ui.PaintSample: java.awt.Paint paint> = paint;

        $stack2 = new java.awt.Dimension;

        specialinvoke $stack2.<java.awt.Dimension: void <init>(int,int)>(80, 12);

        this.<org.jfree.chart.ui.PaintSample: java.awt.Dimension preferredSize> = $stack2;

        return;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.ui.PaintSample this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.ui.PaintSample;

        $stack1 = this.<org.jfree.chart.ui.PaintSample: java.awt.Paint paint>;

        return $stack1;
    }

    public void setPaint(java.awt.Paint)
    {
        org.jfree.chart.ui.PaintSample this;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.ui.PaintSample;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.ui.PaintSample: java.awt.Paint paint> = paint;

        virtualinvoke this.<org.jfree.chart.ui.PaintSample: void repaint()>();

        return;
    }

    public java.awt.Dimension getPreferredSize()
    {
        org.jfree.chart.ui.PaintSample this;
        java.awt.Dimension $stack1;

        this := @this: org.jfree.chart.ui.PaintSample;

        $stack1 = this.<org.jfree.chart.ui.PaintSample: java.awt.Dimension preferredSize>;

        return $stack1;
    }

    public void paintComponent(java.awt.Graphics)
    {
        java.awt.Graphics g;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.PaintSample this;
        java.awt.Dimension size;
        java.awt.Insets insets;
        int $stack16, $stack17, $stack19, $stack21, $stack26, $stack28;
        double xx, yy, $stack18, $stack20, $stack22, $stack23, $stack24, ww, $stack25, $stack27, $stack29, $stack30, $stack31, hh;
        java.awt.geom.Rectangle2D$Double $stack32;
        java.awt.Paint $stack33;
        java.awt.Color $stack34;

        this := @this: org.jfree.chart.ui.PaintSample;

        g := @parameter0: java.awt.Graphics;

        g2 = (java.awt.Graphics2D) g;

        size = virtualinvoke this.<org.jfree.chart.ui.PaintSample: java.awt.Dimension getSize()>();

        insets = virtualinvoke this.<org.jfree.chart.ui.PaintSample: java.awt.Insets getInsets()>();

        $stack16 = insets.<java.awt.Insets: int left>;

        xx = (double) $stack16;

        $stack17 = insets.<java.awt.Insets: int top>;

        yy = (double) $stack17;

        $stack18 = virtualinvoke size.<java.awt.Dimension: double getWidth()>();

        $stack19 = insets.<java.awt.Insets: int left>;

        $stack20 = (double) $stack19;

        $stack23 = $stack18 - $stack20;

        $stack21 = insets.<java.awt.Insets: int right>;

        $stack22 = (double) $stack21;

        $stack24 = $stack23 - $stack22;

        ww = $stack24 - 1.0;

        $stack25 = virtualinvoke size.<java.awt.Dimension: double getHeight()>();

        $stack26 = insets.<java.awt.Insets: int top>;

        $stack27 = (double) $stack26;

        $stack30 = $stack25 - $stack27;

        $stack28 = insets.<java.awt.Insets: int bottom>;

        $stack29 = (double) $stack28;

        $stack31 = $stack30 - $stack29;

        hh = $stack31 - 1.0;

        $stack32 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack32.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(xx, yy, ww, hh);

        $stack33 = this.<org.jfree.chart.ui.PaintSample: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack33);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack32);

        $stack34 = <java.awt.Color: java.awt.Color BLACK>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack34);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack32);

        return;
    }
}
