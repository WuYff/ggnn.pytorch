public class org.jfree.chart.annotations.CategoryLineAnnotation extends org.jfree.chart.annotations.AbstractAnnotation implements org.jfree.chart.annotations.CategoryAnnotation, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    static final long serialVersionUID;
    private java.lang.Comparable category1;
    private double value1;
    private java.lang.Comparable category2;
    private double value2;
    private transient java.awt.Paint paint;
    private transient java.awt.Stroke stroke;

    public void <init>(java.lang.Comparable, double, java.lang.Comparable, double, java.awt.Paint, java.awt.Stroke)
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.awt.Color $stack9;
        java.awt.BasicStroke $stack10;
        java.lang.Comparable category1, category2;
        java.awt.Paint paint;
        java.awt.Stroke stroke;
        double value1, value2;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        category1 := @parameter0: java.lang.Comparable;

        value1 := @parameter1: double;

        category2 := @parameter2: java.lang.Comparable;

        value2 := @parameter3: double;

        paint := @parameter4: java.awt.Paint;

        stroke := @parameter5: java.awt.Stroke;

        specialinvoke this.<org.jfree.chart.annotations.AbstractAnnotation: void <init>()>();

        $stack9 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint> = $stack9;

        $stack10 = new java.awt.BasicStroke;

        specialinvoke $stack10.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke> = $stack10;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(category1, "category1");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(category2, "category2");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(stroke, "stroke");

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1> = category1;

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1> = value1;

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2> = category2;

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2> = value2;

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint> = paint;

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke> = stroke;

        return;
    }

    public java.lang.Comparable getCategory1()
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.lang.Comparable $stack1;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1>;

        return $stack1;
    }

    public void setCategory1(java.lang.Comparable)
    {
        java.lang.Comparable category;
        org.jfree.chart.annotations.CategoryLineAnnotation this;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        category := @parameter0: java.lang.Comparable;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(category, "category");

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1> = category;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryLineAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public double getValue1()
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1>;

        return $stack1;
    }

    public void setValue1(double)
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        double value;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        value := @parameter0: double;

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1> = value;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryLineAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public java.lang.Comparable getCategory2()
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.lang.Comparable $stack1;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2>;

        return $stack1;
    }

    public void setCategory2(java.lang.Comparable)
    {
        java.lang.Comparable category;
        org.jfree.chart.annotations.CategoryLineAnnotation this;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        category := @parameter0: java.lang.Comparable;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(category, "category");

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2> = category;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryLineAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public double getValue2()
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2>;

        return $stack1;
    }

    public void setValue2(double)
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        double value;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        value := @parameter0: double;

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2> = value;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryLineAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint>;

        return $stack1;
    }

    public void setPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.annotations.CategoryLineAnnotation this;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint> = paint;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryLineAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public java.awt.Stroke getStroke()
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke>;

        return $stack1;
    }

    public void setStroke(java.awt.Stroke)
    {
        java.awt.Stroke stroke;
        org.jfree.chart.annotations.CategoryLineAnnotation this;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        stroke := @parameter0: java.awt.Stroke;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(stroke, "stroke");

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke> = stroke;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryLineAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.CategoryPlot, java.awt.geom.Rectangle2D, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis)
    {
        org.jfree.chart.plot.CategoryPlot plot;
        org.jfree.data.category.CategoryDataset dataset;
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.lang.Comparable $stack22, $stack24;
        int catIndex1, catIndex2, catCount, $stack39, $stack38, $stack37, $stack36;
        org.jfree.chart.plot.PlotOrientation orientation, $stack32, $stack33;
        org.jfree.chart.axis.AxisLocation $stack28, $stack30;
        org.jfree.chart.ui.RectangleEdge domainEdge, rangeEdge;
        java.awt.Graphics2D g2;
        org.jfree.chart.axis.CategoryAxis domainAxis;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.axis.CategoryAnchor $stack40, $stack44, $stack57, $stack61;
        org.jfree.chart.axis.ValueAxis rangeAxis;
        double $stack42, $stack46, $stack59, $stack63, lineX1, lineY1, lineX2, lineY2;
        java.awt.Paint $stack34;
        java.awt.Stroke $stack35;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.CategoryPlot;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        domainAxis := @parameter3: org.jfree.chart.axis.CategoryAxis;

        rangeAxis := @parameter4: org.jfree.chart.axis.ValueAxis;

        dataset = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset()>();

        $stack22 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1>;

        catIndex1 = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getColumnIndex(java.lang.Comparable)>($stack22);

        $stack24 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2>;

        catIndex2 = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getColumnIndex(java.lang.Comparable)>($stack24);

        catCount = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getColumnCount()>();

        lineX1 = 0.0;

        lineY1 = 0.0;

        lineX2 = 0.0;

        lineY2 = 0.0;

        orientation = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack28 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>();

        domainEdge = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.chart.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($stack28, orientation);

        $stack30 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>();

        rangeEdge = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.chart.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($stack30, orientation);

        $stack32 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack32 goto label1;

        $stack57 = <org.jfree.chart.axis.CategoryAnchor: org.jfree.chart.axis.CategoryAnchor MIDDLE>;

        lineY1 = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack57, catIndex1, catCount, dataArea, domainEdge);

        $stack59 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1>;

        lineX1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack59, dataArea, rangeEdge);

        $stack61 = <org.jfree.chart.axis.CategoryAnchor: org.jfree.chart.axis.CategoryAnchor MIDDLE>;

        lineY2 = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack61, catIndex2, catCount, dataArea, domainEdge);

        $stack63 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2>;

        lineX2 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack63, dataArea, rangeEdge);

        goto label2;

     label1:
        $stack33 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack33 goto label2;

        $stack40 = <org.jfree.chart.axis.CategoryAnchor: org.jfree.chart.axis.CategoryAnchor MIDDLE>;

        lineX1 = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack40, catIndex1, catCount, dataArea, domainEdge);

        $stack42 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1>;

        lineY1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack42, dataArea, rangeEdge);

        $stack44 = <org.jfree.chart.axis.CategoryAnchor: org.jfree.chart.axis.CategoryAnchor MIDDLE>;

        lineX2 = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryJava2DCoordinate(org.jfree.chart.axis.CategoryAnchor,int,int,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack44, catIndex2, catCount, dataArea, domainEdge);

        $stack46 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2>;

        lineY2 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack46, dataArea, rangeEdge);

     label2:
        $stack34 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack34);

        $stack35 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack35);

        $stack39 = (int) lineX1;

        $stack38 = (int) lineY1;

        $stack37 = (int) lineX2;

        $stack36 = (int) lineY2;

        virtualinvoke g2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($stack39, $stack38, $stack37, $stack36);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.annotations.CategoryLineAnnotation this, that;
        boolean $stack3, $stack6, $stack12, $stack18, $stack21;
        java.lang.Comparable $stack4, $stack5, $stack10, $stack11;
        double $stack7, $stack8, $stack13, $stack14;
        byte $stack9, $stack15;
        java.awt.Paint $stack16, $stack17;
        java.awt.Stroke $stack19, $stack20;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.annotations.CategoryLineAnnotation;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.annotations.CategoryLineAnnotation) obj;

        $stack4 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1>;

        $stack5 = virtualinvoke that.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory1()>();

        $stack6 = virtualinvoke $stack4.<java.lang.Object: boolean equals(java.lang.Object)>($stack5);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1>;

        $stack8 = virtualinvoke that.<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue1()>();

        $stack9 = $stack7 cmpl $stack8;

        if $stack9 == 0 goto label4;

        return 0;

     label4:
        $stack10 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2>;

        $stack11 = virtualinvoke that.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable getCategory2()>();

        $stack12 = virtualinvoke $stack10.<java.lang.Object: boolean equals(java.lang.Object)>($stack11);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack13 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2>;

        $stack14 = virtualinvoke that.<org.jfree.chart.annotations.CategoryLineAnnotation: double getValue2()>();

        $stack15 = $stack13 cmpl $stack14;

        if $stack15 == 0 goto label6;

        return 0;

     label6:
        $stack17 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint>;

        $stack16 = that.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint>;

        $stack18 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack17, $stack16);

        if $stack18 != 0 goto label7;

        return 0;

     label7:
        $stack20 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke>;

        $stack19 = that.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke>;

        $stack21 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack20, $stack19);

        if $stack21 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.lang.Comparable $stack4, $stack13;
        int $stack5, $stack6, $stack11, $stack12, $stack14, $stack15, $stack20, $stack21, $stack23, $stack24, $stack26, $stack27, result#2;
        double $stack7, $stack16;
        long $stack9, $stack10, $stack18, $stack19, temp;
        java.awt.Paint $stack22;
        java.awt.Stroke $stack25;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        $stack5 = 37 * 193;

        $stack4 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category1>;

        $stack6 = virtualinvoke $stack4.<java.lang.Object: int hashCode()>();

        result#2 = $stack5 + $stack6;

        $stack7 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value1>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack7);

        $stack12 = 37 * result#2;

        $stack9 = temp >>> 32;

        $stack10 = temp ^ $stack9;

        $stack11 = (int) $stack10;

        result#2 = $stack12 + $stack11;

        $stack14 = 37 * result#2;

        $stack13 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.lang.Comparable category2>;

        $stack15 = virtualinvoke $stack13.<java.lang.Object: int hashCode()>();

        result#2 = $stack14 + $stack15;

        $stack16 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: double value2>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack16);

        $stack21 = 37 * result#2;

        $stack18 = temp >>> 32;

        $stack19 = temp ^ $stack18;

        $stack20 = (int) $stack19;

        result#2 = $stack21 + $stack20;

        $stack23 = 37 * result#2;

        $stack22 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint>;

        $stack24 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack22);

        result#2 = $stack23 + $stack24;

        $stack26 = 37 * result#2;

        $stack25 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke>;

        $stack27 = virtualinvoke $stack25.<java.lang.Object: int hashCode()>();

        result#2 = $stack26 + $stack27;

        return result#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        $stack1 = specialinvoke this.<org.jfree.chart.annotations.AbstractAnnotation: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.awt.Paint $stack2;
        java.awt.Stroke $stack3;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.annotations.CategoryLineAnnotation this;
        java.awt.Paint $stack2;
        java.awt.Stroke $stack3;

        this := @this: org.jfree.chart.annotations.CategoryLineAnnotation;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Paint paint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.CategoryLineAnnotation: java.awt.Stroke stroke> = $stack3;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.annotations.CategoryLineAnnotation: long serialVersionUID> = 3477740483341587984L;

        return;
    }
}
