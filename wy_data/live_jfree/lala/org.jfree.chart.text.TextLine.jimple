public class org.jfree.chart.text.TextLine extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.List fragments;

    public void <init>()
    {
        org.jfree.chart.text.TextLine this;
        java.util.ArrayList $stack1;

        this := @this: org.jfree.chart.text.TextLine;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.text.TextLine: java.util.List fragments> = $stack1;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.jfree.chart.text.TextLine this;
        java.lang.String text;
        java.awt.Font $stack2;

        this := @this: org.jfree.chart.text.TextLine;

        text := @parameter0: java.lang.String;

        $stack2 = <org.jfree.chart.text.TextFragment: java.awt.Font DEFAULT_FONT>;

        specialinvoke this.<org.jfree.chart.text.TextLine: void <init>(java.lang.String,java.awt.Font)>(text, $stack2);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font)
    {
        org.jfree.chart.text.TextLine this;
        java.util.ArrayList $stack4;
        org.jfree.chart.text.TextFragment $stack5;
        java.lang.String text;
        java.awt.Font font;
        java.util.List $stack6;

        this := @this: org.jfree.chart.text.TextLine;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack4 = new java.util.ArrayList;

        specialinvoke $stack4.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.text.TextLine: java.util.List fragments> = $stack4;

        $stack5 = new org.jfree.chart.text.TextFragment;

        specialinvoke $stack5.<org.jfree.chart.text.TextFragment: void <init>(java.lang.String,java.awt.Font)>(text, font);

        $stack6 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        interfaceinvoke $stack6.<java.util.List: boolean add(java.lang.Object)>($stack5);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font, java.awt.Paint)
    {
        org.jfree.chart.text.TextLine this;
        java.lang.String text;
        java.awt.Font font;
        java.awt.Paint paint;
        java.util.ArrayList $stack5;
        org.jfree.chart.text.TextFragment $stack6;
        java.util.List $stack7;
        java.lang.IllegalArgumentException $stack9, $stack10, $stack11;

        this := @this: org.jfree.chart.text.TextLine;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        paint := @parameter2: java.awt.Paint;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if text != null goto label1;

        $stack11 = new java.lang.IllegalArgumentException;

        specialinvoke $stack11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'text\' argument.");

        throw $stack11;

     label1:
        if font != null goto label2;

        $stack10 = new java.lang.IllegalArgumentException;

        specialinvoke $stack10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'font\' argument.");

        throw $stack10;

     label2:
        if paint != null goto label3;

        $stack9 = new java.lang.IllegalArgumentException;

        specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'paint\' argument.");

        throw $stack9;

     label3:
        $stack5 = new java.util.ArrayList;

        specialinvoke $stack5.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.text.TextLine: java.util.List fragments> = $stack5;

        $stack6 = new org.jfree.chart.text.TextFragment;

        specialinvoke $stack6.<org.jfree.chart.text.TextFragment: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>(text, font, paint);

        $stack7 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>($stack6);

        return;
    }

    public void addFragment(org.jfree.chart.text.TextFragment)
    {
        org.jfree.chart.text.TextLine this;
        org.jfree.chart.text.TextFragment fragment;
        java.util.List $stack2;

        this := @this: org.jfree.chart.text.TextLine;

        fragment := @parameter0: org.jfree.chart.text.TextFragment;

        $stack2 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(fragment);

        return;
    }

    public void removeFragment(org.jfree.chart.text.TextFragment)
    {
        org.jfree.chart.text.TextLine this;
        org.jfree.chart.text.TextFragment fragment;
        java.util.List $stack2;

        this := @this: org.jfree.chart.text.TextLine;

        fragment := @parameter0: org.jfree.chart.text.TextFragment;

        $stack2 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(fragment);

        return;
    }

    public void draw(java.awt.Graphics2D, float, float, org.jfree.chart.ui.TextAnchor, float, float, double)
    {
        org.jfree.chart.text.TextLine this;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.Size2D dim, d;
        org.jfree.chart.ui.TextAnchor anchor, $stack25;
        boolean $stack17, $stack18, $stack22;
        float anchorX, yOffset, anchorY, rotateX, rotateY, $stack26, $stack28, $stack41, xAdj, x;
        java.util.Iterator iterator;
        java.lang.Object $stack23;
        org.jfree.chart.text.TextFragment fragment;
        double angle, $stack27, $stack30, $stack31, $stack39, $stack40;
        java.util.List $stack20;

        this := @this: org.jfree.chart.text.TextLine;

        g2 := @parameter0: java.awt.Graphics2D;

        anchorX := @parameter1: float;

        anchorY := @parameter2: float;

        anchor := @parameter3: org.jfree.chart.ui.TextAnchor;

        rotateX := @parameter4: float;

        rotateY := @parameter5: float;

        angle := @parameter6: double;

        dim = virtualinvoke this.<org.jfree.chart.text.TextLine: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        xAdj = 0.0F;

        $stack17 = virtualinvoke anchor.<org.jfree.chart.ui.TextAnchor: boolean isHorizontalCenter()>();

        if $stack17 == 0 goto label1;

        $stack39 = virtualinvoke dim.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack40 = neg $stack39;

        $stack41 = (float) $stack40;

        xAdj = $stack41 / 2.0F;

        goto label2;

     label1:
        $stack18 = virtualinvoke anchor.<org.jfree.chart.ui.TextAnchor: boolean isRight()>();

        if $stack18 == 0 goto label2;

        $stack30 = virtualinvoke dim.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack31 = neg $stack30;

        xAdj = (float) $stack31;

     label2:
        x = anchorX + xAdj;

        yOffset = specialinvoke this.<org.jfree.chart.text.TextLine: float calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.ui.TextAnchor)>(g2, anchor);

        $stack20 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        iterator = interfaceinvoke $stack20.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack22 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>();

        if $stack22 == 0 goto label4;

        $stack23 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();

        fragment = (org.jfree.chart.text.TextFragment) $stack23;

        d = virtualinvoke fragment.<org.jfree.chart.text.TextFragment: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack26 = anchorY + yOffset;

        $stack25 = <org.jfree.chart.ui.TextAnchor: org.jfree.chart.ui.TextAnchor BASELINE_LEFT>;

        virtualinvoke fragment.<org.jfree.chart.text.TextFragment: void draw(java.awt.Graphics2D,float,float,org.jfree.chart.ui.TextAnchor,float,float,double)>(g2, x, $stack26, $stack25, rotateX, rotateY, angle);

        $stack27 = virtualinvoke d.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack28 = (float) $stack27;

        x = x + $stack28;

        goto label3;

     label4:
        return;
    }

    public org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)
    {
        org.jfree.chart.text.TextLine this;
        java.util.List $stack9;
        java.util.Iterator iterator;
        boolean $stack11;
        org.jfree.chart.ui.Size2D $stack12, dimension;
        java.lang.Object $stack13;
        org.jfree.chart.text.TextFragment fragment;
        java.awt.Graphics2D g2;
        double $stack15, $stack16, width, height;

        this := @this: org.jfree.chart.text.TextLine;

        g2 := @parameter0: java.awt.Graphics2D;

        width = 0.0;

        height = 0.0;

        $stack9 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        iterator = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack11 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label2;

        $stack13 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();

        fragment = (org.jfree.chart.text.TextFragment) $stack13;

        dimension = virtualinvoke fragment.<org.jfree.chart.text.TextFragment: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack15 = virtualinvoke dimension.<org.jfree.chart.ui.Size2D: double getWidth()>();

        width = width + $stack15;

        $stack16 = virtualinvoke dimension.<org.jfree.chart.ui.Size2D: double getHeight()>();

        height = staticinvoke <java.lang.Math: double max(double,double)>(height, $stack16);

        goto label1;

     label2:
        $stack12 = new org.jfree.chart.ui.Size2D;

        specialinvoke $stack12.<org.jfree.chart.ui.Size2D: void <init>(double,double)>(width, height);

        return $stack12;
    }

    public org.jfree.chart.text.TextFragment getFirstTextFragment()
    {
        org.jfree.chart.text.TextLine this;
        java.util.List $stack2, $stack4;
        int $stack3;
        java.lang.Object $stack5;
        org.jfree.chart.text.TextFragment result;

        this := @this: org.jfree.chart.text.TextLine;

        result = null;

        $stack2 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: int size()>();

        if $stack3 <= 0 goto label1;

        $stack4 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(0);

        result = (org.jfree.chart.text.TextFragment) $stack5;

     label1:
        return result;
    }

    public org.jfree.chart.text.TextFragment getLastTextFragment()
    {
        org.jfree.chart.text.TextLine this;
        java.util.List $stack2, $stack4, $stack5;
        int $stack3, $stack6, $stack7;
        java.lang.Object $stack8;
        org.jfree.chart.text.TextFragment result;

        this := @this: org.jfree.chart.text.TextLine;

        result = null;

        $stack2 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: int size()>();

        if $stack3 <= 0 goto label1;

        $stack5 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        $stack4 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        $stack6 = interfaceinvoke $stack4.<java.util.List: int size()>();

        $stack7 = $stack6 - 1;

        $stack8 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>($stack7);

        result = (org.jfree.chart.text.TextFragment) $stack8;

     label1:
        return result;
    }

    private float calculateBaselineOffset(java.awt.Graphics2D, org.jfree.chart.ui.TextAnchor)
    {
        org.jfree.chart.text.TextLine this;
        java.util.List $stack6;
        java.util.Iterator iterator;
        boolean $stack8;
        java.lang.Object $stack9;
        org.jfree.chart.text.TextFragment fragment;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.TextAnchor anchor;
        float $stack10, result;

        this := @this: org.jfree.chart.text.TextLine;

        g2 := @parameter0: java.awt.Graphics2D;

        anchor := @parameter1: org.jfree.chart.ui.TextAnchor;

        result = 0.0F;

        $stack6 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        iterator = interfaceinvoke $stack6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label2;

        $stack9 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();

        fragment = (org.jfree.chart.text.TextFragment) $stack9;

        $stack10 = virtualinvoke fragment.<org.jfree.chart.text.TextFragment: float calculateBaselineOffset(java.awt.Graphics2D,org.jfree.chart.ui.TextAnchor)>(g2, anchor);

        result = staticinvoke <java.lang.Math: float max(float,float)>(result, $stack10);

        goto label1;

     label2:
        return result;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.text.TextLine this, line;
        boolean $stack3, $stack6;
        java.util.List $stack4, $stack5;

        this := @this: org.jfree.chart.text.TextLine;

        obj := @parameter0: java.lang.Object;

        if obj != null goto label1;

        return 0;

     label1:
        if obj != this goto label2;

        return 1;

     label2:
        $stack3 = obj instanceof org.jfree.chart.text.TextLine;

        if $stack3 == 0 goto label3;

        line = (org.jfree.chart.text.TextLine) obj;

        $stack5 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        $stack4 = line.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: boolean equals(java.lang.Object)>($stack4);

        return $stack6;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.jfree.chart.text.TextLine this;
        java.util.List $stack1, $stack2;
        int $stack3;

        this := @this: org.jfree.chart.text.TextLine;

        $stack1 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        if $stack1 == null goto label1;

        $stack2 = this.<org.jfree.chart.text.TextLine: java.util.List fragments>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: int hashCode()>();

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.text.TextLine: long serialVersionUID> = 7100085690160465444L;

        return;
    }
}
