public class org.jfree.chart.imagemap.ImageMapUtils extends java.lang.Object
{

    public void <init>()
    {
        org.jfree.chart.imagemap.ImageMapUtils this;

        this := @this: org.jfree.chart.imagemap.ImageMapUtils;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeImageMap(java.io.PrintWriter, java.lang.String, org.jfree.chart.ChartRenderingInfo) throws java.io.IOException
    {
        java.io.PrintWriter writer;
        java.lang.String name;
        org.jfree.chart.ChartRenderingInfo info;
        org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator $stack3;
        org.jfree.chart.imagemap.StandardURLTagFragmentGenerator $stack4;

        writer := @parameter0: java.io.PrintWriter;

        name := @parameter1: java.lang.String;

        info := @parameter2: org.jfree.chart.ChartRenderingInfo;

        $stack3 = new org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator;

        specialinvoke $stack3.<org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator: void <init>()>();

        $stack4 = new org.jfree.chart.imagemap.StandardURLTagFragmentGenerator;

        specialinvoke $stack4.<org.jfree.chart.imagemap.StandardURLTagFragmentGenerator: void <init>()>();

        staticinvoke <org.jfree.chart.imagemap.ImageMapUtils: void writeImageMap(java.io.PrintWriter,java.lang.String,org.jfree.chart.ChartRenderingInfo,org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)>(writer, name, info, $stack3, $stack4);

        return;
    }

    public static void writeImageMap(java.io.PrintWriter, java.lang.String, org.jfree.chart.ChartRenderingInfo, boolean) throws java.io.IOException
    {
        boolean useOverLibForToolTips;
        org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator $stack5;
        java.io.PrintWriter writer;
        java.lang.String name;
        org.jfree.chart.ChartRenderingInfo info;
        org.jfree.chart.imagemap.StandardURLTagFragmentGenerator $stack6;
        org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator $stack7;
        org.jfree.chart.imagemap.ToolTipTagFragmentGenerator toolTipTagFragmentGenerator;

        writer := @parameter0: java.io.PrintWriter;

        name := @parameter1: java.lang.String;

        info := @parameter2: org.jfree.chart.ChartRenderingInfo;

        useOverLibForToolTips := @parameter3: boolean;

        if useOverLibForToolTips == 0 goto label1;

        $stack7 = new org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator;

        specialinvoke $stack7.<org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator: void <init>()>();

        toolTipTagFragmentGenerator = $stack7;

        goto label2;

     label1:
        $stack5 = new org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator;

        specialinvoke $stack5.<org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator: void <init>()>();

        toolTipTagFragmentGenerator = $stack5;

     label2:
        $stack6 = new org.jfree.chart.imagemap.StandardURLTagFragmentGenerator;

        specialinvoke $stack6.<org.jfree.chart.imagemap.StandardURLTagFragmentGenerator: void <init>()>();

        staticinvoke <org.jfree.chart.imagemap.ImageMapUtils: void writeImageMap(java.io.PrintWriter,java.lang.String,org.jfree.chart.ChartRenderingInfo,org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)>(writer, name, info, toolTipTagFragmentGenerator, $stack6);

        return;
    }

    public static void writeImageMap(java.io.PrintWriter, java.lang.String, org.jfree.chart.ChartRenderingInfo, org.jfree.chart.imagemap.ToolTipTagFragmentGenerator, org.jfree.chart.imagemap.URLTagFragmentGenerator) throws java.io.IOException
    {
        java.io.PrintWriter writer;
        java.lang.String name, $stack5;
        org.jfree.chart.ChartRenderingInfo info;
        org.jfree.chart.imagemap.ToolTipTagFragmentGenerator toolTipTagFragmentGenerator;
        org.jfree.chart.imagemap.URLTagFragmentGenerator urlTagFragmentGenerator;

        writer := @parameter0: java.io.PrintWriter;

        name := @parameter1: java.lang.String;

        info := @parameter2: org.jfree.chart.ChartRenderingInfo;

        toolTipTagFragmentGenerator := @parameter3: org.jfree.chart.imagemap.ToolTipTagFragmentGenerator;

        urlTagFragmentGenerator := @parameter4: org.jfree.chart.imagemap.URLTagFragmentGenerator;

        $stack5 = staticinvoke <org.jfree.chart.imagemap.ImageMapUtils: java.lang.String getImageMap(java.lang.String,org.jfree.chart.ChartRenderingInfo,org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)>(name, info, toolTipTagFragmentGenerator, urlTagFragmentGenerator);

        virtualinvoke writer.<java.io.PrintWriter: void println(java.lang.String)>($stack5);

        return;
    }

    public static java.lang.String getImageMap(java.lang.String, org.jfree.chart.ChartRenderingInfo)
    {
        java.lang.String name, $stack4;
        org.jfree.chart.ChartRenderingInfo info;
        org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator $stack2;
        org.jfree.chart.imagemap.StandardURLTagFragmentGenerator $stack3;

        name := @parameter0: java.lang.String;

        info := @parameter1: org.jfree.chart.ChartRenderingInfo;

        $stack2 = new org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator;

        specialinvoke $stack2.<org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator: void <init>()>();

        $stack3 = new org.jfree.chart.imagemap.StandardURLTagFragmentGenerator;

        specialinvoke $stack3.<org.jfree.chart.imagemap.StandardURLTagFragmentGenerator: void <init>()>();

        $stack4 = staticinvoke <org.jfree.chart.imagemap.ImageMapUtils: java.lang.String getImageMap(java.lang.String,org.jfree.chart.ChartRenderingInfo,org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)>(name, info, $stack2, $stack3);

        return $stack4;
    }

    public static java.lang.String getImageMap(java.lang.String, org.jfree.chart.ChartRenderingInfo, org.jfree.chart.imagemap.ToolTipTagFragmentGenerator, org.jfree.chart.imagemap.URLTagFragmentGenerator)
    {
        java.lang.StringBuilder $stack10, $stack11, $stack14, $stack16;
        java.lang.String name, $stack12, $stack15, $stack18, $stack22, $stack28, area, $stack33, $stack35;
        org.jfree.chart.ChartRenderingInfo info;
        org.jfree.chart.entity.EntityCollection entities;
        int count, $stack30, i;
        org.jfree.chart.entity.ChartEntity entity;
        org.jfree.chart.imagemap.ToolTipTagFragmentGenerator toolTipTagFragmentGenerator;
        org.jfree.chart.imagemap.URLTagFragmentGenerator urlTagFragmentGenerator;

        name := @parameter0: java.lang.String;

        info := @parameter1: org.jfree.chart.ChartRenderingInfo;

        toolTipTagFragmentGenerator := @parameter2: org.jfree.chart.imagemap.ToolTipTagFragmentGenerator;

        urlTagFragmentGenerator := @parameter3: org.jfree.chart.imagemap.URLTagFragmentGenerator;

        $stack10 = new java.lang.StringBuilder;

        specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<map id=\"");

        $stack12 = staticinvoke <org.jfree.chart.imagemap.ImageMapUtils: java.lang.String htmlEscape(java.lang.String)>(name);

        virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" name=\"");

        $stack15 = staticinvoke <org.jfree.chart.imagemap.ImageMapUtils: java.lang.String htmlEscape(java.lang.String)>(name);

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $stack18 = staticinvoke <org.jfree.chart.util.StringUtils: java.lang.String getLineSeparator()>();

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        entities = virtualinvoke info.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

        if entities == null goto label4;

        count = interfaceinvoke entities.<org.jfree.chart.entity.EntityCollection: int getEntityCount()>();

        i = count - 1;

     label1:
        if i < 0 goto label4;

        entity = interfaceinvoke entities.<org.jfree.chart.entity.EntityCollection: org.jfree.chart.entity.ChartEntity getEntity(int)>(i);

        $stack28 = virtualinvoke entity.<org.jfree.chart.entity.ChartEntity: java.lang.String getToolTipText()>();

        if $stack28 != null goto label2;

        $stack35 = virtualinvoke entity.<org.jfree.chart.entity.ChartEntity: java.lang.String getURLText()>();

        if $stack35 == null goto label3;

     label2:
        area = virtualinvoke entity.<org.jfree.chart.entity.ChartEntity: java.lang.String getImageMapAreaTag(org.jfree.chart.imagemap.ToolTipTagFragmentGenerator,org.jfree.chart.imagemap.URLTagFragmentGenerator)>(toolTipTagFragmentGenerator, urlTagFragmentGenerator);

        $stack30 = virtualinvoke area.<java.lang.String: int length()>();

        if $stack30 <= 0 goto label3;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(area);

        $stack33 = staticinvoke <org.jfree.chart.util.StringUtils: java.lang.String getLineSeparator()>();

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33);

     label3:
        i = i + -1;

        goto label1;

     label4:
        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</map>");

        $stack22 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack22;
    }

    public static java.lang.String htmlEscape(java.lang.String)
    {
        java.lang.String input, $stack7;
        java.lang.StringBuilder $stack5;
        int length, i;
        char c;

        input := @parameter0: java.lang.String;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(input, "input");

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        length = virtualinvoke input.<java.lang.String: int length()>();

        i = 0;

     label1:
        if i >= length goto label9;

        c = virtualinvoke input.<java.lang.String: char charAt(int)>(i);

        if c != 38 goto label2;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&amp;");

        goto label8;

     label2:
        if c != 34 goto label3;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&quot;");

        goto label8;

     label3:
        if c != 60 goto label4;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lt;");

        goto label8;

     label4:
        if c != 62 goto label5;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&gt;");

        goto label8;

     label5:
        if c != 39 goto label6;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#39;");

        goto label8;

     label6:
        if c != 92 goto label7;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&#092;");

        goto label8;

     label7:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c);

     label8:
        i = i + 1;

        goto label1;

     label9:
        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    public static java.lang.String javascriptEscape(java.lang.String)
    {
        java.lang.String input, $stack7;
        java.lang.StringBuilder $stack5;
        int length, i;
        char c;

        input := @parameter0: java.lang.String;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(input, "input");

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        length = virtualinvoke input.<java.lang.String: int length()>();

        i = 0;

     label1:
        if i >= length goto label6;

        c = virtualinvoke input.<java.lang.String: char charAt(int)>(i);

        if c != 34 goto label2;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\"");

        goto label5;

     label2:
        if c != 39 goto label3;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\'");

        goto label5;

     label3:
        if c != 92 goto label4;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");

        goto label5;

     label4:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c);

     label5:
        i = i + 1;

        goto label1;

     label6:
        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }
}
