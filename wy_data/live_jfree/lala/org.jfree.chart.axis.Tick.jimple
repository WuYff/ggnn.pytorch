public abstract class org.jfree.chart.axis.Tick extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;
    private java.lang.String text;
    private org.jfree.chart.ui.TextAnchor textAnchor;
    private org.jfree.chart.ui.TextAnchor rotationAnchor;
    private double angle;

    public void <init>(java.lang.String, org.jfree.chart.ui.TextAnchor, org.jfree.chart.ui.TextAnchor, double)
    {
        org.jfree.chart.axis.Tick this;
        org.jfree.chart.ui.TextAnchor textAnchor, rotationAnchor;
        java.lang.String text;
        double angle;

        this := @this: org.jfree.chart.axis.Tick;

        text := @parameter0: java.lang.String;

        textAnchor := @parameter1: org.jfree.chart.ui.TextAnchor;

        rotationAnchor := @parameter2: org.jfree.chart.ui.TextAnchor;

        angle := @parameter3: double;

        specialinvoke this.<java.lang.Object: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(textAnchor, "textAnchor");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(rotationAnchor, "rotationAnchor");

        this.<org.jfree.chart.axis.Tick: java.lang.String text> = text;

        this.<org.jfree.chart.axis.Tick: org.jfree.chart.ui.TextAnchor textAnchor> = textAnchor;

        this.<org.jfree.chart.axis.Tick: org.jfree.chart.ui.TextAnchor rotationAnchor> = rotationAnchor;

        this.<org.jfree.chart.axis.Tick: double angle> = angle;

        return;
    }

    public java.lang.String getText()
    {
        org.jfree.chart.axis.Tick this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.axis.Tick;

        $stack1 = this.<org.jfree.chart.axis.Tick: java.lang.String text>;

        return $stack1;
    }

    public org.jfree.chart.ui.TextAnchor getTextAnchor()
    {
        org.jfree.chart.axis.Tick this;
        org.jfree.chart.ui.TextAnchor $stack1;

        this := @this: org.jfree.chart.axis.Tick;

        $stack1 = this.<org.jfree.chart.axis.Tick: org.jfree.chart.ui.TextAnchor textAnchor>;

        return $stack1;
    }

    public org.jfree.chart.ui.TextAnchor getRotationAnchor()
    {
        org.jfree.chart.axis.Tick this;
        org.jfree.chart.ui.TextAnchor $stack1;

        this := @this: org.jfree.chart.axis.Tick;

        $stack1 = this.<org.jfree.chart.axis.Tick: org.jfree.chart.ui.TextAnchor rotationAnchor>;

        return $stack1;
    }

    public double getAngle()
    {
        org.jfree.chart.axis.Tick this;
        double $stack1;

        this := @this: org.jfree.chart.axis.Tick;

        $stack1 = this.<org.jfree.chart.axis.Tick: double angle>;

        return $stack1;
    }

    public boolean equals(java.lang.Object)
    {
        org.jfree.chart.axis.Tick this, t;
        java.lang.Object obj;
        boolean $stack3, $stack6, $stack9, $stack12;
        java.lang.String $stack4, $stack5;
        org.jfree.chart.ui.TextAnchor $stack7, $stack8, $stack10, $stack11;
        double $stack13, $stack14;
        byte $stack15;

        this := @this: org.jfree.chart.axis.Tick;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.axis.Tick;

        if $stack3 == 0 goto label6;

        t = (org.jfree.chart.axis.Tick) obj;

        $stack5 = this.<org.jfree.chart.axis.Tick: java.lang.String text>;

        $stack4 = t.<org.jfree.chart.axis.Tick: java.lang.String text>;

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        if $stack6 != 0 goto label2;

        return 0;

     label2:
        $stack8 = this.<org.jfree.chart.axis.Tick: org.jfree.chart.ui.TextAnchor textAnchor>;

        $stack7 = t.<org.jfree.chart.axis.Tick: org.jfree.chart.ui.TextAnchor textAnchor>;

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        if $stack9 != 0 goto label3;

        return 0;

     label3:
        $stack11 = this.<org.jfree.chart.axis.Tick: org.jfree.chart.ui.TextAnchor rotationAnchor>;

        $stack10 = t.<org.jfree.chart.axis.Tick: org.jfree.chart.ui.TextAnchor rotationAnchor>;

        $stack12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack11, $stack10);

        if $stack12 != 0 goto label4;

        return 0;

     label4:
        $stack14 = this.<org.jfree.chart.axis.Tick: double angle>;

        $stack13 = t.<org.jfree.chart.axis.Tick: double angle>;

        $stack15 = $stack14 cmpl $stack13;

        if $stack15 == 0 goto label5;

        return 0;

     label5:
        return 1;

     label6:
        return 0;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.axis.Tick this, clone;
        java.lang.Object $stack2;

        this := @this: org.jfree.chart.axis.Tick;

        $stack2 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        clone = (org.jfree.chart.axis.Tick) $stack2;

        return clone;
    }

    public java.lang.String toString()
    {
        org.jfree.chart.axis.Tick this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.axis.Tick;

        $stack1 = this.<org.jfree.chart.axis.Tick: java.lang.String text>;

        return $stack1;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.axis.Tick: long serialVersionUID> = 6668230383875149773L;

        return;
    }
}
