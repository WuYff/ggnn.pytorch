public class org.jfree.chart.encoders.SunPNGEncoderAdapter extends java.lang.Object implements org.jfree.chart.encoders.ImageEncoder
{

    public void <init>()
    {
        org.jfree.chart.encoders.SunPNGEncoderAdapter this;

        this := @this: org.jfree.chart.encoders.SunPNGEncoderAdapter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public float getQuality()
    {
        org.jfree.chart.encoders.SunPNGEncoderAdapter this;

        this := @this: org.jfree.chart.encoders.SunPNGEncoderAdapter;

        return 0.0F;
    }

    public void setQuality(float)
    {
        org.jfree.chart.encoders.SunPNGEncoderAdapter this;
        float quality;

        this := @this: org.jfree.chart.encoders.SunPNGEncoderAdapter;

        quality := @parameter0: float;

        return;
    }

    public boolean isEncodingAlpha()
    {
        org.jfree.chart.encoders.SunPNGEncoderAdapter this;

        this := @this: org.jfree.chart.encoders.SunPNGEncoderAdapter;

        return 0;
    }

    public void setEncodingAlpha(boolean)
    {
        org.jfree.chart.encoders.SunPNGEncoderAdapter this;
        boolean encodingAlpha;

        this := @this: org.jfree.chart.encoders.SunPNGEncoderAdapter;

        encodingAlpha := @parameter0: boolean;

        return;
    }

    public byte[] encode(java.awt.image.BufferedImage) throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $stack3;
        org.jfree.chart.encoders.SunPNGEncoderAdapter this;
        java.awt.image.BufferedImage bufferedImage;
        byte[] $stack4;

        this := @this: org.jfree.chart.encoders.SunPNGEncoderAdapter;

        bufferedImage := @parameter0: java.awt.image.BufferedImage;

        $stack3 = new java.io.ByteArrayOutputStream;

        specialinvoke $stack3.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke this.<org.jfree.chart.encoders.SunPNGEncoderAdapter: void encode(java.awt.image.BufferedImage,java.io.OutputStream)>(bufferedImage, $stack3);

        $stack4 = virtualinvoke $stack3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $stack4;
    }

    public void encode(java.awt.image.BufferedImage, java.io.OutputStream) throws java.io.IOException
    {
        java.awt.image.BufferedImage bufferedImage;
        java.io.OutputStream outputStream;
        org.jfree.chart.encoders.SunPNGEncoderAdapter this;

        this := @this: org.jfree.chart.encoders.SunPNGEncoderAdapter;

        bufferedImage := @parameter0: java.awt.image.BufferedImage;

        outputStream := @parameter1: java.io.OutputStream;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(bufferedImage, "bufferedImage");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(outputStream, "outputStream");

        staticinvoke <javax.imageio.ImageIO: boolean write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(bufferedImage, "png", outputStream);

        return;
    }
}
