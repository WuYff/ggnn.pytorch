public class org.jfree.chart.title.CompositeTitle extends org.jfree.chart.title.Title implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.awt.Paint backgroundPaint;
    private org.jfree.chart.block.BlockContainer container;

    public void <init>()
    {
        org.jfree.chart.title.CompositeTitle this;
        org.jfree.chart.block.BlockContainer $stack1;
        org.jfree.chart.block.BorderArrangement $stack2;

        this := @this: org.jfree.chart.title.CompositeTitle;

        $stack1 = new org.jfree.chart.block.BlockContainer;

        $stack2 = new org.jfree.chart.block.BorderArrangement;

        specialinvoke $stack2.<org.jfree.chart.block.BorderArrangement: void <init>()>();

        specialinvoke $stack1.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>($stack2);

        specialinvoke this.<org.jfree.chart.title.CompositeTitle: void <init>(org.jfree.chart.block.BlockContainer)>($stack1);

        return;
    }

    public void <init>(org.jfree.chart.block.BlockContainer)
    {
        org.jfree.chart.title.CompositeTitle this;
        org.jfree.chart.block.BlockContainer container;

        this := @this: org.jfree.chart.title.CompositeTitle;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        specialinvoke this.<org.jfree.chart.title.Title: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(container, "container");

        this.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.BlockContainer container> = container;

        this.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint> = null;

        return;
    }

    public java.awt.Paint getBackgroundPaint()
    {
        org.jfree.chart.title.CompositeTitle this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.title.CompositeTitle;

        $stack1 = this.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint>;

        return $stack1;
    }

    public void setBackgroundPaint(java.awt.Paint)
    {
        org.jfree.chart.title.CompositeTitle this;
        java.awt.Paint paint;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.CompositeTitle;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint> = paint;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.CompositeTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public org.jfree.chart.block.BlockContainer getContainer()
    {
        org.jfree.chart.title.CompositeTitle this;
        org.jfree.chart.block.BlockContainer $stack1;

        this := @this: org.jfree.chart.title.CompositeTitle;

        $stack1 = this.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.BlockContainer container>;

        return $stack1;
    }

    public void setTitleContainer(org.jfree.chart.block.BlockContainer)
    {
        org.jfree.chart.block.BlockContainer container;
        org.jfree.chart.title.CompositeTitle this;

        this := @this: org.jfree.chart.title.CompositeTitle;

        container := @parameter0: org.jfree.chart.block.BlockContainer;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(container, "container");

        this.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.BlockContainer container> = container;

        return;
    }

    public org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.title.CompositeTitle this;
        org.jfree.chart.block.RectangleConstraint constraint, contentConstraint;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.BlockContainer $stack6;
        org.jfree.chart.ui.Size2D contentSize, $stack8;
        double $stack9, $stack10, $stack11, $stack12;

        this := @this: org.jfree.chart.title.CompositeTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        constraint := @parameter1: org.jfree.chart.block.RectangleConstraint;

        contentConstraint = virtualinvoke this.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(constraint);

        $stack6 = this.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.BlockContainer container>;

        contentSize = virtualinvoke $stack6.<org.jfree.chart.block.BlockContainer: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, contentConstraint);

        $stack8 = new org.jfree.chart.ui.Size2D;

        $stack9 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack10 = virtualinvoke this.<org.jfree.chart.title.CompositeTitle: double calculateTotalWidth(double)>($stack9);

        $stack11 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack12 = virtualinvoke this.<org.jfree.chart.title.CompositeTitle: double calculateTotalHeight(double)>($stack11);

        specialinvoke $stack8.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack10, $stack12);

        return $stack8;
    }

    public void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.title.CompositeTitle this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.title.CompositeTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        virtualinvoke this.<org.jfree.chart.title.CompositeTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(g2, area, null);

        return;
    }

    public java.lang.Object draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.lang.Object)
    {
        org.jfree.chart.title.CompositeTitle this;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack6, $stack10;
        java.lang.Object params, $stack9;
        org.jfree.chart.block.BlockContainer $stack8;
        java.awt.geom.Rectangle2D area, area#2;

        this := @this: org.jfree.chart.title.CompositeTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        params := @parameter2: java.lang.Object;

        area#2 = virtualinvoke this.<org.jfree.chart.title.CompositeTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(area);

        virtualinvoke this.<org.jfree.chart.title.CompositeTitle: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area#2);

        area#2 = virtualinvoke this.<org.jfree.chart.title.CompositeTitle: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(area#2);

        $stack6 = this.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint>;

        if $stack6 == null goto label1;

        $stack10 = this.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack10);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(area#2);

     label1:
        area#2 = virtualinvoke this.<org.jfree.chart.title.CompositeTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(area#2);

        $stack8 = this.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.BlockContainer container>;

        $stack9 = virtualinvoke $stack8.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(g2, area#2, params);

        return $stack9;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.title.CompositeTitle this, that;
        boolean $stack3, $stack6, $stack9, $stack10;
        org.jfree.chart.block.BlockContainer $stack4, $stack5;
        java.awt.Paint $stack7, $stack8;

        this := @this: org.jfree.chart.title.CompositeTitle;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.title.CompositeTitle;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.title.CompositeTitle) obj;

        $stack5 = this.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.BlockContainer container>;

        $stack4 = that.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.BlockContainer container>;

        $stack6 = virtualinvoke $stack5.<org.jfree.chart.block.BlockContainer: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint>;

        $stack7 = that.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint>;

        $stack9 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack10 = specialinvoke this.<org.jfree.chart.title.Title: boolean equals(java.lang.Object)>(obj);

        return $stack10;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.title.CompositeTitle this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.title.CompositeTitle;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.title.CompositeTitle this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.title.CompositeTitle;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.CompositeTitle: java.awt.Paint backgroundPaint> = $stack2;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.title.CompositeTitle: long serialVersionUID> = -6770854036232562290L;

        return;
    }
}
