public class org.jfree.data.xy.DefaultXYDataset extends org.jfree.data.xy.AbstractXYDataset implements org.jfree.data.xy.XYDataset, org.jfree.chart.util.PublicCloneable
{
    private java.util.List seriesKeys;
    private java.util.List seriesList;

    public void <init>()
    {
        org.jfree.data.xy.DefaultXYDataset this;
        java.util.ArrayList $stack1, $stack2;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        specialinvoke this.<org.jfree.data.xy.AbstractXYDataset: void <init>()>();

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys> = $stack1;

        $stack2 = new java.util.ArrayList;

        specialinvoke $stack2.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList> = $stack2;

        return;
    }

    public int getSeriesCount()
    {
        org.jfree.data.xy.DefaultXYDataset this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        $stack1 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public java.lang.Comparable getSeriesKey(int)
    {
        int series, $stack5, $stack6;
        org.jfree.data.xy.DefaultXYDataset this;
        java.util.List $stack2, $stack7;
        java.lang.Object $stack8;
        java.lang.Comparable $stack9;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        series := @parameter0: int;

        $stack2 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        $stack5 = interfaceinvoke $stack2.<java.util.List: int size()>();

        $stack6 = $stack5 - 1;

        staticinvoke <org.jfree.chart.util.Args: void requireInRange(int,java.lang.String,int,int)>(series, "series", 0, $stack6);

        $stack7 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(series);

        $stack9 = (java.lang.Comparable) $stack8;

        return $stack9;
    }

    public int indexOf(java.lang.Comparable)
    {
        org.jfree.data.xy.DefaultXYDataset this;
        java.lang.Comparable seriesKey;
        java.util.List $stack2;
        int $stack3;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        seriesKey := @parameter0: java.lang.Comparable;

        $stack2 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: int indexOf(java.lang.Object)>(seriesKey);

        return $stack3;
    }

    public org.jfree.data.DomainOrder getDomainOrder()
    {
        org.jfree.data.DomainOrder $stack1;
        org.jfree.data.xy.DefaultXYDataset this;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        $stack1 = <org.jfree.data.DomainOrder: org.jfree.data.DomainOrder NONE>;

        return $stack1;
    }

    public int getItemCount(int)
    {
        int series, $stack4, $stack9;
        java.lang.IllegalArgumentException $stack3;
        org.jfree.data.xy.DefaultXYDataset this;
        java.util.List $stack5;
        java.lang.Object $stack6;
        double[][] $stack7, seriesArray;
        double[] $stack8;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        series := @parameter0: int;

        if series < 0 goto label1;

        $stack4 = virtualinvoke this.<org.jfree.data.xy.DefaultXYDataset: int getSeriesCount()>();

        if series < $stack4 goto label2;

     label1:
        $stack3 = new java.lang.IllegalArgumentException;

        specialinvoke $stack3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Series index out of bounds");

        throw $stack3;

     label2:
        $stack5 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>(series);

        $stack7 = (double[][]) $stack6;

        seriesArray = (double[][]) $stack7;

        $stack8 = seriesArray[0];

        $stack9 = lengthof $stack8;

        return $stack9;
    }

    public double getXValue(int, int)
    {
        org.jfree.data.xy.DefaultXYDataset this;
        int series, item;
        java.util.List $stack4;
        java.lang.Object $stack5;
        double[][] $stack6, seriesData;
        double[] $stack7;
        double $stack8;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        $stack6 = (double[][]) $stack5;

        seriesData = (double[][]) $stack6;

        $stack7 = seriesData[0];

        $stack8 = $stack7[item];

        return $stack8;
    }

    public java.lang.Number getX(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.xy.DefaultXYDataset this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.xy.DefaultXYDataset: double getXValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public double getYValue(int, int)
    {
        org.jfree.data.xy.DefaultXYDataset this;
        int series, item;
        java.util.List $stack4;
        java.lang.Object $stack5;
        double[][] $stack6, seriesData;
        double[] $stack7;
        double $stack8;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        $stack6 = (double[][]) $stack5;

        seriesData = (double[][]) $stack6;

        $stack7 = seriesData[1];

        $stack8 = $stack7[item];

        return $stack8;
    }

    public java.lang.Number getY(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.xy.DefaultXYDataset this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.xy.DefaultXYDataset: double getYValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public void addSeries(java.lang.Comparable, double[][])
    {
        java.lang.Comparable seriesKey;
        double[][] data;
        int $stack4, $stack7, $stack8, seriesIndex;
        double[] $stack5, $stack6;
        org.jfree.data.xy.DefaultXYDataset this;
        java.util.List $stack10, $stack12, $stack14, $stack16;
        org.jfree.data.general.DatasetChangeEvent $stack13;
        java.lang.IllegalArgumentException $stack21, $stack22, $stack23, $stack24;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        seriesKey := @parameter0: java.lang.Comparable;

        data := @parameter1: double[][];

        if seriesKey != null goto label1;

        $stack24 = new java.lang.IllegalArgumentException;

        specialinvoke $stack24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'seriesKey\' cannot be null.");

        throw $stack24;

     label1:
        if data != null goto label2;

        $stack23 = new java.lang.IllegalArgumentException;

        specialinvoke $stack23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'data\' is null.");

        throw $stack23;

     label2:
        $stack4 = lengthof data;

        if $stack4 == 2 goto label3;

        $stack22 = new java.lang.IllegalArgumentException;

        specialinvoke $stack22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'data\' array must have length == 2.");

        throw $stack22;

     label3:
        $stack5 = data[0];

        $stack8 = lengthof $stack5;

        $stack6 = data[1];

        $stack7 = lengthof $stack6;

        if $stack8 == $stack7 goto label4;

        $stack21 = new java.lang.IllegalArgumentException;

        specialinvoke $stack21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'data\' array must contain two arrays with equal length.");

        throw $stack21;

     label4:
        seriesIndex = virtualinvoke this.<org.jfree.data.xy.DefaultXYDataset: int indexOf(java.lang.Comparable)>(seriesKey);

        if seriesIndex != -1 goto label5;

        $stack14 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        interfaceinvoke $stack14.<java.util.List: boolean add(java.lang.Object)>(seriesKey);

        $stack16 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        interfaceinvoke $stack16.<java.util.List: boolean add(java.lang.Object)>(data);

        goto label6;

     label5:
        $stack10 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        interfaceinvoke $stack10.<java.util.List: java.lang.Object remove(int)>(seriesIndex);

        $stack12 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        interfaceinvoke $stack12.<java.util.List: void add(int,java.lang.Object)>(seriesIndex, data);

     label6:
        $stack13 = new org.jfree.data.general.DatasetChangeEvent;

        specialinvoke $stack13.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(this, this);

        virtualinvoke this.<org.jfree.data.xy.DefaultXYDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($stack13);

        return;
    }

    public void removeSeries(java.lang.Comparable)
    {
        org.jfree.data.xy.DefaultXYDataset this;
        java.lang.Comparable seriesKey;
        int seriesIndex;
        java.util.List $stack4, $stack6;
        org.jfree.data.general.DatasetChangeEvent $stack8;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        seriesKey := @parameter0: java.lang.Comparable;

        seriesIndex = virtualinvoke this.<org.jfree.data.xy.DefaultXYDataset: int indexOf(java.lang.Comparable)>(seriesKey);

        if seriesIndex < 0 goto label1;

        $stack4 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        interfaceinvoke $stack4.<java.util.List: java.lang.Object remove(int)>(seriesIndex);

        $stack6 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        interfaceinvoke $stack6.<java.util.List: java.lang.Object remove(int)>(seriesIndex);

        $stack8 = new org.jfree.data.general.DatasetChangeEvent;

        specialinvoke $stack8.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(this, this);

        virtualinvoke this.<org.jfree.data.xy.DefaultXYDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($stack8);

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj, $stack17, $stack20;
        org.jfree.data.xy.DefaultXYDataset this, that;
        boolean $stack10, $stack13, $stack22, $stack23;
        java.util.List $stack11, $stack12, $stack14, $stack16, $stack19;
        int $stack15, i;
        double[][] $stack18, d1, $stack21, d2;
        double[] d1x, d2x, d1y, d2y;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack10 = obj instanceof org.jfree.data.xy.DefaultXYDataset;

        if $stack10 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.data.xy.DefaultXYDataset) obj;

        $stack12 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        $stack11 = that.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        $stack13 = interfaceinvoke $stack12.<java.util.List: boolean equals(java.lang.Object)>($stack11);

        if $stack13 != 0 goto label3;

        return 0;

     label3:
        i = 0;

     label4:
        $stack14 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack15 = interfaceinvoke $stack14.<java.util.List: int size()>();

        if i >= $stack15 goto label7;

        $stack16 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack17 = interfaceinvoke $stack16.<java.util.List: java.lang.Object get(int)>(i);

        $stack18 = (double[][]) $stack17;

        d1 = (double[][]) $stack18;

        $stack19 = that.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack20 = interfaceinvoke $stack19.<java.util.List: java.lang.Object get(int)>(i);

        $stack21 = (double[][]) $stack20;

        d2 = (double[][]) $stack21;

        d1x = d1[0];

        d2x = d2[0];

        $stack22 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(d1x, d2x);

        if $stack22 != 0 goto label5;

        return 0;

     label5:
        d1y = d1[1];

        d2y = d2[1];

        $stack23 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(d1y, d2y);

        if $stack23 != 0 goto label6;

        return 0;

     label6:
        i = i + 1;

        goto label4;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.xy.DefaultXYDataset this;
        java.util.List $stack2, $stack4;
        int $stack5, $stack6, result;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        $stack2 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        result = interfaceinvoke $stack2.<java.util.List: int hashCode()>();

        $stack5 = 29 * result;

        $stack4 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack6 = interfaceinvoke $stack4.<java.util.List: int hashCode()>();

        result = $stack5 + $stack6;

        return result;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.data.xy.DefaultXYDataset this, clone;
        java.lang.Object $stack8, $stack17;
        java.util.ArrayList $stack9, $stack11;
        java.util.List $stack10, $stack12, $stack14, $stack16, $stack24;
        int $stack13, $stack15, $stack19, $stack20, $stack21, $stack22, i;
        double[][] $stack18, data, $stack23;
        double[] x, y, xx, yy;

        this := @this: org.jfree.data.xy.DefaultXYDataset;

        $stack8 = specialinvoke this.<org.jfree.data.xy.AbstractXYDataset: java.lang.Object clone()>();

        clone = (org.jfree.data.xy.DefaultXYDataset) $stack8;

        $stack9 = new java.util.ArrayList;

        $stack10 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys>;

        specialinvoke $stack9.<java.util.ArrayList: void <init>(java.util.Collection)>($stack10);

        clone.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesKeys> = $stack9;

        $stack11 = new java.util.ArrayList;

        $stack12 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack13 = interfaceinvoke $stack12.<java.util.List: int size()>();

        specialinvoke $stack11.<java.util.ArrayList: void <init>(int)>($stack13);

        clone.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList> = $stack11;

        i = 0;

     label1:
        $stack14 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack15 = interfaceinvoke $stack14.<java.util.List: int size()>();

        if i >= $stack15 goto label2;

        $stack16 = this.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack17 = interfaceinvoke $stack16.<java.util.List: java.lang.Object get(int)>(i);

        $stack18 = (double[][]) $stack17;

        data = (double[][]) $stack18;

        x = data[0];

        y = data[1];

        $stack19 = lengthof x;

        xx = newarray (double)[$stack19];

        $stack20 = lengthof y;

        yy = newarray (double)[$stack20];

        $stack21 = lengthof x;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(x, 0, xx, 0, $stack21);

        $stack22 = lengthof y;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(y, 0, yy, 0, $stack22);

        $stack24 = clone.<org.jfree.data.xy.DefaultXYDataset: java.util.List seriesList>;

        $stack23 = newarray (double[])[2];

        $stack23[0] = xx;

        $stack23[1] = yy;

        interfaceinvoke $stack24.<java.util.List: void add(int,java.lang.Object)>(i, $stack23);

        i = i + 1;

        goto label1;

     label2:
        return clone;
    }
}
