public abstract class org.jfree.data.xy.AbstractXYDataset extends org.jfree.data.general.AbstractSeriesDataset implements org.jfree.data.xy.XYDataset
{

    public void <init>()
    {
        org.jfree.data.xy.AbstractXYDataset this;

        this := @this: org.jfree.data.xy.AbstractXYDataset;

        specialinvoke this.<org.jfree.data.general.AbstractSeriesDataset: void <init>()>();

        return;
    }

    public org.jfree.data.DomainOrder getDomainOrder()
    {
        org.jfree.data.DomainOrder $stack1;
        org.jfree.data.xy.AbstractXYDataset this;

        this := @this: org.jfree.data.xy.AbstractXYDataset;

        $stack1 = <org.jfree.data.DomainOrder: org.jfree.data.DomainOrder NONE>;

        return $stack1;
    }

    public double getXValue(int, int)
    {
        org.jfree.data.xy.AbstractXYDataset this;
        int series, item;
        java.lang.Number x;
        double result;

        this := @this: org.jfree.data.xy.AbstractXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        result = #NaN;

        x = virtualinvoke this.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getX(int,int)>(series, item);

        if x == null goto label1;

        result = virtualinvoke x.<java.lang.Number: double doubleValue()>();

     label1:
        return result;
    }

    public double getYValue(int, int)
    {
        org.jfree.data.xy.AbstractXYDataset this;
        int series, item;
        java.lang.Number y;
        double result;

        this := @this: org.jfree.data.xy.AbstractXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        result = #NaN;

        y = virtualinvoke this.<org.jfree.data.xy.AbstractXYDataset: java.lang.Number getY(int,int)>(series, item);

        if y == null goto label1;

        result = virtualinvoke y.<java.lang.Number: double doubleValue()>();

     label1:
        return result;
    }
}
