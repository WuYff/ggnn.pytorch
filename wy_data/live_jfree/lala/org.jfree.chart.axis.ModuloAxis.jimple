public class org.jfree.chart.axis.ModuloAxis extends org.jfree.chart.axis.NumberAxis
{
    private org.jfree.data.Range fixedRange;
    private double displayStart;
    private double displayEnd;

    public void <init>(java.lang.String, org.jfree.data.Range)
    {
        org.jfree.chart.axis.ModuloAxis this;
        java.lang.String label;
        org.jfree.data.Range fixedRange;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        label := @parameter0: java.lang.String;

        fixedRange := @parameter1: org.jfree.data.Range;

        specialinvoke this.<org.jfree.chart.axis.NumberAxis: void <init>(java.lang.String)>(label);

        this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange> = fixedRange;

        this.<org.jfree.chart.axis.ModuloAxis: double displayStart> = 270.0;

        this.<org.jfree.chart.axis.ModuloAxis: double displayEnd> = 90.0;

        return;
    }

    public double getDisplayStart()
    {
        org.jfree.chart.axis.ModuloAxis this;
        double $stack1;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        $stack1 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        return $stack1;
    }

    public double getDisplayEnd()
    {
        org.jfree.chart.axis.ModuloAxis this;
        double $stack1;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        $stack1 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        return $stack1;
    }

    public void setDisplayRange(double, double)
    {
        org.jfree.chart.axis.ModuloAxis this;
        double start, $stack5, end, $stack6, $stack7, $stack8, $stack11, $stack12, $stack14, $stack15, $stack16, $stack17, $stack19, $stack20;
        byte $stack9;
        org.jfree.data.Range $stack10, $stack13;
        org.jfree.chart.event.AxisChangeEvent $stack18;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        start := @parameter0: double;

        end := @parameter1: double;

        $stack5 = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double mapValueToFixedRange(double)>(start);

        this.<org.jfree.chart.axis.ModuloAxis: double displayStart> = $stack5;

        $stack6 = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double mapValueToFixedRange(double)>(end);

        this.<org.jfree.chart.axis.ModuloAxis: double displayEnd> = $stack6;

        $stack8 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack7 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack9 = $stack8 cmpg $stack7;

        if $stack9 >= 0 goto label1;

        $stack20 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack19 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: void setRange(double,double)>($stack20, $stack19);

        goto label2;

     label1:
        $stack11 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack10 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack12 = virtualinvoke $stack10.<org.jfree.data.Range: double getUpperBound()>();

        $stack14 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack13 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack15 = virtualinvoke $stack13.<org.jfree.data.Range: double getLowerBound()>();

        $stack16 = $stack14 - $stack15;

        $stack17 = $stack12 + $stack16;

        virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: void setRange(double,double)>($stack11, $stack17);

     label2:
        $stack18 = new org.jfree.chart.event.AxisChangeEvent;

        specialinvoke $stack18.<org.jfree.chart.event.AxisChangeEvent: void <init>(org.jfree.chart.axis.Axis)>(this);

        virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: void notifyListeners(org.jfree.chart.event.AxisChangeEvent)>($stack18);

        return;
    }

    protected void autoAdjustRange()
    {
        org.jfree.chart.axis.ModuloAxis this;
        org.jfree.data.Range $stack1;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        $stack1 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: void setRange(org.jfree.data.Range,boolean,boolean)>($stack1, 0, 0);

        return;
    }

    public double valueToJava2D(double, java.awt.geom.Rectangle2D, org.jfree.chart.ui.RectangleEdge)
    {
        org.jfree.chart.axis.ModuloAxis this;
        double value, v, $stack16, $stack17, $stack19, $stack20, $stack21, cutoff, $stack23, $stack24, length1, $stack26, $stack27, length2, result;
        byte $stack18, $stack28;
        org.jfree.data.Range $stack22, $stack25;
        java.awt.geom.Rectangle2D area;
        org.jfree.chart.ui.RectangleEdge edge;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        value := @parameter0: double;

        area := @parameter1: java.awt.geom.Rectangle2D;

        edge := @parameter2: org.jfree.chart.ui.RectangleEdge;

        v = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double mapValueToFixedRange(double)>(value);

        $stack17 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack16 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack18 = $stack17 cmpg $stack16;

        if $stack18 >= 0 goto label1;

        result = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double trans(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(v, area, edge);

        goto label3;

     label1:
        $stack20 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack19 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack21 = $stack20 + $stack19;

        cutoff = $stack21 / 2.0;

        $stack22 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack23 = virtualinvoke $stack22.<org.jfree.data.Range: double getUpperBound()>();

        $stack24 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        length1 = $stack23 - $stack24;

        $stack26 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack25 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack27 = virtualinvoke $stack25.<org.jfree.data.Range: double getLowerBound()>();

        length2 = $stack26 - $stack27;

        $stack28 = v cmpl cutoff;

        if $stack28 <= 0 goto label2;

        result = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double transStart(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge,double,double)>(v, area, edge, length1, length2);

        goto label3;

     label2:
        result = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double transEnd(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge,double,double)>(v, area, edge, length1, length2);

     label3:
        return result;
    }

    private double trans(double, java.awt.geom.Rectangle2D, org.jfree.chart.ui.RectangleEdge)
    {
        org.jfree.chart.ui.RectangleEdge edge;
        boolean $stack9, $stack10, $stack11;
        org.jfree.chart.axis.ModuloAxis this;
        double value, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack31, $stack32, $stack35, $stack36, min, max;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        value := @parameter0: double;

        area := @parameter1: java.awt.geom.Rectangle2D;

        edge := @parameter2: org.jfree.chart.ui.RectangleEdge;

        min = 0.0;

        max = 0.0;

        $stack9 = staticinvoke <org.jfree.chart.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.chart.ui.RectangleEdge)>(edge);

        if $stack9 == 0 goto label1;

        min = virtualinvoke area.<java.awt.geom.Rectangle2D: double getX()>();

        $stack35 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getX()>();

        $stack36 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getWidth()>();

        max = $stack35 + $stack36;

        goto label2;

     label1:
        $stack10 = staticinvoke <org.jfree.chart.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.chart.ui.RectangleEdge)>(edge);

        if $stack10 == 0 goto label2;

        min = virtualinvoke area.<java.awt.geom.Rectangle2D: double getMaxY()>();

        $stack31 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getMaxY()>();

        $stack32 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getHeight()>();

        max = $stack31 - $stack32;

     label2:
        $stack11 = virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>();

        if $stack11 == 0 goto label3;

        $stack21 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack25 = value - $stack21;

        $stack23 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack22 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack24 = $stack23 - $stack22;

        $stack27 = $stack25 / $stack24;

        $stack26 = max - min;

        $stack28 = $stack27 * $stack26;

        $stack29 = max - $stack28;

        return $stack29;

     label3:
        $stack12 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack16 = value - $stack12;

        $stack14 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack13 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack15 = $stack14 - $stack13;

        $stack18 = $stack16 / $stack15;

        $stack17 = max - min;

        $stack19 = $stack18 * $stack17;

        $stack20 = min + $stack19;

        return $stack20;
    }

    private double transStart(double, java.awt.geom.Rectangle2D, org.jfree.chart.ui.RectangleEdge, double, double)
    {
        org.jfree.chart.ui.RectangleEdge edge;
        boolean $stack13, $stack14, $stack15;
        org.jfree.chart.axis.ModuloAxis this;
        double value, $stack16, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack37, $stack38, length1, length2, $stack39, $stack40, $stack41, $stack44, $stack45, $stack46, $stack47, $stack48, min, max;
        org.jfree.data.Range $stack17, $stack27;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        value := @parameter0: double;

        area := @parameter1: java.awt.geom.Rectangle2D;

        edge := @parameter2: org.jfree.chart.ui.RectangleEdge;

        length1 := @parameter3: double;

        length2 := @parameter4: double;

        min = 0.0;

        max = 0.0;

        $stack13 = staticinvoke <org.jfree.chart.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.chart.ui.RectangleEdge)>(edge);

        if $stack13 == 0 goto label1;

        min = virtualinvoke area.<java.awt.geom.Rectangle2D: double getX()>();

        $stack44 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getX()>();

        $stack45 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack47 = $stack45 * length1;

        $stack46 = length1 + length2;

        $stack48 = $stack47 / $stack46;

        max = $stack44 + $stack48;

        goto label2;

     label1:
        $stack14 = staticinvoke <org.jfree.chart.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.chart.ui.RectangleEdge)>(edge);

        if $stack14 == 0 goto label2;

        min = virtualinvoke area.<java.awt.geom.Rectangle2D: double getMaxY()>();

        $stack37 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getMaxY()>();

        $stack38 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getHeight()>();

        $stack40 = $stack38 * length1;

        $stack39 = length1 + length2;

        $stack41 = $stack40 / $stack39;

        max = $stack37 - $stack41;

     label2:
        $stack15 = virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>();

        if $stack15 == 0 goto label3;

        $stack26 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack28 = value - $stack26;

        $stack27 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack29 = virtualinvoke $stack27.<org.jfree.data.Range: double getUpperBound()>();

        $stack30 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack31 = $stack29 - $stack30;

        $stack33 = $stack28 / $stack31;

        $stack32 = max - min;

        $stack34 = $stack33 * $stack32;

        $stack35 = max - $stack34;

        return $stack35;

     label3:
        $stack16 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack18 = value - $stack16;

        $stack17 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack19 = virtualinvoke $stack17.<org.jfree.data.Range: double getUpperBound()>();

        $stack20 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack21 = $stack19 - $stack20;

        $stack23 = $stack18 / $stack21;

        $stack22 = max - min;

        $stack24 = $stack23 * $stack22;

        $stack25 = min + $stack24;

        return $stack25;
    }

    private double transEnd(double, java.awt.geom.Rectangle2D, org.jfree.chart.ui.RectangleEdge, double, double)
    {
        org.jfree.chart.ui.RectangleEdge edge;
        boolean $stack13, $stack14, $stack15;
        org.jfree.chart.axis.ModuloAxis this;
        double value, $stack17, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack28, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack39, $stack40, length2, length1, $stack41, $stack42, $stack43, $stack46, $stack47, $stack48, $stack49, $stack50, min, max;
        org.jfree.data.Range $stack16, $stack18, $stack27, $stack29;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        value := @parameter0: double;

        area := @parameter1: java.awt.geom.Rectangle2D;

        edge := @parameter2: org.jfree.chart.ui.RectangleEdge;

        length1 := @parameter3: double;

        length2 := @parameter4: double;

        min = 0.0;

        max = 0.0;

        $stack13 = staticinvoke <org.jfree.chart.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.chart.ui.RectangleEdge)>(edge);

        if $stack13 == 0 goto label1;

        max = virtualinvoke area.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $stack46 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $stack47 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack49 = $stack47 * length2;

        $stack48 = length1 + length2;

        $stack50 = $stack49 / $stack48;

        min = $stack46 - $stack50;

        goto label2;

     label1:
        $stack14 = staticinvoke <org.jfree.chart.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.chart.ui.RectangleEdge)>(edge);

        if $stack14 == 0 goto label2;

        max = virtualinvoke area.<java.awt.geom.Rectangle2D: double getMinY()>();

        $stack39 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getMinY()>();

        $stack40 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getHeight()>();

        $stack42 = $stack40 * length2;

        $stack41 = length1 + length2;

        $stack43 = $stack42 / $stack41;

        min = $stack39 + $stack43;

     label2:
        $stack15 = virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: boolean isInverted()>();

        if $stack15 == 0 goto label3;

        $stack27 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack28 = virtualinvoke $stack27.<org.jfree.data.Range: double getLowerBound()>();

        $stack30 = value - $stack28;

        $stack31 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack29 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack32 = virtualinvoke $stack29.<org.jfree.data.Range: double getLowerBound()>();

        $stack33 = $stack31 - $stack32;

        $stack35 = $stack30 / $stack33;

        $stack34 = max - min;

        $stack36 = $stack35 * $stack34;

        $stack37 = max - $stack36;

        return $stack37;

     label3:
        $stack16 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack17 = virtualinvoke $stack16.<org.jfree.data.Range: double getLowerBound()>();

        $stack19 = value - $stack17;

        $stack20 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack18 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack21 = virtualinvoke $stack18.<org.jfree.data.Range: double getLowerBound()>();

        $stack22 = $stack20 - $stack21;

        $stack24 = $stack19 / $stack22;

        $stack23 = max - min;

        $stack25 = $stack24 * $stack23;

        $stack26 = min + $stack25;

        return $stack26;
    }

    private double mapValueToFixedRange(double)
    {
        org.jfree.chart.axis.ModuloAxis this;
        org.jfree.data.Range $stack7, $stack9;
        double lower, length, value, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;
        byte $stack11;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        value := @parameter0: double;

        $stack7 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        lower = virtualinvoke $stack7.<org.jfree.data.Range: double getLowerBound()>();

        $stack9 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        length = virtualinvoke $stack9.<org.jfree.data.Range: double getLength()>();

        $stack11 = value cmpg lower;

        if $stack11 >= 0 goto label1;

        $stack17 = lower + length;

        $stack15 = value - lower;

        $stack16 = $stack15 % length;

        $stack18 = $stack17 + $stack16;

        return $stack18;

     label1:
        $stack12 = value - lower;

        $stack13 = $stack12 % length;

        $stack14 = lower + $stack13;

        return $stack14;
    }

    public double java2DToValue(double, java.awt.geom.Rectangle2D, org.jfree.chart.ui.RectangleEdge)
    {
        org.jfree.chart.axis.ModuloAxis this;
        double $stack7, $stack8, java2DValue, result;
        byte $stack9;
        java.awt.geom.Rectangle2D area;
        org.jfree.chart.ui.RectangleEdge edge;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        java2DValue := @parameter0: double;

        area := @parameter1: java.awt.geom.Rectangle2D;

        edge := @parameter2: org.jfree.chart.ui.RectangleEdge;

        result = 0.0;

        $stack8 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack7 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack9 = $stack8 cmpg $stack7;

        if $stack9 >= 0 goto label1;

        result = specialinvoke this.<org.jfree.chart.axis.NumberAxis: double java2DToValue(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(java2DValue, area, edge);

     label1:
        return result;
    }

    private double getDisplayLength()
    {
        org.jfree.chart.axis.ModuloAxis this;
        double $stack1, $stack2, $stack5, $stack6, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15;
        byte $stack3;
        org.jfree.data.Range $stack4, $stack7;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        $stack2 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack1 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack3 = $stack2 cmpg $stack1;

        if $stack3 >= 0 goto label1;

        $stack14 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack13 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack15 = $stack14 - $stack13;

        return $stack15;

     label1:
        $stack4 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack5 = virtualinvoke $stack4.<org.jfree.data.Range: double getUpperBound()>();

        $stack6 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack8 = $stack5 - $stack6;

        $stack9 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack7 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack10 = virtualinvoke $stack7.<org.jfree.data.Range: double getLowerBound()>();

        $stack11 = $stack9 - $stack10;

        $stack12 = $stack8 + $stack11;

        return $stack12;
    }

    private double getDisplayCentralValue()
    {
        org.jfree.chart.axis.ModuloAxis this;
        double $stack1, $stack2, $stack3, $stack4, $stack5;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        $stack1 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack2 = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double getDisplayLength()>();

        $stack3 = $stack2 / 2.0;

        $stack4 = $stack1 + $stack3;

        $stack5 = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double mapValueToFixedRange(double)>($stack4);

        return $stack5;
    }

    public void resizeRange(double)
    {
        org.jfree.chart.axis.ModuloAxis this;
        double percent, $stack3;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        percent := @parameter0: double;

        $stack3 = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double getDisplayCentralValue()>();

        virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: void resizeRange(double,double)>(percent, $stack3);

        return;
    }

    public void resizeRange(double, double)
    {
        double percent, $stack8, $stack9, halfLength, anchorValue, $stack10, $stack11;
        byte $stack7;
        org.jfree.chart.axis.ModuloAxis this;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        percent := @parameter0: double;

        anchorValue := @parameter1: double;

        $stack7 = percent cmpl 0.0;

        if $stack7 <= 0 goto label1;

        $stack8 = specialinvoke this.<org.jfree.chart.axis.ModuloAxis: double getDisplayLength()>();

        $stack9 = $stack8 * percent;

        halfLength = $stack9 / 2.0;

        $stack11 = anchorValue - halfLength;

        $stack10 = anchorValue + halfLength;

        virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: void setDisplayRange(double,double)>($stack11, $stack10);

        goto label2;

     label1:
        virtualinvoke this.<org.jfree.chart.axis.ModuloAxis: void setAutoRange(boolean)>(1);

     label2:
        return;
    }

    public double lengthToJava2D(double, java.awt.geom.Rectangle2D, org.jfree.chart.ui.RectangleEdge)
    {
        org.jfree.chart.axis.ModuloAxis this;
        double $stack9, $stack10, $stack13, $stack14, $stack16, $stack17, $stack18, $stack19, length, $stack22, $stack23, $stack28, $stack29, axisLength, areaLength;
        byte $stack11;
        org.jfree.data.Range $stack12, $stack15;
        org.jfree.chart.ui.RectangleEdge edge;
        boolean $stack20;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        length := @parameter0: double;

        area := @parameter1: java.awt.geom.Rectangle2D;

        edge := @parameter2: org.jfree.chart.ui.RectangleEdge;

        $stack10 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack9 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack11 = $stack10 cmpl $stack9;

        if $stack11 <= 0 goto label1;

        $stack29 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack28 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        axisLength = $stack29 - $stack28;

        goto label2;

     label1:
        $stack12 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack13 = virtualinvoke $stack12.<org.jfree.data.Range: double getUpperBound()>();

        $stack14 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack16 = $stack13 - $stack14;

        $stack17 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack15 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack18 = virtualinvoke $stack15.<org.jfree.data.Range: double getLowerBound()>();

        $stack19 = $stack17 - $stack18;

        axisLength = $stack16 + $stack19;

     label2:
        $stack20 = staticinvoke <org.jfree.chart.ui.RectangleEdge: boolean isLeftOrRight(org.jfree.chart.ui.RectangleEdge)>(edge);

        if $stack20 == 0 goto label3;

        areaLength = virtualinvoke area.<java.awt.geom.Rectangle2D: double getHeight()>();

        goto label4;

     label3:
        areaLength = virtualinvoke area.<java.awt.geom.Rectangle2D: double getWidth()>();

     label4:
        $stack22 = length / axisLength;

        $stack23 = $stack22 * areaLength;

        return $stack23;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.axis.ModuloAxis this, that;
        boolean $stack3, $stack12, $stack13;
        double $stack4, $stack5, $stack7, $stack8;
        byte $stack6, $stack9;
        org.jfree.data.Range $stack10, $stack11;

        this := @this: org.jfree.chart.axis.ModuloAxis;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.axis.ModuloAxis;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.axis.ModuloAxis) obj;

        $stack5 = this.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack4 = that.<org.jfree.chart.axis.ModuloAxis: double displayStart>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack7 = that.<org.jfree.chart.axis.ModuloAxis: double displayEnd>;

        $stack9 = $stack8 cmpl $stack7;

        if $stack9 == 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack10 = that.<org.jfree.chart.axis.ModuloAxis: org.jfree.data.Range fixedRange>;

        $stack12 = virtualinvoke $stack11.<org.jfree.data.Range: boolean equals(java.lang.Object)>($stack10);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack13 = specialinvoke this.<org.jfree.chart.axis.NumberAxis: boolean equals(java.lang.Object)>(obj);

        return $stack13;
    }
}
