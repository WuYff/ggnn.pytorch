public class org.jfree.chart.annotations.CategoryPointerAnnotation extends org.jfree.chart.annotations.CategoryTextAnnotation implements java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final double DEFAULT_TIP_RADIUS;
    public static final double DEFAULT_BASE_RADIUS;
    public static final double DEFAULT_LABEL_OFFSET;
    public static final double DEFAULT_ARROW_LENGTH;
    public static final double DEFAULT_ARROW_WIDTH;
    private double angle;
    private double tipRadius;
    private double baseRadius;
    private double arrowLength;
    private double arrowWidth;
    private transient java.awt.Stroke arrowStroke;
    private transient java.awt.Paint arrowPaint;
    private double labelOffset;

    public void <init>(java.lang.String, java.lang.Comparable, double, double)
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        java.lang.String label;
        java.lang.Comparable key;
        double value, angle;
        java.awt.BasicStroke $stack7;
        java.awt.Color $stack8;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        label := @parameter0: java.lang.String;

        key := @parameter1: java.lang.Comparable;

        value := @parameter2: double;

        angle := @parameter3: double;

        specialinvoke this.<org.jfree.chart.annotations.CategoryTextAnnotation: void <init>(java.lang.String,java.lang.Comparable,double)>(label, key, value);

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle> = angle;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double tipRadius> = 10.0;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius> = 30.0;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowLength> = 5.0;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth> = 3.0;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double labelOffset> = 3.0;

        $stack7 = new java.awt.BasicStroke;

        specialinvoke $stack7.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke> = $stack7;

        $stack8 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint> = $stack8;

        return;
    }

    public double getAngle()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        return $stack1;
    }

    public void setAngle(double)
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double angle;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        angle := @parameter0: double;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle> = angle;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public double getTipRadius()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double tipRadius>;

        return $stack1;
    }

    public void setTipRadius(double)
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double radius;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        radius := @parameter0: double;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double tipRadius> = radius;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public double getBaseRadius()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius>;

        return $stack1;
    }

    public void setBaseRadius(double)
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double radius;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        radius := @parameter0: double;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius> = radius;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public double getLabelOffset()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double labelOffset>;

        return $stack1;
    }

    public void setLabelOffset(double)
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double offset;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        offset := @parameter0: double;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double labelOffset> = offset;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public double getArrowLength()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowLength>;

        return $stack1;
    }

    public void setArrowLength(double)
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double length;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        length := @parameter0: double;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowLength> = length;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public double getArrowWidth()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth>;

        return $stack1;
    }

    public void setArrowWidth(double)
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double width;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        width := @parameter0: double;

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth> = width;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public java.awt.Stroke getArrowStroke()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke>;

        return $stack1;
    }

    public void setArrowStroke(java.awt.Stroke)
    {
        java.awt.Stroke stroke;
        org.jfree.chart.annotations.CategoryPointerAnnotation this;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        stroke := @parameter0: java.awt.Stroke;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(stroke, "stroke");

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke> = stroke;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public java.awt.Paint getArrowPaint()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint>;

        return $stack1;
    }

    public void setArrowPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.annotations.CategoryPointerAnnotation this;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint> = paint;

        virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: void fireAnnotationChanged()>();

        return;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.CategoryPlot, java.awt.geom.Rectangle2D, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis)
    {
        org.jfree.chart.plot.CategoryPlot plot;
        org.jfree.chart.plot.PlotOrientation orientation, $stack54;
        org.jfree.chart.axis.AxisLocation $stack43, $stack45;
        org.jfree.chart.ui.RectangleEdge domainEdge, rangeEdge;
        org.jfree.data.category.CategoryDataset dataset;
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        java.lang.Comparable $stack48;
        int catIndex, catCount;
        org.jfree.chart.axis.CategoryAxis domainAxis;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.axis.ValueAxis rangeAxis;
        double $stack52, $stack55, $stack56, $stack57, $stack58, $stack59, $stack60, $stack61, $stack62, startY, $stack63, $stack64, $stack65, $stack66, endX, $stack67, $stack68, $stack69, $stack70, endY, $stack71, $stack72, $stack73, $stack74, arrowBaseX, $stack75, $stack76, $stack77, $stack78, arrowBaseY, $stack79, $stack80, $stack81, $stack82, $stack83, arrowLeftX, $stack84, $stack85, $stack86, $stack87, $stack88, arrowLeftY, $stack89, $stack90, $stack91, $stack92, $stack93, arrowRightX, $stack94, $stack95, $stack96, $stack97, $stack98, arrowRightY, $stack111, $stack112, $stack113, $stack114, $stack115, $stack116, labelX, $stack117, $stack118, $stack119, $stack120, $stack121, $stack122, labelY, j2DX, j2DY, temp;
        java.awt.geom.GeneralPath $stack99;
        float $stack100, $stack101, $stack102, $stack103, $stack104, $stack105, $stack124, $stack125;
        java.awt.Graphics2D g2;
        java.awt.Stroke $stack106;
        java.awt.Paint $stack107, $stack110;
        java.awt.geom.Line2D$Double $stack108;
        java.awt.Font $stack109;
        java.lang.String $stack123;
        org.jfree.chart.ui.TextAnchor $stack126;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.CategoryPlot;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        domainAxis := @parameter3: org.jfree.chart.axis.CategoryAxis;

        rangeAxis := @parameter4: org.jfree.chart.axis.ValueAxis;

        orientation = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack43 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>();

        domainEdge = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.chart.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($stack43, orientation);

        $stack45 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>();

        rangeEdge = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.chart.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($stack45, orientation);

        dataset = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset()>();

        $stack48 = virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.Comparable getCategory()>();

        catIndex = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getColumnIndex(java.lang.Comparable)>($stack48);

        catCount = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getColumnCount()>();

        j2DX = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(catIndex, catCount, dataArea, domainEdge);

        $stack52 = virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double getValue()>();

        j2DY = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack52, dataArea, rangeEdge);

        $stack54 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack54 goto label1;

        temp = j2DX;

        j2DX = j2DY;

        j2DY = temp;

     label1:
        $stack55 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack56 = staticinvoke <java.lang.Math: double cos(double)>($stack55);

        $stack57 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius>;

        $stack58 = $stack56 * $stack57;

        temp = j2DX + $stack58;

        $stack59 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack60 = staticinvoke <java.lang.Math: double sin(double)>($stack59);

        $stack61 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius>;

        $stack62 = $stack60 * $stack61;

        startY = j2DY + $stack62;

        $stack63 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack64 = staticinvoke <java.lang.Math: double cos(double)>($stack63);

        $stack65 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double tipRadius>;

        $stack66 = $stack64 * $stack65;

        endX = j2DX + $stack66;

        $stack67 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack68 = staticinvoke <java.lang.Math: double sin(double)>($stack67);

        $stack69 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double tipRadius>;

        $stack70 = $stack68 * $stack69;

        endY = j2DY + $stack70;

        $stack71 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack72 = staticinvoke <java.lang.Math: double cos(double)>($stack71);

        $stack73 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowLength>;

        $stack74 = $stack72 * $stack73;

        arrowBaseX = endX + $stack74;

        $stack75 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack76 = staticinvoke <java.lang.Math: double sin(double)>($stack75);

        $stack77 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowLength>;

        $stack78 = $stack76 * $stack77;

        arrowBaseY = endY + $stack78;

        $stack79 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack80 = $stack79 + 1.5707963267948966;

        $stack81 = staticinvoke <java.lang.Math: double cos(double)>($stack80);

        $stack82 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth>;

        $stack83 = $stack81 * $stack82;

        arrowLeftX = arrowBaseX + $stack83;

        $stack84 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack85 = $stack84 + 1.5707963267948966;

        $stack86 = staticinvoke <java.lang.Math: double sin(double)>($stack85);

        $stack87 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth>;

        $stack88 = $stack86 * $stack87;

        arrowLeftY = arrowBaseY + $stack88;

        $stack89 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack90 = $stack89 + 1.5707963267948966;

        $stack91 = staticinvoke <java.lang.Math: double cos(double)>($stack90);

        $stack92 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth>;

        $stack93 = $stack91 * $stack92;

        arrowRightX = arrowBaseX - $stack93;

        $stack94 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack95 = $stack94 + 1.5707963267948966;

        $stack96 = staticinvoke <java.lang.Math: double sin(double)>($stack95);

        $stack97 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth>;

        $stack98 = $stack96 * $stack97;

        arrowRightY = arrowBaseY - $stack98;

        $stack99 = new java.awt.geom.GeneralPath;

        specialinvoke $stack99.<java.awt.geom.GeneralPath: void <init>()>();

        $stack101 = (float) endX;

        $stack100 = (float) endY;

        virtualinvoke $stack99.<java.awt.geom.GeneralPath: void moveTo(float,float)>($stack101, $stack100);

        $stack103 = (float) arrowLeftX;

        $stack102 = (float) arrowLeftY;

        virtualinvoke $stack99.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack103, $stack102);

        $stack105 = (float) arrowRightX;

        $stack104 = (float) arrowRightY;

        virtualinvoke $stack99.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack105, $stack104);

        virtualinvoke $stack99.<java.awt.geom.GeneralPath: void closePath()>();

        $stack106 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack106);

        $stack107 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack107);

        $stack108 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack108.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(temp, startY, arrowBaseX, arrowBaseY);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack108);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack99);

        $stack109 = virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Font getFont()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack109);

        $stack110 = virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint getPaint()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack110);

        $stack111 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack112 = staticinvoke <java.lang.Math: double cos(double)>($stack111);

        $stack114 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius>;

        $stack113 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double labelOffset>;

        $stack115 = $stack114 + $stack113;

        $stack116 = $stack112 * $stack115;

        labelX = j2DX + $stack116;

        $stack117 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack118 = staticinvoke <java.lang.Math: double sin(double)>($stack117);

        $stack120 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius>;

        $stack119 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double labelOffset>;

        $stack121 = $stack120 + $stack119;

        $stack122 = $stack118 * $stack121;

        labelY = j2DY + $stack122;

        $stack123 = virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.lang.String getText()>();

        $stack124 = (float) labelX;

        $stack125 = (float) labelY;

        $stack126 = virtualinvoke this.<org.jfree.chart.annotations.CategoryPointerAnnotation: org.jfree.chart.ui.TextAnchor getTextAnchor()>();

        staticinvoke <org.jfree.chart.text.TextUtils: java.awt.geom.Rectangle2D drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.ui.TextAnchor)>($stack123, g2, $stack124, $stack125, $stack126);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.annotations.CategoryPointerAnnotation this, that;
        boolean $stack3, $stack4, $stack22, $stack25;
        double $stack5, $stack6, $stack8, $stack9, $stack11, $stack12, $stack14, $stack15, $stack17, $stack18, $stack26, $stack27;
        byte $stack7, $stack10, $stack13, $stack16, $stack19, $stack28;
        java.awt.Paint $stack20, $stack21;
        java.awt.Stroke $stack23, $stack24;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack3 = obj instanceof org.jfree.chart.annotations.CategoryPointerAnnotation;

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        $stack4 = specialinvoke this.<org.jfree.chart.annotations.CategoryTextAnnotation: boolean equals(java.lang.Object)>(obj);

        if $stack4 != 0 goto label03;

        return 0;

     label03:
        that = (org.jfree.chart.annotations.CategoryPointerAnnotation) obj;

        $stack6 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack5 = that.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        $stack7 = $stack6 cmpl $stack5;

        if $stack7 == 0 goto label04;

        return 0;

     label04:
        $stack9 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double tipRadius>;

        $stack8 = that.<org.jfree.chart.annotations.CategoryPointerAnnotation: double tipRadius>;

        $stack10 = $stack9 cmpl $stack8;

        if $stack10 == 0 goto label05;

        return 0;

     label05:
        $stack12 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius>;

        $stack11 = that.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius>;

        $stack13 = $stack12 cmpl $stack11;

        if $stack13 == 0 goto label06;

        return 0;

     label06:
        $stack15 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowLength>;

        $stack14 = that.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowLength>;

        $stack16 = $stack15 cmpl $stack14;

        if $stack16 == 0 goto label07;

        return 0;

     label07:
        $stack18 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth>;

        $stack17 = that.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth>;

        $stack19 = $stack18 cmpl $stack17;

        if $stack19 == 0 goto label08;

        return 0;

     label08:
        $stack21 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint>;

        $stack20 = that.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint>;

        $stack22 = virtualinvoke $stack21.<java.lang.Object: boolean equals(java.lang.Object)>($stack20);

        if $stack22 != 0 goto label09;

        return 0;

     label09:
        $stack24 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke>;

        $stack23 = that.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke>;

        $stack25 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack24, $stack23);

        if $stack25 != 0 goto label10;

        return 0;

     label10:
        $stack27 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double labelOffset>;

        $stack26 = that.<org.jfree.chart.annotations.CategoryPointerAnnotation: double labelOffset>;

        $stack28 = $stack27 cmpl $stack26;

        if $stack28 == 0 goto label11;

        return 0;

     label11:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        double $stack4, $stack10, $stack16, $stack22, $stack28, $stack40;
        long $stack6, $stack7, $stack12, $stack13, $stack18, $stack19, $stack24, $stack25, $stack30, $stack31, $stack42, $stack43, temp;
        int $stack8, $stack9, $stack14, $stack15, $stack20, $stack21, $stack26, $stack27, $stack32, $stack33, $stack35, $stack36, $stack38, $stack39, $stack44, $stack45, result#3;
        java.awt.Paint $stack34;
        java.awt.Stroke $stack37;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack4 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double angle>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack4);

        $stack9 = 37 * 193;

        $stack6 = temp >>> 32;

        $stack7 = temp ^ $stack6;

        $stack8 = (int) $stack7;

        result#3 = $stack9 + $stack8;

        $stack10 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double tipRadius>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack10);

        $stack15 = 37 * result#3;

        $stack12 = temp >>> 32;

        $stack13 = temp ^ $stack12;

        $stack14 = (int) $stack13;

        result#3 = $stack15 + $stack14;

        $stack16 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double baseRadius>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack16);

        $stack21 = 37 * result#3;

        $stack18 = temp >>> 32;

        $stack19 = temp ^ $stack18;

        $stack20 = (int) $stack19;

        result#3 = $stack21 + $stack20;

        $stack22 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowLength>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack22);

        $stack27 = 37 * result#3;

        $stack24 = temp >>> 32;

        $stack25 = temp ^ $stack24;

        $stack26 = (int) $stack25;

        result#3 = $stack27 + $stack26;

        $stack28 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double arrowWidth>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack28);

        $stack33 = 37 * result#3;

        $stack30 = temp >>> 32;

        $stack31 = temp ^ $stack30;

        $stack32 = (int) $stack31;

        result#3 = $stack33 + $stack32;

        $stack35 = 37 * result#3;

        $stack34 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint>;

        $stack36 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack34);

        result#3 = $stack35 + $stack36;

        $stack38 = 37 * result#3;

        $stack37 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke>;

        $stack39 = virtualinvoke $stack37.<java.lang.Object: int hashCode()>();

        result#3 = $stack38 + $stack39;

        $stack40 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: double labelOffset>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack40);

        $stack45 = 37 * result#3;

        $stack42 = temp >>> 32;

        $stack43 = temp ^ $stack42;

        $stack44 = (int) $stack43;

        result#3 = $stack45 + $stack44;

        return result#3;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        $stack1 = specialinvoke this.<org.jfree.chart.annotations.CategoryTextAnnotation: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        java.awt.Paint $stack2;
        java.awt.Stroke $stack3;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.annotations.CategoryPointerAnnotation this;
        java.awt.Paint $stack2;
        java.awt.Stroke $stack3;

        this := @this: org.jfree.chart.annotations.CategoryPointerAnnotation;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Paint arrowPaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.CategoryPointerAnnotation: java.awt.Stroke arrowStroke> = $stack3;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.annotations.CategoryPointerAnnotation: double DEFAULT_ARROW_WIDTH> = 3.0;

        <org.jfree.chart.annotations.CategoryPointerAnnotation: double DEFAULT_ARROW_LENGTH> = 5.0;

        <org.jfree.chart.annotations.CategoryPointerAnnotation: double DEFAULT_LABEL_OFFSET> = 3.0;

        <org.jfree.chart.annotations.CategoryPointerAnnotation: double DEFAULT_BASE_RADIUS> = 30.0;

        <org.jfree.chart.annotations.CategoryPointerAnnotation: double DEFAULT_TIP_RADIUS> = 10.0;

        <org.jfree.chart.annotations.CategoryPointerAnnotation: long serialVersionUID> = -4031161445009858551L;

        return;
    }
}
