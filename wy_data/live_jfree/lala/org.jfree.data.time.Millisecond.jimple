public class org.jfree.data.time.Millisecond extends org.jfree.data.time.RegularTimePeriod implements java.io.Serializable
{
    static final long serialVersionUID;
    public static final int FIRST_MILLISECOND_IN_SECOND;
    public static final int LAST_MILLISECOND_IN_SECOND;
    private org.jfree.data.time.Day day;
    private byte hour;
    private byte minute;
    private byte second;
    private int millisecond;
    private long firstMillisecond;

    public void <init>()
    {
        org.jfree.data.time.Millisecond this;
        java.util.Date $stack1;

        this := @this: org.jfree.data.time.Millisecond;

        $stack1 = new java.util.Date;

        specialinvoke $stack1.<java.util.Date: void <init>()>();

        specialinvoke this.<org.jfree.data.time.Millisecond: void <init>(java.util.Date)>($stack1);

        return;
    }

    public void <init>(int, org.jfree.data.time.Second)
    {
        org.jfree.data.time.Millisecond this;
        int millisecond, $stack3, $stack6, $stack9;
        org.jfree.data.time.Second second;
        byte $stack4, $stack7, $stack10;
        org.jfree.data.time.Minute $stack5, $stack8, $stack11;
        org.jfree.data.time.Day $stack12;
        java.util.Calendar $stack13;

        this := @this: org.jfree.data.time.Millisecond;

        millisecond := @parameter0: int;

        second := @parameter1: org.jfree.data.time.Second;

        specialinvoke this.<org.jfree.data.time.RegularTimePeriod: void <init>()>();

        this.<org.jfree.data.time.Millisecond: int millisecond> = millisecond;

        $stack3 = virtualinvoke second.<org.jfree.data.time.Second: int getSecond()>();

        $stack4 = (byte) $stack3;

        this.<org.jfree.data.time.Millisecond: byte second> = $stack4;

        $stack5 = virtualinvoke second.<org.jfree.data.time.Second: org.jfree.data.time.Minute getMinute()>();

        $stack6 = virtualinvoke $stack5.<org.jfree.data.time.Minute: int getMinute()>();

        $stack7 = (byte) $stack6;

        this.<org.jfree.data.time.Millisecond: byte minute> = $stack7;

        $stack8 = virtualinvoke second.<org.jfree.data.time.Second: org.jfree.data.time.Minute getMinute()>();

        $stack9 = virtualinvoke $stack8.<org.jfree.data.time.Minute: int getHourValue()>();

        $stack10 = (byte) $stack9;

        this.<org.jfree.data.time.Millisecond: byte hour> = $stack10;

        $stack11 = virtualinvoke second.<org.jfree.data.time.Second: org.jfree.data.time.Minute getMinute()>();

        $stack12 = virtualinvoke $stack11.<org.jfree.data.time.Minute: org.jfree.data.time.Day getDay()>();

        this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day> = $stack12;

        $stack13 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke this.<org.jfree.data.time.Millisecond: void peg(java.util.Calendar)>($stack13);

        return;
    }

    public void <init>(int, int, int, int, int, int, int)
    {
        org.jfree.data.time.Millisecond this;
        int millisecond, second, minute, hour, day, month, year;
        org.jfree.data.time.Second $stack8;

        this := @this: org.jfree.data.time.Millisecond;

        millisecond := @parameter0: int;

        second := @parameter1: int;

        minute := @parameter2: int;

        hour := @parameter3: int;

        day := @parameter4: int;

        month := @parameter5: int;

        year := @parameter6: int;

        $stack8 = new org.jfree.data.time.Second;

        specialinvoke $stack8.<org.jfree.data.time.Second: void <init>(int,int,int,int,int,int)>(second, minute, hour, day, month, year);

        specialinvoke this.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>(millisecond, $stack8);

        return;
    }

    public void <init>(java.util.Date)
    {
        org.jfree.data.time.Millisecond this;
        java.util.Date time;
        java.util.TimeZone $stack2;
        java.util.Locale $stack3;

        this := @this: org.jfree.data.time.Millisecond;

        time := @parameter0: java.util.Date;

        $stack2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $stack3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke this.<org.jfree.data.time.Millisecond: void <init>(java.util.Date,java.util.TimeZone,java.util.Locale)>(time, $stack2, $stack3);

        return;
    }

    public void <init>(java.util.Date, java.util.TimeZone, java.util.Locale)
    {
        org.jfree.data.time.Millisecond this;
        java.util.TimeZone zone;
        java.util.Locale locale;
        java.util.Calendar calendar;
        java.util.Date time;
        int $stack6, $stack7, $stack9, $stack11;
        byte $stack8, $stack10, $stack12;
        org.jfree.data.time.Day $stack13;

        this := @this: org.jfree.data.time.Millisecond;

        time := @parameter0: java.util.Date;

        zone := @parameter1: java.util.TimeZone;

        locale := @parameter2: java.util.Locale;

        specialinvoke this.<org.jfree.data.time.RegularTimePeriod: void <init>()>();

        calendar = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>(zone, locale);

        virtualinvoke calendar.<java.util.Calendar: void setTime(java.util.Date)>(time);

        $stack6 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(14);

        this.<org.jfree.data.time.Millisecond: int millisecond> = $stack6;

        $stack7 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(13);

        $stack8 = (byte) $stack7;

        this.<org.jfree.data.time.Millisecond: byte second> = $stack8;

        $stack9 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(12);

        $stack10 = (byte) $stack9;

        this.<org.jfree.data.time.Millisecond: byte minute> = $stack10;

        $stack11 = virtualinvoke calendar.<java.util.Calendar: int get(int)>(11);

        $stack12 = (byte) $stack11;

        this.<org.jfree.data.time.Millisecond: byte hour> = $stack12;

        $stack13 = new org.jfree.data.time.Day;

        specialinvoke $stack13.<org.jfree.data.time.Day: void <init>(java.util.Date,java.util.TimeZone,java.util.Locale)>(time, zone, locale);

        this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day> = $stack13;

        virtualinvoke this.<org.jfree.data.time.Millisecond: void peg(java.util.Calendar)>(calendar);

        return;
    }

    public org.jfree.data.time.Second getSecond()
    {
        org.jfree.data.time.Second $stack1;
        org.jfree.data.time.Millisecond this;
        org.jfree.data.time.Day $stack2, $stack7, $stack9;
        byte $stack3, $stack4, $stack5;
        int $stack6, $stack8, $stack10;

        this := @this: org.jfree.data.time.Millisecond;

        $stack1 = new org.jfree.data.time.Second;

        $stack3 = this.<org.jfree.data.time.Millisecond: byte second>;

        $stack4 = this.<org.jfree.data.time.Millisecond: byte minute>;

        $stack5 = this.<org.jfree.data.time.Millisecond: byte hour>;

        $stack2 = this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        $stack6 = virtualinvoke $stack2.<org.jfree.data.time.Day: int getDayOfMonth()>();

        $stack7 = this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        $stack8 = virtualinvoke $stack7.<org.jfree.data.time.Day: int getMonth()>();

        $stack9 = this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        $stack10 = virtualinvoke $stack9.<org.jfree.data.time.Day: int getYear()>();

        specialinvoke $stack1.<org.jfree.data.time.Second: void <init>(int,int,int,int,int,int)>($stack3, $stack4, $stack5, $stack6, $stack8, $stack10);

        return $stack1;
    }

    public long getMillisecond()
    {
        org.jfree.data.time.Millisecond this;
        int $stack1;
        long $stack2;

        this := @this: org.jfree.data.time.Millisecond;

        $stack1 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        $stack2 = (long) $stack1;

        return $stack2;
    }

    public long getFirstMillisecond()
    {
        org.jfree.data.time.Millisecond this;
        long $stack1;

        this := @this: org.jfree.data.time.Millisecond;

        $stack1 = this.<org.jfree.data.time.Millisecond: long firstMillisecond>;

        return $stack1;
    }

    public long getLastMillisecond()
    {
        org.jfree.data.time.Millisecond this;
        long $stack1;

        this := @this: org.jfree.data.time.Millisecond;

        $stack1 = this.<org.jfree.data.time.Millisecond: long firstMillisecond>;

        return $stack1;
    }

    public void peg(java.util.Calendar)
    {
        org.jfree.data.time.Millisecond this;
        java.util.Calendar calendar;
        long $stack2;

        this := @this: org.jfree.data.time.Millisecond;

        calendar := @parameter0: java.util.Calendar;

        $stack2 = virtualinvoke this.<org.jfree.data.time.Millisecond: long getFirstMillisecond(java.util.Calendar)>(calendar);

        this.<org.jfree.data.time.Millisecond: long firstMillisecond> = $stack2;

        return;
    }

    public org.jfree.data.time.RegularTimePeriod previous()
    {
        org.jfree.data.time.Millisecond this, $stack6, $stack8, result;
        int $stack3, $stack9, $stack10;
        org.jfree.data.time.Second $stack4, previous, $stack11;
        org.jfree.data.time.RegularTimePeriod $stack5;

        this := @this: org.jfree.data.time.Millisecond;

        result = null;

        $stack3 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        if $stack3 == 0 goto label1;

        $stack8 = new org.jfree.data.time.Millisecond;

        $stack9 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        $stack10 = $stack9 - 1;

        $stack11 = virtualinvoke this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>();

        specialinvoke $stack8.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>($stack10, $stack11);

        result = $stack8;

        goto label2;

     label1:
        $stack4 = virtualinvoke this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>();

        $stack5 = virtualinvoke $stack4.<org.jfree.data.time.Second: org.jfree.data.time.RegularTimePeriod previous()>();

        previous = (org.jfree.data.time.Second) $stack5;

        if previous == null goto label2;

        $stack6 = new org.jfree.data.time.Millisecond;

        specialinvoke $stack6.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>(999, previous);

        result = $stack6;

     label2:
        return result;
    }

    public org.jfree.data.time.RegularTimePeriod next()
    {
        org.jfree.data.time.Millisecond this, $stack6, $stack8, result;
        int $stack3, $stack9, $stack10;
        org.jfree.data.time.Second $stack4, next, $stack11;
        org.jfree.data.time.RegularTimePeriod $stack5;

        this := @this: org.jfree.data.time.Millisecond;

        result = null;

        $stack3 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        if $stack3 == 999 goto label1;

        $stack8 = new org.jfree.data.time.Millisecond;

        $stack9 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        $stack10 = $stack9 + 1;

        $stack11 = virtualinvoke this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>();

        specialinvoke $stack8.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>($stack10, $stack11);

        result = $stack8;

        goto label2;

     label1:
        $stack4 = virtualinvoke this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>();

        $stack5 = virtualinvoke $stack4.<org.jfree.data.time.Second: org.jfree.data.time.RegularTimePeriod next()>();

        next = (org.jfree.data.time.Second) $stack5;

        if next == null goto label2;

        $stack6 = new org.jfree.data.time.Millisecond;

        specialinvoke $stack6.<org.jfree.data.time.Millisecond: void <init>(int,org.jfree.data.time.Second)>(0, next);

        result = $stack6;

     label2:
        return result;
    }

    public long getSerialIndex()
    {
        org.jfree.data.time.Millisecond this;
        org.jfree.data.time.Day $stack7;
        long $stack8, $stack10, $stack11, hourIndex, $stack13, $stack14, minuteIndex, $stack16, $stack17, secondIndex, $stack19, $stack20, $stack21;
        byte $stack9, $stack12, $stack15;
        int $stack18;

        this := @this: org.jfree.data.time.Millisecond;

        $stack7 = this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        $stack8 = virtualinvoke $stack7.<org.jfree.data.time.Day: long getSerialIndex()>();

        $stack11 = $stack8 * 24L;

        $stack9 = this.<org.jfree.data.time.Millisecond: byte hour>;

        $stack10 = (long) $stack9;

        hourIndex = $stack11 + $stack10;

        $stack14 = hourIndex * 60L;

        $stack12 = this.<org.jfree.data.time.Millisecond: byte minute>;

        $stack13 = (long) $stack12;

        minuteIndex = $stack14 + $stack13;

        $stack17 = minuteIndex * 60L;

        $stack15 = this.<org.jfree.data.time.Millisecond: byte second>;

        $stack16 = (long) $stack15;

        secondIndex = $stack17 + $stack16;

        $stack20 = secondIndex * 1000L;

        $stack18 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        $stack19 = (long) $stack18;

        $stack21 = $stack20 + $stack19;

        return $stack21;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.data.time.Millisecond this, that;
        boolean $stack3, $stack14;
        int $stack4, $stack5;
        byte $stack6, $stack7, $stack8, $stack9, $stack10, $stack11;
        org.jfree.data.time.Day $stack12, $stack13;

        this := @this: org.jfree.data.time.Millisecond;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.data.time.Millisecond;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.data.time.Millisecond) obj;

        $stack5 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        $stack4 = that.<org.jfree.data.time.Millisecond: int millisecond>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.data.time.Millisecond: byte second>;

        $stack6 = that.<org.jfree.data.time.Millisecond: byte second>;

        if $stack7 == $stack6 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.data.time.Millisecond: byte minute>;

        $stack8 = that.<org.jfree.data.time.Millisecond: byte minute>;

        if $stack9 == $stack8 goto label5;

        return 0;

     label5:
        $stack11 = this.<org.jfree.data.time.Millisecond: byte hour>;

        $stack10 = that.<org.jfree.data.time.Millisecond: byte hour>;

        if $stack11 == $stack10 goto label6;

        return 0;

     label6:
        $stack13 = this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        $stack12 = that.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        $stack14 = virtualinvoke $stack13.<org.jfree.data.time.Day: boolean equals(java.lang.Object)>($stack12);

        if $stack14 != 0 goto label7;

        return 0;

     label7:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.time.Millisecond this;
        int $stack2, $stack3, $stack4, $stack6, result#2;
        org.jfree.data.time.Second $stack5;

        this := @this: org.jfree.data.time.Millisecond;

        $stack3 = 37 * 17;

        $stack2 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        result#2 = $stack3 + $stack2;

        $stack4 = 37 * result#2;

        $stack5 = virtualinvoke this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Second getSecond()>();

        $stack6 = virtualinvoke $stack5.<org.jfree.data.time.Second: int hashCode()>();

        result#2 = $stack4 + $stack6;

        return result#2;
    }

    public int compareTo(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack10, $stack11;
        org.jfree.data.time.Millisecond this, ms;
        long thisVal, anotherVal, $stack18, $stack19, difference;
        byte $stack14, $stack15, $stack20, $stack21, result, $stack17;
        org.jfree.data.time.RegularTimePeriod ms#3;

        this := @this: org.jfree.data.time.Millisecond;

        obj := @parameter0: java.lang.Object;

        $stack10 = obj instanceof org.jfree.data.time.Millisecond;

        if $stack10 == 0 goto label4;

        ms = (org.jfree.data.time.Millisecond) obj;

        $stack18 = virtualinvoke this.<org.jfree.data.time.Millisecond: long getFirstMillisecond()>();

        $stack19 = virtualinvoke ms.<org.jfree.data.time.Millisecond: long getFirstMillisecond()>();

        difference = $stack18 - $stack19;

        $stack20 = difference cmp 0L;

        if $stack20 <= 0 goto label1;

        result = 1;

        goto label3;

     label1:
        $stack21 = difference cmp 0L;

        if $stack21 >= 0 goto label2;

        result = -1;

        goto label3;

     label2:
        result = 0;

     label3:
        goto label9;

     label4:
        $stack11 = obj instanceof org.jfree.data.time.RegularTimePeriod;

        if $stack11 == 0 goto label8;

        ms#3 = (org.jfree.data.time.RegularTimePeriod) obj;

        thisVal = virtualinvoke this.<org.jfree.data.time.Millisecond: long getFirstMillisecond()>();

        anotherVal = virtualinvoke ms#3.<org.jfree.data.time.RegularTimePeriod: long getFirstMillisecond()>();

        $stack14 = thisVal cmp anotherVal;

        if $stack14 >= 0 goto label5;

        $stack17 = -1;

        goto label7;

     label5:
        $stack15 = thisVal cmp anotherVal;

        if $stack15 != 0 goto label6;

        $stack17 = 0;

        goto label7;

     label6:
        $stack17 = 1;

     label7:
        result = $stack17;

        goto label9;

     label8:
        result = 1;

     label9:
        return result;
    }

    public long getFirstMillisecond(java.util.Calendar)
    {
        org.jfree.data.time.Millisecond this;
        org.jfree.data.time.Day $stack5, $stack7, $stack9;
        int year, $stack8, month, d, $stack14;
        java.util.Calendar calendar;
        byte $stack11, $stack12, $stack13;
        long $stack15;

        this := @this: org.jfree.data.time.Millisecond;

        calendar := @parameter0: java.util.Calendar;

        $stack5 = this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        year = virtualinvoke $stack5.<org.jfree.data.time.Day: int getYear()>();

        $stack7 = this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        $stack8 = virtualinvoke $stack7.<org.jfree.data.time.Day: int getMonth()>();

        month = $stack8 - 1;

        $stack9 = this.<org.jfree.data.time.Millisecond: org.jfree.data.time.Day day>;

        d = virtualinvoke $stack9.<org.jfree.data.time.Day: int getDayOfMonth()>();

        virtualinvoke calendar.<java.util.Calendar: void clear()>();

        $stack13 = this.<org.jfree.data.time.Millisecond: byte hour>;

        $stack12 = this.<org.jfree.data.time.Millisecond: byte minute>;

        $stack11 = this.<org.jfree.data.time.Millisecond: byte second>;

        virtualinvoke calendar.<java.util.Calendar: void set(int,int,int,int,int,int)>(year, month, d, $stack13, $stack12, $stack11);

        $stack14 = this.<org.jfree.data.time.Millisecond: int millisecond>;

        virtualinvoke calendar.<java.util.Calendar: void set(int,int)>(14, $stack14);

        $stack15 = virtualinvoke calendar.<java.util.Calendar: long getTimeInMillis()>();

        return $stack15;
    }

    public long getLastMillisecond(java.util.Calendar)
    {
        org.jfree.data.time.Millisecond this;
        java.util.Calendar calendar;
        long $stack2;

        this := @this: org.jfree.data.time.Millisecond;

        calendar := @parameter0: java.util.Calendar;

        $stack2 = virtualinvoke this.<org.jfree.data.time.Millisecond: long getFirstMillisecond(java.util.Calendar)>(calendar);

        return $stack2;
    }

    public static void <clinit>()
    {
        <org.jfree.data.time.Millisecond: int LAST_MILLISECOND_IN_SECOND> = 999;

        <org.jfree.data.time.Millisecond: int FIRST_MILLISECOND_IN_SECOND> = 0;

        <org.jfree.data.time.Millisecond: long serialVersionUID> = -5316836467277638485L;

        return;
    }
}
