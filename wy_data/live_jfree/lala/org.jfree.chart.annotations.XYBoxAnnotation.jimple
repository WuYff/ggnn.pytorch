public class org.jfree.chart.annotations.XYBoxAnnotation extends org.jfree.chart.annotations.AbstractXYAnnotation implements java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private double x0;
    private double y0;
    private double x1;
    private double y1;
    private transient java.awt.Stroke stroke;
    private transient java.awt.Paint outlinePaint;
    private transient java.awt.Paint fillPaint;

    public void <init>(double, double, double, double)
    {
        org.jfree.chart.annotations.XYBoxAnnotation this;
        double x0, y0, x1, y1;
        java.awt.BasicStroke $stack9;
        java.awt.Color $stack10;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        x0 := @parameter0: double;

        y0 := @parameter1: double;

        x1 := @parameter2: double;

        y1 := @parameter3: double;

        $stack9 = new java.awt.BasicStroke;

        specialinvoke $stack9.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        $stack10 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke this.<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint)>(x0, y0, x1, y1, $stack9, $stack10);

        return;
    }

    public void <init>(double, double, double, double, java.awt.Stroke, java.awt.Paint)
    {
        org.jfree.chart.annotations.XYBoxAnnotation this;
        double x0, y0, x1, y1;
        java.awt.Stroke stroke;
        java.awt.Paint outlinePaint;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        x0 := @parameter0: double;

        y0 := @parameter1: double;

        x1 := @parameter2: double;

        y1 := @parameter3: double;

        stroke := @parameter4: java.awt.Stroke;

        outlinePaint := @parameter5: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.annotations.XYBoxAnnotation: void <init>(double,double,double,double,java.awt.Stroke,java.awt.Paint,java.awt.Paint)>(x0, y0, x1, y1, stroke, outlinePaint, null);

        return;
    }

    public void <init>(double, double, double, double, java.awt.Stroke, java.awt.Paint, java.awt.Paint)
    {
        org.jfree.chart.annotations.XYBoxAnnotation this;
        double x0, y0, x1, y1;
        java.awt.Stroke stroke;
        java.awt.Paint outlinePaint, fillPaint;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        x0 := @parameter0: double;

        y0 := @parameter1: double;

        x1 := @parameter2: double;

        y1 := @parameter3: double;

        stroke := @parameter4: java.awt.Stroke;

        outlinePaint := @parameter5: java.awt.Paint;

        fillPaint := @parameter6: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.annotations.AbstractXYAnnotation: void <init>()>();

        this.<org.jfree.chart.annotations.XYBoxAnnotation: double x0> = x0;

        this.<org.jfree.chart.annotations.XYBoxAnnotation: double y0> = y0;

        this.<org.jfree.chart.annotations.XYBoxAnnotation: double x1> = x1;

        this.<org.jfree.chart.annotations.XYBoxAnnotation: double y1> = y1;

        this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Stroke stroke> = stroke;

        this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint outlinePaint> = outlinePaint;

        this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint fillPaint> = fillPaint;

        return;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.XYPlot, java.awt.geom.Rectangle2D, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, int, org.jfree.chart.plot.PlotRenderingInfo)
    {
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.chart.plot.PlotOrientation orientation, $stack33, $stack34;
        org.jfree.chart.axis.AxisLocation $stack21, $stack23;
        org.jfree.chart.ui.RectangleEdge domainEdge, rangeEdge;
        org.jfree.chart.axis.ValueAxis domainAxis, rangeAxis;
        org.jfree.chart.annotations.XYBoxAnnotation this;
        java.awt.geom.Rectangle2D dataArea;
        double $stack25, transX0, $stack27, transY0, $stack29, transX1, $stack31, transY1, $stack51, $stack52, $stack55, $stack56;
        java.awt.Stroke $stack36, $stack47;
        org.jfree.chart.plot.PlotRenderingInfo info;
        int rendererIndex;
        java.awt.Paint $stack39, $stack46, $stack48, $stack35;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D$Double $stack50, $stack54, box;
        java.lang.String $stack37, $stack38;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.XYPlot;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        domainAxis := @parameter3: org.jfree.chart.axis.ValueAxis;

        rangeAxis := @parameter4: org.jfree.chart.axis.ValueAxis;

        rendererIndex := @parameter5: int;

        info := @parameter6: org.jfree.chart.plot.PlotRenderingInfo;

        orientation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack21 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getDomainAxisLocation()>();

        domainEdge = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.chart.ui.RectangleEdge resolveDomainAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($stack21, orientation);

        $stack23 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.AxisLocation getRangeAxisLocation()>();

        rangeEdge = staticinvoke <org.jfree.chart.plot.Plot: org.jfree.chart.ui.RectangleEdge resolveRangeAxisLocation(org.jfree.chart.axis.AxisLocation,org.jfree.chart.plot.PlotOrientation)>($stack23, orientation);

        $stack25 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double x0>;

        transX0 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack25, dataArea, domainEdge);

        $stack27 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double y0>;

        transY0 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack27, dataArea, rangeEdge);

        $stack29 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double x1>;

        transX1 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack29, dataArea, domainEdge);

        $stack31 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double y1>;

        transY1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack31, dataArea, rangeEdge);

        box = null;

        $stack33 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack33 goto label1;

        $stack54 = new java.awt.geom.Rectangle2D$Double;

        $stack56 = transY1 - transY0;

        $stack55 = transX0 - transX1;

        specialinvoke $stack54.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(transY0, transX1, $stack56, $stack55);

        box = $stack54;

        goto label2;

     label1:
        $stack34 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack34 goto label2;

        $stack50 = new java.awt.geom.Rectangle2D$Double;

        $stack52 = transX1 - transX0;

        $stack51 = transY0 - transY1;

        specialinvoke $stack50.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(transX0, transY1, $stack52, $stack51);

        box = $stack50;

     label2:
        $stack35 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint fillPaint>;

        if $stack35 == null goto label3;

        $stack48 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint fillPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack48);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(box);

     label3:
        $stack36 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Stroke stroke>;

        if $stack36 == null goto label4;

        $stack39 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint outlinePaint>;

        if $stack39 == null goto label4;

        $stack46 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint outlinePaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack46);

        $stack47 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Stroke stroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack47);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(box);

     label4:
        $stack37 = virtualinvoke this.<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.String getToolTipText()>();

        $stack38 = virtualinvoke this.<org.jfree.chart.annotations.XYBoxAnnotation: java.lang.String getURL()>();

        virtualinvoke this.<org.jfree.chart.annotations.XYBoxAnnotation: void addEntity(org.jfree.chart.plot.PlotRenderingInfo,java.awt.Shape,int,java.lang.String,java.lang.String)>(info, box, rendererIndex, $stack37, $stack38);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.annotations.XYBoxAnnotation this, that;
        boolean $stack3, $stack4, $stack19, $stack22, $stack25;
        double $stack5, $stack6, $stack8, $stack9, $stack11, $stack12, $stack14, $stack15;
        byte $stack7, $stack10, $stack13, $stack16;
        java.awt.Stroke $stack17, $stack18;
        java.awt.Paint $stack20, $stack21, $stack23, $stack24;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack3 = specialinvoke this.<org.jfree.chart.annotations.AbstractXYAnnotation: boolean equals(java.lang.Object)>(obj);

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        $stack4 = obj instanceof org.jfree.chart.annotations.XYBoxAnnotation;

        if $stack4 != 0 goto label03;

        return 0;

     label03:
        that = (org.jfree.chart.annotations.XYBoxAnnotation) obj;

        $stack6 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double x0>;

        $stack5 = that.<org.jfree.chart.annotations.XYBoxAnnotation: double x0>;

        $stack7 = $stack6 cmpl $stack5;

        if $stack7 == 0 goto label04;

        return 0;

     label04:
        $stack9 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double y0>;

        $stack8 = that.<org.jfree.chart.annotations.XYBoxAnnotation: double y0>;

        $stack10 = $stack9 cmpl $stack8;

        if $stack10 == 0 goto label05;

        return 0;

     label05:
        $stack12 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double x1>;

        $stack11 = that.<org.jfree.chart.annotations.XYBoxAnnotation: double x1>;

        $stack13 = $stack12 cmpl $stack11;

        if $stack13 == 0 goto label06;

        return 0;

     label06:
        $stack15 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double y1>;

        $stack14 = that.<org.jfree.chart.annotations.XYBoxAnnotation: double y1>;

        $stack16 = $stack15 cmpl $stack14;

        if $stack16 == 0 goto label07;

        return 0;

     label07:
        $stack18 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Stroke stroke>;

        $stack17 = that.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Stroke stroke>;

        $stack19 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack18, $stack17);

        if $stack19 != 0 goto label08;

        return 0;

     label08:
        $stack21 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint outlinePaint>;

        $stack20 = that.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint outlinePaint>;

        $stack22 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack21, $stack20);

        if $stack22 != 0 goto label09;

        return 0;

     label09:
        $stack24 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint fillPaint>;

        $stack23 = that.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint fillPaint>;

        $stack25 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack24, $stack23);

        if $stack25 != 0 goto label10;

        return 0;

     label10:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.annotations.XYBoxAnnotation this;
        double $stack4, $stack8, $stack14, $stack20;
        long $stack6, $stack7, $stack10, $stack11, $stack16, $stack17, $stack22, $stack23, temp;
        int $stack12, $stack13, $stack18, $stack19, $stack24, $stack25, result;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        $stack4 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double x0>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack4);

        $stack6 = temp >>> 32;

        $stack7 = temp ^ $stack6;

        result = (int) $stack7;

        $stack8 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double x1>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack8);

        $stack13 = 29 * result;

        $stack10 = temp >>> 32;

        $stack11 = temp ^ $stack10;

        $stack12 = (int) $stack11;

        result = $stack13 + $stack12;

        $stack14 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double y0>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack14);

        $stack19 = 29 * result;

        $stack16 = temp >>> 32;

        $stack17 = temp ^ $stack16;

        $stack18 = (int) $stack17;

        result = $stack19 + $stack18;

        $stack20 = this.<org.jfree.chart.annotations.XYBoxAnnotation: double y1>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack20);

        $stack25 = 29 * result;

        $stack22 = temp >>> 32;

        $stack23 = temp ^ $stack22;

        $stack24 = (int) $stack23;

        result = $stack25 + $stack24;

        return result;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.annotations.XYBoxAnnotation this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        $stack1 = specialinvoke this.<org.jfree.chart.annotations.AbstractXYAnnotation: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.annotations.XYBoxAnnotation this;
        java.awt.Stroke $stack2;
        java.awt.Paint $stack3, $stack4;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Stroke stroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint outlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint fillPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack4, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.annotations.XYBoxAnnotation this;
        java.awt.Stroke $stack2;
        java.awt.Paint $stack3, $stack4;

        this := @this: org.jfree.chart.annotations.XYBoxAnnotation;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Stroke stroke> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint outlinePaint> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.annotations.XYBoxAnnotation: java.awt.Paint fillPaint> = $stack4;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.annotations.XYBoxAnnotation: long serialVersionUID> = 6764703772526757457L;

        return;
    }
}
