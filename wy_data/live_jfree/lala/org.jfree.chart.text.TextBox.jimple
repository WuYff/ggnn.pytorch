public class org.jfree.chart.text.TextBox extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.awt.Paint outlinePaint;
    private transient java.awt.Stroke outlineStroke;
    private org.jfree.chart.ui.RectangleInsets interiorGap;
    private transient java.awt.Paint backgroundPaint;
    private transient java.awt.Paint shadowPaint;
    private double shadowXOffset;
    private double shadowYOffset;
    private org.jfree.chart.text.TextBlock textBlock;

    public void <init>()
    {
        org.jfree.chart.text.TextBox this;
        org.jfree.chart.text.TextBlock $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = (org.jfree.chart.text.TextBlock) null;

        specialinvoke this.<org.jfree.chart.text.TextBox: void <init>(org.jfree.chart.text.TextBlock)>($stack1);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.jfree.chart.text.TextBox this;
        org.jfree.chart.text.TextBlock $stack2, $stack3, $stack5;
        java.lang.String text;
        java.awt.Font $stack4;
        java.awt.Color $stack6;

        this := @this: org.jfree.chart.text.TextBox;

        text := @parameter0: java.lang.String;

        $stack2 = (org.jfree.chart.text.TextBlock) null;

        specialinvoke this.<org.jfree.chart.text.TextBox: void <init>(org.jfree.chart.text.TextBlock)>($stack2);

        if text == null goto label1;

        $stack3 = new org.jfree.chart.text.TextBlock;

        specialinvoke $stack3.<org.jfree.chart.text.TextBlock: void <init>()>();

        this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock> = $stack3;

        $stack5 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        $stack4 = new java.awt.Font;

        specialinvoke $stack4.<java.awt.Font: void <init>(java.lang.String,int,int)>("SansSerif", 0, 10);

        $stack6 = <java.awt.Color: java.awt.Color BLACK>;

        virtualinvoke $stack5.<org.jfree.chart.text.TextBlock: void addLine(java.lang.String,java.awt.Font,java.awt.Paint)>(text, $stack4, $stack6);

     label1:
        return;
    }

    public void <init>(org.jfree.chart.text.TextBlock)
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Color $stack2, $stack5, $stack6;
        java.awt.BasicStroke $stack3;
        org.jfree.chart.ui.RectangleInsets $stack4;
        org.jfree.chart.text.TextBlock block;

        this := @this: org.jfree.chart.text.TextBox;

        block := @parameter0: org.jfree.chart.text.TextBlock;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jfree.chart.text.TextBox: double shadowXOffset> = 2.0;

        this.<org.jfree.chart.text.TextBox: double shadowYOffset> = 2.0;

        $stack2 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint> = $stack2;

        $stack3 = new java.awt.BasicStroke;

        specialinvoke $stack3.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke> = $stack3;

        $stack4 = new org.jfree.chart.ui.RectangleInsets;

        specialinvoke $stack4.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(1.0, 3.0, 1.0, 3.0);

        this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap> = $stack4;

        $stack5 = new java.awt.Color;

        specialinvoke $stack5.<java.awt.Color: void <init>(int,int,int)>(255, 255, 192);

        this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint> = $stack5;

        $stack6 = <java.awt.Color: java.awt.Color GRAY>;

        this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint> = $stack6;

        this.<org.jfree.chart.text.TextBox: double shadowXOffset> = 2.0;

        this.<org.jfree.chart.text.TextBox: double shadowYOffset> = 2.0;

        this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock> = block;

        return;
    }

    public java.awt.Paint getOutlinePaint()
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint>;

        return $stack1;
    }

    public void setOutlinePaint(java.awt.Paint)
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.text.TextBox;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint> = paint;

        return;
    }

    public java.awt.Stroke getOutlineStroke()
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke>;

        return $stack1;
    }

    public void setOutlineStroke(java.awt.Stroke)
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Stroke stroke;

        this := @this: org.jfree.chart.text.TextBox;

        stroke := @parameter0: java.awt.Stroke;

        this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke> = stroke;

        return;
    }

    public org.jfree.chart.ui.RectangleInsets getInteriorGap()
    {
        org.jfree.chart.text.TextBox this;
        org.jfree.chart.ui.RectangleInsets $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        return $stack1;
    }

    public void setInteriorGap(org.jfree.chart.ui.RectangleInsets)
    {
        org.jfree.chart.text.TextBox this;
        org.jfree.chart.ui.RectangleInsets gap;

        this := @this: org.jfree.chart.text.TextBox;

        gap := @parameter0: org.jfree.chart.ui.RectangleInsets;

        this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap> = gap;

        return;
    }

    public java.awt.Paint getBackgroundPaint()
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint>;

        return $stack1;
    }

    public void setBackgroundPaint(java.awt.Paint)
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.text.TextBox;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint> = paint;

        return;
    }

    public java.awt.Paint getShadowPaint()
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint>;

        return $stack1;
    }

    public void setShadowPaint(java.awt.Paint)
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.text.TextBox;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint> = paint;

        return;
    }

    public double getShadowXOffset()
    {
        org.jfree.chart.text.TextBox this;
        double $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = this.<org.jfree.chart.text.TextBox: double shadowXOffset>;

        return $stack1;
    }

    public void setShadowXOffset(double)
    {
        org.jfree.chart.text.TextBox this;
        double offset;

        this := @this: org.jfree.chart.text.TextBox;

        offset := @parameter0: double;

        this.<org.jfree.chart.text.TextBox: double shadowXOffset> = offset;

        return;
    }

    public double getShadowYOffset()
    {
        org.jfree.chart.text.TextBox this;
        double $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = this.<org.jfree.chart.text.TextBox: double shadowYOffset>;

        return $stack1;
    }

    public void setShadowYOffset(double)
    {
        org.jfree.chart.text.TextBox this;
        double offset;

        this := @this: org.jfree.chart.text.TextBox;

        offset := @parameter0: double;

        this.<org.jfree.chart.text.TextBox: double shadowYOffset> = offset;

        return;
    }

    public org.jfree.chart.text.TextBlock getTextBlock()
    {
        org.jfree.chart.text.TextBox this;
        org.jfree.chart.text.TextBlock $stack1;

        this := @this: org.jfree.chart.text.TextBox;

        $stack1 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        return $stack1;
    }

    public void setTextBlock(org.jfree.chart.text.TextBlock)
    {
        org.jfree.chart.text.TextBox this;
        org.jfree.chart.text.TextBlock block;

        this := @this: org.jfree.chart.text.TextBox;

        block := @parameter0: org.jfree.chart.text.TextBlock;

        this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock> = block;

        return;
    }

    public void draw(java.awt.Graphics2D, float, float, org.jfree.chart.ui.RectangleAnchor)
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Graphics2D g2;
        org.jfree.chart.text.TextBlock $stack17, $stack35;
        org.jfree.chart.ui.Size2D d1, $stack25;
        org.jfree.chart.ui.RectangleInsets $stack19, $stack22, $stack34, $stack38;
        double $stack20, w, $stack23, h, $stack26, $stack27, xx, yy, $stack58, $stack59, $stack60, $stack61, $stack62, $stack63, $stack36, $stack37, $stack40, $stack41;
        float x, y, $stack39, $stack43;
        org.jfree.chart.ui.RectangleAnchor anchor;
        java.awt.geom.Rectangle2D bounds;
        java.awt.Paint $stack31, $stack32, $stack33, $stack53, $stack55, $stack64;
        java.awt.Stroke $stack44, $stack54;
        java.awt.geom.Rectangle2D$Double $stack57;
        org.jfree.chart.text.TextBlockAnchor $stack42;

        this := @this: org.jfree.chart.text.TextBox;

        g2 := @parameter0: java.awt.Graphics2D;

        x := @parameter1: float;

        y := @parameter2: float;

        anchor := @parameter3: org.jfree.chart.ui.RectangleAnchor;

        $stack17 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        d1 = virtualinvoke $stack17.<org.jfree.chart.text.TextBlock: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack19 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        $stack20 = virtualinvoke d1.<org.jfree.chart.ui.Size2D: double getWidth()>();

        w = virtualinvoke $stack19.<org.jfree.chart.ui.RectangleInsets: double extendWidth(double)>($stack20);

        $stack22 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        $stack23 = virtualinvoke d1.<org.jfree.chart.ui.Size2D: double getHeight()>();

        h = virtualinvoke $stack22.<org.jfree.chart.ui.RectangleInsets: double extendHeight(double)>($stack23);

        $stack25 = new org.jfree.chart.ui.Size2D;

        specialinvoke $stack25.<org.jfree.chart.ui.Size2D: void <init>(double,double)>(w, h);

        $stack27 = (double) x;

        $stack26 = (double) y;

        bounds = staticinvoke <org.jfree.chart.ui.RectangleAnchor: java.awt.geom.Rectangle2D createRectangle(org.jfree.chart.ui.Size2D,double,double,org.jfree.chart.ui.RectangleAnchor)>($stack25, $stack27, $stack26, anchor);

        xx = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getX()>();

        yy = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getY()>();

        $stack31 = this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint>;

        if $stack31 == null goto label1;

        $stack57 = new java.awt.geom.Rectangle2D$Double;

        $stack58 = this.<org.jfree.chart.text.TextBox: double shadowXOffset>;

        $stack60 = xx + $stack58;

        $stack59 = this.<org.jfree.chart.text.TextBox: double shadowYOffset>;

        $stack61 = yy + $stack59;

        $stack62 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack63 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getHeight()>();

        specialinvoke $stack57.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack60, $stack61, $stack62, $stack63);

        $stack64 = this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack64);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack57);

     label1:
        $stack32 = this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint>;

        if $stack32 == null goto label2;

        $stack55 = this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack55);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(bounds);

     label2:
        $stack33 = this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint>;

        if $stack33 == null goto label3;

        $stack44 = this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke>;

        if $stack44 == null goto label3;

        $stack53 = this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack53);

        $stack54 = this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack54);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(bounds);

     label3:
        $stack35 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        $stack34 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        $stack36 = virtualinvoke $stack34.<org.jfree.chart.ui.RectangleInsets: double calculateLeftInset(double)>(w);

        $stack37 = xx + $stack36;

        $stack39 = (float) $stack37;

        $stack38 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        $stack40 = virtualinvoke $stack38.<org.jfree.chart.ui.RectangleInsets: double calculateTopInset(double)>(h);

        $stack41 = yy + $stack40;

        $stack43 = (float) $stack41;

        $stack42 = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor TOP_LEFT>;

        virtualinvoke $stack35.<org.jfree.chart.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)>(g2, $stack39, $stack43, $stack42);

        return;
    }

    public double getHeight(java.awt.Graphics2D)
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Graphics2D g2;
        org.jfree.chart.text.TextBlock $stack3;
        org.jfree.chart.ui.Size2D d;
        org.jfree.chart.ui.RectangleInsets $stack5;
        double $stack6, $stack7;

        this := @this: org.jfree.chart.text.TextBox;

        g2 := @parameter0: java.awt.Graphics2D;

        $stack3 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        d = virtualinvoke $stack3.<org.jfree.chart.text.TextBlock: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack5 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        $stack6 = virtualinvoke d.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack7 = virtualinvoke $stack5.<org.jfree.chart.ui.RectangleInsets: double extendHeight(double)>($stack6);

        return $stack7;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.text.TextBox this, that;
        boolean $stack3, $stack6, $stack9, $stack12, $stack15, $stack18, $stack27;
        java.awt.Paint $stack4, $stack5, $stack13, $stack14, $stack16, $stack17;
        java.awt.Stroke $stack7, $stack8;
        org.jfree.chart.ui.RectangleInsets $stack10, $stack11;
        double $stack19, $stack20, $stack22, $stack23;
        byte $stack21, $stack24;
        org.jfree.chart.text.TextBlock $stack25, $stack26;

        this := @this: org.jfree.chart.text.TextBox;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack3 = obj instanceof org.jfree.chart.text.TextBox;

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        that = (org.jfree.chart.text.TextBox) obj;

        $stack5 = this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint>;

        $stack4 = that.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint>;

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        if $stack6 != 0 goto label03;

        return 0;

     label03:
        $stack8 = this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke>;

        $stack7 = that.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke>;

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        if $stack9 != 0 goto label04;

        return 0;

     label04:
        $stack11 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        $stack10 = that.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        $stack12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack11, $stack10);

        if $stack12 != 0 goto label05;

        return 0;

     label05:
        $stack14 = this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint>;

        $stack13 = that.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint>;

        $stack15 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack14, $stack13);

        if $stack15 != 0 goto label06;

        return 0;

     label06:
        $stack17 = this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint>;

        $stack16 = that.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint>;

        $stack18 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack17, $stack16);

        if $stack18 != 0 goto label07;

        return 0;

     label07:
        $stack20 = this.<org.jfree.chart.text.TextBox: double shadowXOffset>;

        $stack19 = that.<org.jfree.chart.text.TextBox: double shadowXOffset>;

        $stack21 = $stack20 cmpl $stack19;

        if $stack21 == 0 goto label08;

        return 0;

     label08:
        $stack23 = this.<org.jfree.chart.text.TextBox: double shadowYOffset>;

        $stack22 = that.<org.jfree.chart.text.TextBox: double shadowYOffset>;

        $stack24 = $stack23 cmpl $stack22;

        if $stack24 == 0 goto label09;

        return 0;

     label09:
        $stack26 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        $stack25 = that.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        $stack27 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack26, $stack25);

        if $stack27 != 0 goto label10;

        return 0;

     label10:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.text.TextBox this;
        java.awt.Paint $stack4, $stack9, $stack11, $stack52, $stack57, $stack75;
        java.awt.Stroke $stack5, $stack69;
        int $stack6, $stack8, $stack10, $stack12, $stack17, $stack18, $stack23, $stack24, $stack26, $stack76, result, $stack70, $stack64, $stack58, $stack53, $stack28;
        org.jfree.chart.ui.RectangleInsets $stack7, $stack63;
        double $stack13, $stack19, $stack31, $stack42;
        byte $stack14, $stack20;
        long $stack15, $stack16, $stack21, $stack22, $stack43, $stack32;
        org.jfree.chart.text.TextBlock $stack25, $stack27;

        this := @this: org.jfree.chart.text.TextBox;

        $stack4 = this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint>;

        if $stack4 == null goto label01;

        $stack75 = this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint>;

        $stack76 = virtualinvoke $stack75.<java.lang.Object: int hashCode()>();

        goto label02;

     label01:
        $stack76 = 0;

     label02:
        $stack6 = 29 * $stack76;

        $stack5 = this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke>;

        if $stack5 == null goto label03;

        $stack69 = this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke>;

        $stack70 = virtualinvoke $stack69.<java.lang.Object: int hashCode()>();

        goto label04;

     label03:
        $stack70 = 0;

     label04:
        result = $stack6 + $stack70;

        $stack8 = 29 * result;

        $stack7 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        if $stack7 == null goto label05;

        $stack63 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.ui.RectangleInsets interiorGap>;

        $stack64 = virtualinvoke $stack63.<org.jfree.chart.ui.RectangleInsets: int hashCode()>();

        goto label06;

     label05:
        $stack64 = 0;

     label06:
        result = $stack8 + $stack64;

        $stack10 = 29 * result;

        $stack9 = this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint>;

        if $stack9 == null goto label07;

        $stack57 = this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint>;

        $stack58 = virtualinvoke $stack57.<java.lang.Object: int hashCode()>();

        goto label08;

     label07:
        $stack58 = 0;

     label08:
        result = $stack10 + $stack58;

        $stack12 = 29 * result;

        $stack11 = this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint>;

        if $stack11 == null goto label09;

        $stack52 = this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint>;

        $stack53 = virtualinvoke $stack52.<java.lang.Object: int hashCode()>();

        goto label10;

     label09:
        $stack53 = 0;

     label10:
        result = $stack12 + $stack53;

        $stack13 = this.<org.jfree.chart.text.TextBox: double shadowXOffset>;

        $stack14 = $stack13 cmpl 0.0;

        if $stack14 == 0 goto label11;

        $stack42 = this.<org.jfree.chart.text.TextBox: double shadowXOffset>;

        $stack43 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack42);

        goto label12;

     label11:
        $stack43 = 0L;

     label12:
        $stack18 = 29 * result;

        $stack15 = $stack43 >>> 32;

        $stack16 = $stack43 ^ $stack15;

        $stack17 = (int) $stack16;

        result = $stack18 + $stack17;

        $stack19 = this.<org.jfree.chart.text.TextBox: double shadowYOffset>;

        $stack20 = $stack19 cmpl 0.0;

        if $stack20 == 0 goto label13;

        $stack31 = this.<org.jfree.chart.text.TextBox: double shadowYOffset>;

        $stack32 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack31);

        goto label14;

     label13:
        $stack32 = 0L;

     label14:
        $stack24 = 29 * result;

        $stack21 = $stack32 >>> 32;

        $stack22 = $stack32 ^ $stack21;

        $stack23 = (int) $stack22;

        result = $stack24 + $stack23;

        $stack26 = 29 * result;

        $stack25 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        if $stack25 == null goto label15;

        $stack27 = this.<org.jfree.chart.text.TextBox: org.jfree.chart.text.TextBlock textBlock>;

        $stack28 = virtualinvoke $stack27.<org.jfree.chart.text.TextBlock: int hashCode()>();

        goto label16;

     label15:
        $stack28 = 0;

     label16:
        result = $stack26 + $stack28;

        return result;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.text.TextBox this;
        java.awt.Paint $stack2, $stack4, $stack5;
        java.awt.Stroke $stack3;

        this := @this: org.jfree.chart.text.TextBox;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack4, stream);

        $stack5 = this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack5, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.text.TextBox this;
        java.awt.Paint $stack2, $stack4, $stack5;
        java.awt.Stroke $stack3;

        this := @this: org.jfree.chart.text.TextBox;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.text.TextBox: java.awt.Paint outlinePaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.text.TextBox: java.awt.Stroke outlineStroke> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.text.TextBox: java.awt.Paint backgroundPaint> = $stack4;

        $stack5 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.text.TextBox: java.awt.Paint shadowPaint> = $stack5;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.text.TextBox: long serialVersionUID> = 3360220213180203706L;

        return;
    }
}
