public class org.jfree.data.xy.VectorDataItem extends org.jfree.data.ComparableObjectItem
{

    public void <init>(double, double, double, double)
    {
        org.jfree.data.xy.VectorDataItem this;
        org.jfree.data.xy.XYCoordinate $stack9;
        double x, y, deltaX, deltaY;
        org.jfree.data.xy.Vector $stack10;

        this := @this: org.jfree.data.xy.VectorDataItem;

        x := @parameter0: double;

        y := @parameter1: double;

        deltaX := @parameter2: double;

        deltaY := @parameter3: double;

        $stack9 = new org.jfree.data.xy.XYCoordinate;

        specialinvoke $stack9.<org.jfree.data.xy.XYCoordinate: void <init>(double,double)>(x, y);

        $stack10 = new org.jfree.data.xy.Vector;

        specialinvoke $stack10.<org.jfree.data.xy.Vector: void <init>(double,double)>(deltaX, deltaY);

        specialinvoke this.<org.jfree.data.ComparableObjectItem: void <init>(java.lang.Comparable,java.lang.Object)>($stack9, $stack10);

        return;
    }

    public double getXValue()
    {
        org.jfree.data.xy.VectorDataItem this;
        java.lang.Comparable $stack2;
        org.jfree.data.xy.XYCoordinate xy;
        double $stack3;

        this := @this: org.jfree.data.xy.VectorDataItem;

        $stack2 = virtualinvoke this.<org.jfree.data.xy.VectorDataItem: java.lang.Comparable getComparable()>();

        xy = (org.jfree.data.xy.XYCoordinate) $stack2;

        $stack3 = virtualinvoke xy.<org.jfree.data.xy.XYCoordinate: double getX()>();

        return $stack3;
    }

    public double getYValue()
    {
        org.jfree.data.xy.VectorDataItem this;
        java.lang.Comparable $stack2;
        org.jfree.data.xy.XYCoordinate xy;
        double $stack3;

        this := @this: org.jfree.data.xy.VectorDataItem;

        $stack2 = virtualinvoke this.<org.jfree.data.xy.VectorDataItem: java.lang.Comparable getComparable()>();

        xy = (org.jfree.data.xy.XYCoordinate) $stack2;

        $stack3 = virtualinvoke xy.<org.jfree.data.xy.XYCoordinate: double getY()>();

        return $stack3;
    }

    public org.jfree.data.xy.Vector getVector()
    {
        org.jfree.data.xy.VectorDataItem this;
        java.lang.Object $stack1;
        org.jfree.data.xy.Vector $stack2;

        this := @this: org.jfree.data.xy.VectorDataItem;

        $stack1 = virtualinvoke this.<org.jfree.data.xy.VectorDataItem: java.lang.Object getObject()>();

        $stack2 = (org.jfree.data.xy.Vector) $stack1;

        return $stack2;
    }

    public double getVectorX()
    {
        org.jfree.data.xy.VectorDataItem this;
        java.lang.Object $stack2;
        org.jfree.data.xy.Vector vi;
        double $stack3;

        this := @this: org.jfree.data.xy.VectorDataItem;

        $stack2 = virtualinvoke this.<org.jfree.data.xy.VectorDataItem: java.lang.Object getObject()>();

        vi = (org.jfree.data.xy.Vector) $stack2;

        if vi == null goto label1;

        $stack3 = virtualinvoke vi.<org.jfree.data.xy.Vector: double getX()>();

        return $stack3;

     label1:
        return #NaN;
    }

    public double getVectorY()
    {
        org.jfree.data.xy.VectorDataItem this;
        java.lang.Object $stack2;
        org.jfree.data.xy.Vector vi;
        double $stack3;

        this := @this: org.jfree.data.xy.VectorDataItem;

        $stack2 = virtualinvoke this.<org.jfree.data.xy.VectorDataItem: java.lang.Object getObject()>();

        vi = (org.jfree.data.xy.Vector) $stack2;

        if vi == null goto label1;

        $stack3 = virtualinvoke vi.<org.jfree.data.xy.Vector: double getY()>();

        return $stack3;

     label1:
        return #NaN;
    }
}
