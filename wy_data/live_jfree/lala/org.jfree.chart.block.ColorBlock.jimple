public class org.jfree.chart.block.ColorBlock extends org.jfree.chart.block.AbstractBlock implements org.jfree.chart.block.Block
{
    static final long serialVersionUID;
    private transient java.awt.Paint paint;

    public void <init>(java.awt.Paint, double, double)
    {
        org.jfree.chart.block.ColorBlock this;
        java.awt.Paint paint;
        double width, height;

        this := @this: org.jfree.chart.block.ColorBlock;

        paint := @parameter0: java.awt.Paint;

        width := @parameter1: double;

        height := @parameter2: double;

        specialinvoke this.<org.jfree.chart.block.AbstractBlock: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.block.ColorBlock: java.awt.Paint paint> = paint;

        virtualinvoke this.<org.jfree.chart.block.ColorBlock: void setWidth(double)>(width);

        virtualinvoke this.<org.jfree.chart.block.ColorBlock: void setHeight(double)>(height);

        return;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.block.ColorBlock this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.block.ColorBlock;

        $stack1 = this.<org.jfree.chart.block.ColorBlock: java.awt.Paint paint>;

        return $stack1;
    }

    public org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.ui.Size2D $stack3;
        org.jfree.chart.block.ColorBlock this;
        double $stack4, $stack5, $stack6, $stack7;
        java.awt.Graphics2D g2;
        org.jfree.chart.block.RectangleConstraint constraint;

        this := @this: org.jfree.chart.block.ColorBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        constraint := @parameter1: org.jfree.chart.block.RectangleConstraint;

        $stack3 = new org.jfree.chart.ui.Size2D;

        $stack4 = virtualinvoke this.<org.jfree.chart.block.ColorBlock: double getWidth()>();

        $stack5 = virtualinvoke this.<org.jfree.chart.block.ColorBlock: double calculateTotalWidth(double)>($stack4);

        $stack6 = virtualinvoke this.<org.jfree.chart.block.ColorBlock: double getHeight()>();

        $stack7 = virtualinvoke this.<org.jfree.chart.block.ColorBlock: double calculateTotalHeight(double)>($stack6);

        specialinvoke $stack3.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack5, $stack7);

        return $stack3;
    }

    public void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.block.ColorBlock this;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack6;
        java.awt.geom.Rectangle2D area, area#2;

        this := @this: org.jfree.chart.block.ColorBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        area#2 = virtualinvoke this.<org.jfree.chart.block.ColorBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(area);

        virtualinvoke this.<org.jfree.chart.block.ColorBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area#2);

        area#2 = virtualinvoke this.<org.jfree.chart.block.ColorBlock: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(area#2);

        area#2 = virtualinvoke this.<org.jfree.chart.block.ColorBlock: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(area#2);

        $stack6 = this.<org.jfree.chart.block.ColorBlock: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack6);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(area#2);

        return;
    }

    public java.lang.Object draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.lang.Object)
    {
        org.jfree.chart.block.ColorBlock this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D area;
        java.lang.Object params;

        this := @this: org.jfree.chart.block.ColorBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        params := @parameter2: java.lang.Object;

        virtualinvoke this.<org.jfree.chart.block.ColorBlock: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area);

        return null;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.block.ColorBlock this, that;
        boolean $stack3, $stack6, $stack7;
        java.awt.Paint $stack4, $stack5;

        this := @this: org.jfree.chart.block.ColorBlock;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.block.ColorBlock;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.block.ColorBlock) obj;

        $stack5 = this.<org.jfree.chart.block.ColorBlock: java.awt.Paint paint>;

        $stack4 = that.<org.jfree.chart.block.ColorBlock: java.awt.Paint paint>;

        $stack6 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack5, $stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack7 = specialinvoke this.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(obj);

        return $stack7;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.block.ColorBlock this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.block.ColorBlock;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.block.ColorBlock: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.block.ColorBlock this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.block.ColorBlock;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.block.ColorBlock: java.awt.Paint paint> = $stack2;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.block.ColorBlock: long serialVersionUID> = 3383866145634010865L;

        return;
    }
}
