public class org.jfree.chart.renderer.DefaultPolarItemRenderer extends org.jfree.chart.renderer.AbstractRenderer implements org.jfree.chart.renderer.PolarItemRenderer
{
    private org.jfree.chart.plot.PolarPlot plot;
    private org.jfree.chart.util.BooleanList seriesFilled;
    private boolean drawOutlineWhenFilled;
    private transient java.awt.Composite fillComposite;
    private boolean useFillPaint;
    private transient java.awt.Shape legendLine;
    private boolean shapesVisible;
    private boolean connectFirstAndLastPoint;
    private org.jfree.chart.util.ObjectList toolTipGeneratorList;
    private org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator;
    private org.jfree.chart.urls.XYURLGenerator urlGenerator;
    private org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator;
    private org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.util.BooleanList $stack1;
        java.awt.AlphaComposite $stack2;
        java.awt.geom.Line2D$Double $stack3;
        org.jfree.chart.util.ObjectList $stack4;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        specialinvoke this.<org.jfree.chart.renderer.AbstractRenderer: void <init>()>();

        $stack1 = new org.jfree.chart.util.BooleanList;

        specialinvoke $stack1.<org.jfree.chart.util.BooleanList: void <init>()>();

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.BooleanList seriesFilled> = $stack1;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean drawOutlineWhenFilled> = 1;

        $stack2 = staticinvoke <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>(3, 0.3F);

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Composite fillComposite> = $stack2;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean useFillPaint> = 0;

        $stack3 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack3.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(-7.0, 0.0, 7.0, 0.0);

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine> = $stack3;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean shapesVisible> = 1;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean connectFirstAndLastPoint> = 1;

        $stack4 = new org.jfree.chart.util.ObjectList;

        specialinvoke $stack4.<org.jfree.chart.util.ObjectList: void <init>()>();

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.ObjectList toolTipGeneratorList> = $stack4;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = null;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator> = null;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator> = null;

        return;
    }

    public void setPlot(org.jfree.chart.plot.PolarPlot)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.plot.PolarPlot plot;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        plot := @parameter0: org.jfree.chart.plot.PolarPlot;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.plot.PolarPlot plot> = plot;

        return;
    }

    public org.jfree.chart.plot.PolarPlot getPlot()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.plot.PolarPlot $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.plot.PolarPlot plot>;

        return $stack1;
    }

    public boolean getDrawOutlineWhenFilled()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean drawOutlineWhenFilled>;

        return $stack1;
    }

    public void setDrawOutlineWhenFilled(boolean)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        boolean drawOutlineWhenFilled;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        drawOutlineWhenFilled := @parameter0: boolean;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean drawOutlineWhenFilled> = drawOutlineWhenFilled;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Composite getFillComposite()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        java.awt.Composite $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Composite fillComposite>;

        return $stack1;
    }

    public void setFillComposite(java.awt.Composite)
    {
        java.awt.Composite composite;
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        composite := @parameter0: java.awt.Composite;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(composite, "composite");

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Composite fillComposite> = composite;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public boolean getShapesVisible()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean shapesVisible>;

        return $stack1;
    }

    public void setShapesVisible(boolean)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        boolean visible;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean shapesVisible> = visible;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public boolean getConnectFirstAndLastPoint()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean connectFirstAndLastPoint>;

        return $stack1;
    }

    public void setConnectFirstAndLastPoint(boolean)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        boolean connect;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        connect := @parameter0: boolean;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean connectFirstAndLastPoint> = connect;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.plot.PolarPlot p;
        org.jfree.chart.plot.DrawingSupplier result;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        result = null;

        p = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.plot.PolarPlot getPlot()>();

        if p == null goto label1;

        result = virtualinvoke p.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>();

     label1:
        return result;
    }

    public boolean isSeriesFilled(int)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        int series;
        org.jfree.chart.util.BooleanList $stack4;
        java.lang.Boolean b;
        boolean result;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        series := @parameter0: int;

        result = 0;

        $stack4 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.BooleanList seriesFilled>;

        b = virtualinvoke $stack4.<org.jfree.chart.util.BooleanList: java.lang.Boolean getBoolean(int)>(series);

        if b == null goto label1;

        result = virtualinvoke b.<java.lang.Boolean: boolean booleanValue()>();

     label1:
        return result;
    }

    public void setSeriesFilled(int, boolean)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        int series;
        boolean filled;
        org.jfree.chart.util.BooleanList $stack3;
        java.lang.Boolean $stack4;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        series := @parameter0: int;

        filled := @parameter1: boolean;

        $stack3 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.BooleanList seriesFilled>;

        $stack4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(filled);

        virtualinvoke $stack3.<org.jfree.chart.util.BooleanList: void setBoolean(int,java.lang.Boolean)>(series, $stack4);

        return;
    }

    public boolean getUseFillPaint()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean useFillPaint>;

        return $stack1;
    }

    public void setUseFillPaint(boolean)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        boolean flag;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        flag := @parameter0: boolean;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean useFillPaint> = flag;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Shape getLegendLine()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        java.awt.Shape $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine>;

        return $stack1;
    }

    public void setLegendLine(java.awt.Shape)
    {
        java.awt.Shape line;
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        line := @parameter0: java.awt.Shape;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(line, "line");

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine> = line;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    protected void addEntity(org.jfree.chart.entity.EntityCollection, java.awt.Shape, org.jfree.data.xy.XYDataset, int, int, double, double)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        int series, item, $stack32;
        boolean $stack15;
        java.awt.Shape area, hotspot;
        org.jfree.chart.labels.XYToolTipGenerator generator;
        org.jfree.chart.urls.XYURLGenerator $stack17, $stack19;
        org.jfree.chart.entity.XYItemEntity $stack18;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.chart.entity.EntityCollection entities;
        org.jfree.chart.plot.PolarPlot $stack33;
        org.jfree.chart.plot.PlotOrientation $stack34, $stack35;
        java.awt.geom.Ellipse2D$Double $stack36, $stack44;
        double entityY, entityX, $stack37, $stack38, $stack45, $stack46, r, w;
        java.lang.String r#6, w#17;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        entities := @parameter0: org.jfree.chart.entity.EntityCollection;

        area := @parameter1: java.awt.Shape;

        dataset := @parameter2: org.jfree.data.xy.XYDataset;

        series := @parameter3: int;

        item := @parameter4: int;

        entityX := @parameter5: double;

        entityY := @parameter6: double;

        $stack15 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean getItemCreateEntity(int,int)>(series, item);

        if $stack15 != 0 goto label1;

        return;

     label1:
        hotspot = area;

        if area != null goto label3;

        $stack32 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: int getDefaultEntityRadius()>();

        r = (double) $stack32;

        w = r * 2.0;

        $stack33 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.plot.PolarPlot getPlot()>();

        $stack34 = virtualinvoke $stack33.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack35 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if $stack34 != $stack35 goto label2;

        $stack44 = new java.awt.geom.Ellipse2D$Double;

        $stack46 = entityX - r;

        $stack45 = entityY - r;

        specialinvoke $stack44.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($stack46, $stack45, w, w);

        hotspot = $stack44;

        goto label3;

     label2:
        $stack36 = new java.awt.geom.Ellipse2D$Double;

        $stack38 = entityY - r;

        $stack37 = entityX - r;

        specialinvoke $stack36.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($stack38, $stack37, w, w);

        hotspot = $stack36;

     label3:
        r#6 = null;

        generator = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator getToolTipGenerator(int,int)>(series, item);

        if generator == null goto label4;

        r#6 = interfaceinvoke generator.<org.jfree.chart.labels.XYToolTipGenerator: java.lang.String generateToolTip(org.jfree.data.xy.XYDataset,int,int)>(dataset, series, item);

     label4:
        w#17 = null;

        $stack17 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator getURLGenerator()>();

        if $stack17 == null goto label5;

        $stack19 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator getURLGenerator()>();

        w#17 = interfaceinvoke $stack19.<org.jfree.chart.urls.XYURLGenerator: java.lang.String generateURL(org.jfree.data.xy.XYDataset,int,int)>(dataset, series, item);

     label5:
        $stack18 = new org.jfree.chart.entity.XYItemEntity;

        specialinvoke $stack18.<org.jfree.chart.entity.XYItemEntity: void <init>(java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,java.lang.String,java.lang.String)>(hotspot, dataset, series, item, r#6, w#17);

        interfaceinvoke entities.<org.jfree.chart.entity.EntityCollection: void add(org.jfree.chart.entity.ChartEntity)>($stack18);

        return;
    }

    public void drawSeries(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotRenderingInfo, org.jfree.chart.plot.PolarPlot, org.jfree.data.xy.XYDataset, int)
    {
        org.jfree.data.xy.XYDataset dataset;
        int seriesIndex, numPoints, $stack20, segType, y, $stack35, $stack49, $stack93, $stack94, $stack100, $stack101, i, p#17;
        org.jfree.chart.plot.PolarPlot plot;
        org.jfree.chart.axis.ValueAxis axis;
        boolean $stack22, $stack23, $stack26, $stack27, $stack40, $stack42, $stack46, $stack50, $stack77, $stack29;
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack24, $stack52, $stack79, paint;
        java.awt.Stroke $stack25, $stack53;
        org.jfree.chart.plot.PlotRenderingInfo info;
        float $stack31, $stack33, $stack95, $stack96, $stack102, $stack103;
        java.awt.Shape $stack36, shape;
        double $stack37, $stack38, $stack44, $stack45, $stack47, $stack48, theta, radius;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.ChartRenderingInfo $stack70;
        java.awt.Composite $stack76, i#6;
        java.lang.AssertionError $stack89;
        java.awt.geom.GeneralPath $stack99, poly;
        java.awt.Point p;
        org.jfree.chart.entity.EntityCollection i#7;
        java.awt.geom.PathIterator theta#8;
        float[] radius#16;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        dataArea := @parameter1: java.awt.geom.Rectangle2D;

        info := @parameter2: org.jfree.chart.plot.PlotRenderingInfo;

        plot := @parameter3: org.jfree.chart.plot.PolarPlot;

        dataset := @parameter4: org.jfree.data.xy.XYDataset;

        seriesIndex := @parameter5: int;

        numPoints = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: int getItemCount(int)>(seriesIndex);

        if numPoints != 0 goto label01;

        return;

     label01:
        poly = null;

        $stack20 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: int indexOf(org.jfree.data.xy.XYDataset)>(dataset);

        axis = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.ValueAxis getAxisForDataset(int)>($stack20);

        i = 0;

     label02:
        if i >= numPoints goto label05;

        theta = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(seriesIndex, i);

        radius = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(seriesIndex, i);

        p = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateToJava2D(double,double,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>(theta, radius, axis, dataArea);

        if poly != null goto label03;

        $stack99 = new java.awt.geom.GeneralPath;

        specialinvoke $stack99.<java.awt.geom.GeneralPath: void <init>()>();

        poly = $stack99;

        $stack100 = p.<java.awt.Point: int x>;

        $stack103 = (float) $stack100;

        $stack101 = p.<java.awt.Point: int y>;

        $stack102 = (float) $stack101;

        virtualinvoke $stack99.<java.awt.geom.GeneralPath: void moveTo(float,float)>($stack103, $stack102);

        goto label04;

     label03:
        $stack93 = p.<java.awt.Point: int x>;

        $stack96 = (float) $stack93;

        $stack94 = p.<java.awt.Point: int y>;

        $stack95 = (float) $stack94;

        virtualinvoke poly.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack96, $stack95);

     label04:
        i = i + 1;

        goto label02;

     label05:
        $stack22 = <org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean $assertionsDisabled>;

        if $stack22 != 0 goto label06;

        if poly != null goto label06;

        $stack89 = new java.lang.AssertionError;

        specialinvoke $stack89.<java.lang.AssertionError: void <init>()>();

        throw $stack89;

     label06:
        $stack23 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean getConnectFirstAndLastPoint()>();

        if $stack23 == 0 goto label07;

        virtualinvoke poly.<java.awt.geom.GeneralPath: void closePath()>();

     label07:
        $stack24 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Paint lookupSeriesPaint(int)>(seriesIndex);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack24);

        $stack25 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Stroke lookupSeriesStroke(int)>(seriesIndex);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack25);

        $stack26 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean isSeriesFilled(int)>(seriesIndex);

        if $stack26 == 0 goto label09;

        i#6 = virtualinvoke g2.<java.awt.Graphics2D: java.awt.Composite getComposite()>();

        $stack76 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Composite fillComposite>;

        virtualinvoke g2.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>($stack76);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(poly);

        virtualinvoke g2.<java.awt.Graphics2D: void setComposite(java.awt.Composite)>(i#6);

        $stack77 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean drawOutlineWhenFilled>;

        if $stack77 == 0 goto label08;

        $stack79 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Paint lookupSeriesOutlinePaint(int)>(seriesIndex);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack79);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(poly);

     label08:
        goto label10;

     label09:
        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(poly);

     label10:
        $stack27 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean shapesVisible>;

        if $stack27 == 0 goto label18;

        i#7 = null;

        if info == null goto label11;

        $stack70 = virtualinvoke info.<org.jfree.chart.plot.PlotRenderingInfo: org.jfree.chart.ChartRenderingInfo getOwner()>();

        i#7 = virtualinvoke $stack70.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

     label11:
        theta#8 = virtualinvoke poly.<java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);

        i = 0;

     label12:
        $stack29 = interfaceinvoke theta#8.<java.awt.geom.PathIterator: boolean isDone()>();

        if $stack29 != 0 goto label18;

        radius#16 = newarray (float)[6];

        segType = interfaceinvoke theta#8.<java.awt.geom.PathIterator: int currentSegment(float[])>(radius#16);

        interfaceinvoke theta#8.<java.awt.geom.PathIterator: void next()>();

        if segType == 1 goto label13;

        if segType == 0 goto label13;

        goto label12;

     label13:
        $stack31 = radius#16[0];

        p#17 = staticinvoke <java.lang.Math: int round(float)>($stack31);

        $stack33 = radius#16[1];

        y = staticinvoke <java.lang.Math: int round(float)>($stack33);

        $stack35 = i;

        i = i + 1;

        $stack36 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape getItemShape(int,int)>(seriesIndex, $stack35);

        $stack38 = (double) p#17;

        $stack37 = (double) y;

        shape = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape createTranslatedShape(java.awt.Shape,double,double)>($stack36, $stack38, $stack37);

        $stack40 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean useFillPaint>;

        if $stack40 == 0 goto label14;

        paint = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Paint lookupSeriesFillPaint(int)>(seriesIndex);

        goto label15;

     label14:
        paint = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Paint lookupSeriesPaint(int)>(seriesIndex);

     label15:
        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(paint);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(shape);

        $stack42 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean isSeriesFilled(int)>(seriesIndex);

        if $stack42 == 0 goto label16;

        $stack50 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean drawOutlineWhenFilled>;

        if $stack50 == 0 goto label16;

        $stack52 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Paint lookupSeriesOutlinePaint(int)>(seriesIndex);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack52);

        $stack53 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(seriesIndex);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack53);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(shape);

     label16:
        if i#7 == null goto label17;

        $stack45 = (double) p#17;

        $stack44 = (double) y;

        $stack46 = staticinvoke <org.jfree.chart.util.ShapeUtils: boolean isPointInRect(java.awt.geom.Rectangle2D,double,double)>(dataArea, $stack45, $stack44);

        if $stack46 == 0 goto label17;

        $stack49 = i - 1;

        $stack48 = (double) p#17;

        $stack47 = (double) y;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,double,double)>(i#7, shape, dataset, seriesIndex, $stack49, $stack48, $stack47);

     label17:
        goto label12;

     label18:
        return;
    }

    public void drawAngularGridLines(java.awt.Graphics2D, org.jfree.chart.plot.PolarPlot, java.util.List, java.awt.geom.Rectangle2D)
    {
        java.awt.Graphics2D g2;
        org.jfree.chart.plot.PolarPlot plot;
        java.awt.Font $stack18;
        java.awt.Stroke $stack19;
        java.awt.Paint $stack20, $stack32, $stack39;
        org.jfree.chart.axis.ValueAxis axis;
        boolean $stack22, $stack37, $stack27;
        java.awt.geom.Rectangle2D dataArea;
        java.awt.Point center, p;
        java.util.List ticks;
        java.util.Iterator iterator;
        java.lang.Object $stack28;
        org.jfree.chart.axis.NumberTick tick;
        java.lang.Number $stack29;
        double tickVal, outerValue, centerValue;
        int $stack33, $stack34, $stack35, $stack36, x, y;
        java.lang.String $stack40;
        float $stack41, $stack42;
        org.jfree.chart.ui.TextAnchor $stack43;
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.PolarPlot;

        ticks := @parameter2: java.util.List;

        dataArea := @parameter3: java.awt.geom.Rectangle2D;

        $stack18 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Font getAngleLabelFont()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack18);

        $stack19 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Stroke getAngleGridlineStroke()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack19);

        $stack20 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleGridlinePaint()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack20);

        axis = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.ValueAxis getAxis()>();

        $stack22 = virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: boolean isInverted()>();

        if $stack22 == 0 goto label1;

        outerValue = virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>();

        centerValue = virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: double getUpperBound()>();

        goto label2;

     label1:
        outerValue = virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: double getUpperBound()>();

        centerValue = virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>();

     label2:
        center = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateToJava2D(double,double,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>(0.0, centerValue, axis, dataArea);

        iterator = interfaceinvoke ticks.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack27 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>();

        if $stack27 == 0 goto label5;

        $stack28 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();

        tick = (org.jfree.chart.axis.NumberTick) $stack28;

        $stack29 = virtualinvoke tick.<org.jfree.chart.axis.NumberTick: java.lang.Number getNumber()>();

        tickVal = virtualinvoke $stack29.<java.lang.Number: double doubleValue()>();

        p = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateToJava2D(double,double,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>(tickVal, outerValue, axis, dataArea);

        $stack32 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleGridlinePaint()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack32);

        $stack36 = center.<java.awt.Point: int x>;

        $stack35 = center.<java.awt.Point: int y>;

        $stack34 = p.<java.awt.Point: int x>;

        $stack33 = p.<java.awt.Point: int y>;

        virtualinvoke g2.<java.awt.Graphics2D: void drawLine(int,int,int,int)>($stack36, $stack35, $stack34, $stack33);

        $stack37 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: boolean isAngleLabelsVisible()>();

        if $stack37 == 0 goto label4;

        x = p.<java.awt.Point: int x>;

        y = p.<java.awt.Point: int y>;

        $stack39 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getAngleLabelPaint()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack39);

        $stack40 = virtualinvoke tick.<org.jfree.chart.axis.NumberTick: java.lang.String getText()>();

        $stack41 = (float) x;

        $stack42 = (float) y;

        $stack43 = virtualinvoke tick.<org.jfree.chart.axis.NumberTick: org.jfree.chart.ui.TextAnchor getTextAnchor()>();

        staticinvoke <org.jfree.chart.text.TextUtils: java.awt.geom.Rectangle2D drawAlignedString(java.lang.String,java.awt.Graphics2D,float,float,org.jfree.chart.ui.TextAnchor)>($stack40, g2, $stack41, $stack42, $stack43);

     label4:
        goto label3;

     label5:
        return;
    }

    public void drawRadialGridLines(java.awt.Graphics2D, org.jfree.chart.plot.PolarPlot, org.jfree.chart.axis.ValueAxis, java.util.List, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.axis.ValueAxis radialAxis;
        java.awt.Graphics2D g2;
        java.awt.Font $stack19;
        org.jfree.chart.plot.PolarPlot plot;
        java.awt.Paint $stack20, $stack42;
        java.awt.Stroke $stack21;
        boolean $stack22, $stack28, $stack26;
        java.awt.geom.Rectangle2D dataArea;
        java.awt.Point center, p;
        java.util.List ticks;
        java.util.Iterator iterator;
        java.lang.Object $stack27;
        org.jfree.chart.axis.NumberTick tick;
        double $stack29, $stack31, $stack38, $stack39, $stack40, $stack41, centerValue, $stack44;
        java.lang.Number $stack30;
        int $stack33, $stack34, r, $stack35, upperLeftX, $stack36, upperLeftY, d;
        java.awt.geom.Ellipse2D$Double $stack37;
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.PolarPlot;

        radialAxis := @parameter2: org.jfree.chart.axis.ValueAxis;

        ticks := @parameter3: java.util.List;

        dataArea := @parameter4: java.awt.geom.Rectangle2D;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(radialAxis, "radialAxis");

        $stack19 = virtualinvoke radialAxis.<org.jfree.chart.axis.ValueAxis: java.awt.Font getTickLabelFont()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack19);

        $stack20 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getRadiusGridlinePaint()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack20);

        $stack21 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Stroke getRadiusGridlineStroke()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack21);

        $stack22 = virtualinvoke radialAxis.<org.jfree.chart.axis.ValueAxis: boolean isInverted()>();

        if $stack22 == 0 goto label1;

        centerValue = virtualinvoke radialAxis.<org.jfree.chart.axis.ValueAxis: double getUpperBound()>();

        goto label2;

     label1:
        centerValue = virtualinvoke radialAxis.<org.jfree.chart.axis.ValueAxis: double getLowerBound()>();

     label2:
        center = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateToJava2D(double,double,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>(0.0, centerValue, radialAxis, dataArea);

        iterator = interfaceinvoke ticks.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack26 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>();

        if $stack26 == 0 goto label6;

        $stack27 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();

        tick = (org.jfree.chart.axis.NumberTick) $stack27;

        $stack28 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: boolean isCounterClockwise()>();

        if $stack28 == 0 goto label4;

        $stack44 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: double getAngleOffset()>();

        goto label5;

     label4:
        $stack29 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: double getAngleOffset()>();

        $stack44 = neg $stack29;

     label5:
        $stack30 = virtualinvoke tick.<org.jfree.chart.axis.NumberTick: java.lang.Number getNumber()>();

        $stack31 = virtualinvoke $stack30.<java.lang.Number: double doubleValue()>();

        p = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Point translateToJava2D(double,double,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>($stack44, $stack31, radialAxis, dataArea);

        $stack34 = p.<java.awt.Point: int x>;

        $stack33 = center.<java.awt.Point: int x>;

        r = $stack34 - $stack33;

        $stack35 = center.<java.awt.Point: int x>;

        upperLeftX = $stack35 - r;

        $stack36 = center.<java.awt.Point: int y>;

        upperLeftY = $stack36 - r;

        d = 2 * r;

        $stack37 = new java.awt.geom.Ellipse2D$Double;

        $stack41 = (double) upperLeftX;

        $stack40 = (double) upperLeftY;

        $stack39 = (double) d;

        $stack38 = (double) d;

        specialinvoke $stack37.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($stack41, $stack40, $stack39, $stack38);

        $stack42 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: java.awt.Paint getRadiusGridlinePaint()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack42);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack37);

        goto label3;

     label6:
        return;
    }

    public org.jfree.chart.LegendItem getLegendItem(int)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.plot.PolarPlot plot;
        int $stack17, series;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.chart.labels.XYSeriesLabelGenerator $stack19, $stack20, $stack70, $stack79;
        java.lang.Comparable seriesKey;
        java.lang.String label, toolTipText, urlText;
        java.awt.Shape shape, $stack32;
        boolean $stack24, $stack29, $stack33, $stack34, $stack31;
        java.awt.Stroke stroke, outlineStroke;
        java.awt.Paint outlinePaint, paint;
        org.jfree.chart.LegendItem $stack30;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        series := @parameter0: int;

        plot = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.plot.PolarPlot getPlot()>();

        if plot != null goto label1;

        return null;

     label1:
        $stack17 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: int getIndexOf(org.jfree.chart.renderer.PolarItemRenderer)>(this);

        dataset = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: org.jfree.data.xy.XYDataset getDataset(int)>($stack17);

        if dataset != null goto label2;

        return null;

     label2:
        toolTipText = null;

        $stack19 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>();

        if $stack19 == null goto label3;

        $stack79 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>();

        toolTipText = interfaceinvoke $stack79.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

     label3:
        urlText = null;

        $stack20 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>();

        if $stack20 == null goto label4;

        $stack70 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>();

        urlText = interfaceinvoke $stack70.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

     label4:
        seriesKey = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(series);

        label = virtualinvoke seriesKey.<java.lang.Object: java.lang.String toString()>();

        shape = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape lookupSeriesShape(int)>(series);

        $stack24 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean useFillPaint>;

        if $stack24 == 0 goto label5;

        paint = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Paint lookupSeriesFillPaint(int)>(series);

        goto label6;

     label5:
        paint = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Paint lookupSeriesPaint(int)>(series);

     label6:
        stroke = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Stroke lookupSeriesStroke(int)>(series);

        outlinePaint = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Paint lookupSeriesOutlinePaint(int)>(series);

        outlineStroke = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(series);

        $stack29 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean isSeriesFilled(int)>(series);

        if $stack29 == 0 goto label7;

        $stack33 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean drawOutlineWhenFilled>;

        if $stack33 == 0 goto label7;

        $stack34 = 1;

        goto label8;

     label7:
        $stack34 = 0;

     label8:
        $stack30 = new org.jfree.chart.LegendItem;

        $stack31 = virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean getShapesVisible()>();

        $stack32 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine>;

        specialinvoke $stack30.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.awt.Shape,boolean,java.awt.Paint,boolean,java.awt.Paint,java.awt.Stroke,boolean,java.awt.Shape,java.awt.Stroke,java.awt.Paint)>(label, label, toolTipText, urlText, $stack31, shape, 1, paint, $stack34, outlinePaint, outlineStroke, 1, $stack32, stroke, paint);

        virtualinvoke $stack30.<org.jfree.chart.LegendItem: void setToolTipText(java.lang.String)>(toolTipText);

        virtualinvoke $stack30.<org.jfree.chart.LegendItem: void setURLText(java.lang.String)>(urlText);

        virtualinvoke $stack30.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(dataset);

        virtualinvoke $stack30.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>(seriesKey);

        virtualinvoke $stack30.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(series);

        return $stack30;
    }

    public org.jfree.chart.labels.XYToolTipGenerator getToolTipGenerator(int, int)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        int series, item;
        org.jfree.chart.util.ObjectList $stack4;
        java.lang.Object $stack5;
        org.jfree.chart.labels.XYToolTipGenerator generator;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.ObjectList toolTipGeneratorList>;

        $stack5 = virtualinvoke $stack4.<org.jfree.chart.util.ObjectList: java.lang.Object get(int)>(series);

        generator = (org.jfree.chart.labels.XYToolTipGenerator) $stack5;

        if generator != null goto label1;

        generator = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator>;

     label1:
        return generator;
    }

    public org.jfree.chart.labels.XYToolTipGenerator getSeriesToolTipGenerator(int)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        int series;
        org.jfree.chart.util.ObjectList $stack2;
        java.lang.Object $stack3;
        org.jfree.chart.labels.XYToolTipGenerator $stack4;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        series := @parameter0: int;

        $stack2 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.ObjectList toolTipGeneratorList>;

        $stack3 = virtualinvoke $stack2.<org.jfree.chart.util.ObjectList: java.lang.Object get(int)>(series);

        $stack4 = (org.jfree.chart.labels.XYToolTipGenerator) $stack3;

        return $stack4;
    }

    public void setSeriesToolTipGenerator(int, org.jfree.chart.labels.XYToolTipGenerator)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        int series;
        org.jfree.chart.labels.XYToolTipGenerator generator;
        org.jfree.chart.util.ObjectList $stack3;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        series := @parameter0: int;

        generator := @parameter1: org.jfree.chart.labels.XYToolTipGenerator;

        $stack3 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.ObjectList toolTipGeneratorList>;

        virtualinvoke $stack3.<org.jfree.chart.util.ObjectList: void set(int,java.lang.Object)>(series, generator);

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.labels.XYToolTipGenerator getBaseToolTipGenerator()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.labels.XYToolTipGenerator $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator>;

        return $stack1;
    }

    public void setBaseToolTipGenerator(org.jfree.chart.labels.XYToolTipGenerator)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.labels.XYToolTipGenerator generator;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        generator := @parameter0: org.jfree.chart.labels.XYToolTipGenerator;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = generator;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.urls.XYURLGenerator getURLGenerator()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.urls.XYURLGenerator $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator>;

        return $stack1;
    }

    public void setURLGenerator(org.jfree.chart.urls.XYURLGenerator)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.urls.XYURLGenerator urlGenerator;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        urlGenerator := @parameter0: org.jfree.chart.urls.XYURLGenerator;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = urlGenerator;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.labels.XYSeriesLabelGenerator $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>;

        return $stack1;
    }

    public void setLegendItemToolTipGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.labels.XYSeriesLabelGenerator generator;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        generator := @parameter0: org.jfree.chart.labels.XYSeriesLabelGenerator;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator> = generator;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.labels.XYSeriesLabelGenerator $stack1;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack1 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>;

        return $stack1;
    }

    public void setLegendItemURLGenerator(org.jfree.chart.labels.XYSeriesLabelGenerator)
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        org.jfree.chart.labels.XYSeriesLabelGenerator generator;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        generator := @parameter0: org.jfree.chart.labels.XYSeriesLabelGenerator;

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator> = generator;

        virtualinvoke this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: void fireChangeEvent()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack3, $stack6, $stack7, $stack8, $stack11, $stack12, $stack13, $stack16, $stack17, $stack18, $stack19, $stack20, $stack23, $stack26, $stack29, $stack32, $stack35, $stack36;
        org.jfree.chart.renderer.DefaultPolarItemRenderer that, this;
        org.jfree.chart.util.BooleanList $stack4, $stack5;
        java.awt.Composite $stack9, $stack10;
        java.awt.Shape $stack14, $stack15;
        org.jfree.chart.util.ObjectList $stack21, $stack22;
        org.jfree.chart.labels.XYToolTipGenerator $stack24, $stack25;
        org.jfree.chart.urls.XYURLGenerator $stack27, $stack28;
        org.jfree.chart.labels.XYSeriesLabelGenerator $stack30, $stack31, $stack33, $stack34;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != null goto label01;

        return 0;

     label01:
        $stack3 = obj instanceof org.jfree.chart.renderer.DefaultPolarItemRenderer;

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        that = (org.jfree.chart.renderer.DefaultPolarItemRenderer) obj;

        $stack5 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.BooleanList seriesFilled>;

        $stack4 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.BooleanList seriesFilled>;

        $stack6 = virtualinvoke $stack5.<org.jfree.chart.util.BooleanList: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label03;

        return 0;

     label03:
        $stack8 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean drawOutlineWhenFilled>;

        $stack7 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean drawOutlineWhenFilled>;

        if $stack8 == $stack7 goto label04;

        return 0;

     label04:
        $stack10 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Composite fillComposite>;

        $stack9 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Composite fillComposite>;

        $stack11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack10, $stack9);

        if $stack11 != 0 goto label05;

        return 0;

     label05:
        $stack13 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean useFillPaint>;

        $stack12 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean useFillPaint>;

        if $stack13 == $stack12 goto label06;

        return 0;

     label06:
        $stack15 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine>;

        $stack14 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine>;

        $stack16 = staticinvoke <org.jfree.chart.util.ShapeUtils: boolean equal(java.awt.Shape,java.awt.Shape)>($stack15, $stack14);

        if $stack16 != 0 goto label07;

        return 0;

     label07:
        $stack18 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean shapesVisible>;

        $stack17 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean shapesVisible>;

        if $stack18 == $stack17 goto label08;

        return 0;

     label08:
        $stack20 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean connectFirstAndLastPoint>;

        $stack19 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean connectFirstAndLastPoint>;

        if $stack20 == $stack19 goto label09;

        return 0;

     label09:
        $stack22 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.ObjectList toolTipGeneratorList>;

        $stack21 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.ObjectList toolTipGeneratorList>;

        $stack23 = virtualinvoke $stack22.<org.jfree.chart.util.ObjectList: boolean equals(java.lang.Object)>($stack21);

        if $stack23 != 0 goto label10;

        return 0;

     label10:
        $stack25 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator>;

        $stack24 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator>;

        $stack26 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack25, $stack24);

        if $stack26 != 0 goto label11;

        return 0;

     label11:
        $stack28 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator>;

        $stack27 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator>;

        $stack29 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack28, $stack27);

        if $stack29 != 0 goto label12;

        return 0;

     label12:
        $stack31 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>;

        $stack30 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>;

        $stack32 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack31, $stack30);

        if $stack32 != 0 goto label13;

        return 0;

     label13:
        $stack34 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>;

        $stack33 = that.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>;

        $stack35 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack34, $stack33);

        if $stack35 != 0 goto label14;

        return 0;

     label14:
        $stack36 = specialinvoke this.<org.jfree.chart.renderer.AbstractRenderer: boolean equals(java.lang.Object)>(obj);

        return $stack36;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.renderer.DefaultPolarItemRenderer this, clone;
        java.lang.Object $stack2, $stack5, $stack8, $stack19, $stack23, $stack27, $stack31;
        java.awt.Shape $stack3, $stack34, $stack35;
        org.jfree.chart.util.BooleanList $stack4, $stack6;
        org.jfree.chart.util.ObjectList $stack7, $stack9;
        org.jfree.chart.labels.XYToolTipGenerator $stack10, $stack30, $stack32;
        boolean $stack11, $stack13, $stack15, $stack17;
        org.jfree.chart.urls.XYURLGenerator $stack12, $stack26, $stack28;
        org.jfree.chart.labels.XYSeriesLabelGenerator $stack14, $stack16, $stack18, $stack20, $stack22, $stack24;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        $stack2 = specialinvoke this.<org.jfree.chart.renderer.AbstractRenderer: java.lang.Object clone()>();

        clone = (org.jfree.chart.renderer.DefaultPolarItemRenderer) $stack2;

        $stack3 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine>;

        if $stack3 == null goto label1;

        $stack34 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine>;

        $stack35 = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape clone(java.awt.Shape)>($stack34);

        clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine> = $stack35;

     label1:
        $stack4 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.BooleanList seriesFilled>;

        $stack5 = virtualinvoke $stack4.<org.jfree.chart.util.BooleanList: java.lang.Object clone()>();

        $stack6 = (org.jfree.chart.util.BooleanList) $stack5;

        clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.BooleanList seriesFilled> = $stack6;

        $stack7 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.ObjectList toolTipGeneratorList>;

        $stack8 = virtualinvoke $stack7.<org.jfree.chart.util.ObjectList: java.lang.Object clone()>();

        $stack9 = (org.jfree.chart.util.ObjectList) $stack8;

        clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.util.ObjectList toolTipGeneratorList> = $stack9;

        $stack10 = clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator>;

        $stack11 = $stack10 instanceof org.jfree.chart.util.PublicCloneable;

        if $stack11 == 0 goto label2;

        $stack30 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator>;

        $stack31 = staticinvoke <org.jfree.chart.util.CloneUtils: java.lang.Object clone(java.lang.Object)>($stack30);

        $stack32 = (org.jfree.chart.labels.XYToolTipGenerator) $stack31;

        clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYToolTipGenerator baseToolTipGenerator> = $stack32;

     label2:
        $stack12 = clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator>;

        $stack13 = $stack12 instanceof org.jfree.chart.util.PublicCloneable;

        if $stack13 == 0 goto label3;

        $stack26 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator>;

        $stack27 = staticinvoke <org.jfree.chart.util.CloneUtils: java.lang.Object clone(java.lang.Object)>($stack26);

        $stack28 = (org.jfree.chart.urls.XYURLGenerator) $stack27;

        clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.urls.XYURLGenerator urlGenerator> = $stack28;

     label3:
        $stack14 = clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>;

        $stack15 = $stack14 instanceof org.jfree.chart.util.PublicCloneable;

        if $stack15 == 0 goto label4;

        $stack22 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator>;

        $stack23 = staticinvoke <org.jfree.chart.util.CloneUtils: java.lang.Object clone(java.lang.Object)>($stack22);

        $stack24 = (org.jfree.chart.labels.XYSeriesLabelGenerator) $stack23;

        clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemToolTipGenerator> = $stack24;

     label4:
        $stack16 = clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>;

        $stack17 = $stack16 instanceof org.jfree.chart.util.PublicCloneable;

        if $stack17 == 0 goto label5;

        $stack18 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator>;

        $stack19 = staticinvoke <org.jfree.chart.util.CloneUtils: java.lang.Object clone(java.lang.Object)>($stack18);

        $stack20 = (org.jfree.chart.labels.XYSeriesLabelGenerator) $stack19;

        clone.<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator legendItemURLGenerator> = $stack20;

     label5:
        return clone;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        java.awt.Shape $stack2;
        java.awt.Composite $stack3;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Composite readComposite(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Composite fillComposite> = $stack3;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.renderer.DefaultPolarItemRenderer this;
        java.awt.Shape $stack2;
        java.awt.Composite $stack3;

        this := @this: org.jfree.chart.renderer.DefaultPolarItemRenderer;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Shape legendLine>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.renderer.DefaultPolarItemRenderer: java.awt.Composite fillComposite>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeComposite(java.awt.Composite,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack2;

        $stack0 = class "Lorg/jfree/chart/renderer/DefaultPolarItemRenderer;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        <org.jfree.chart.renderer.DefaultPolarItemRenderer: boolean $assertionsDisabled> = $stack2;

        return;
    }
}
