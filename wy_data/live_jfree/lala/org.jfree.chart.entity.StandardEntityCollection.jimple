public class org.jfree.chart.entity.StandardEntityCollection extends java.lang.Object implements org.jfree.chart.entity.EntityCollection, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.List entities;

    public void <init>()
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        java.util.ArrayList $stack1;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities> = $stack1;

        return;
    }

    public int getEntityCount()
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        $stack1 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public org.jfree.chart.entity.ChartEntity getEntity(int)
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        int index;
        java.util.List $stack2;
        java.lang.Object $stack3;
        org.jfree.chart.entity.ChartEntity $stack4;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        index := @parameter0: int;

        $stack2 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(index);

        $stack4 = (org.jfree.chart.entity.ChartEntity) $stack3;

        return $stack4;
    }

    public void clear()
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        java.util.List $stack1;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        $stack1 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        interfaceinvoke $stack1.<java.util.List: void clear()>();

        return;
    }

    public void add(org.jfree.chart.entity.ChartEntity)
    {
        org.jfree.chart.entity.ChartEntity entity;
        org.jfree.chart.entity.StandardEntityCollection this;
        java.util.List $stack2;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        entity := @parameter0: org.jfree.chart.entity.ChartEntity;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(entity, "entity");

        $stack2 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(entity);

        return;
    }

    public void addAll(org.jfree.chart.entity.EntityCollection)
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        org.jfree.chart.entity.EntityCollection collection;
        java.util.List $stack2;
        java.util.Collection $stack3;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        collection := @parameter0: org.jfree.chart.entity.EntityCollection;

        $stack2 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack3 = interfaceinvoke collection.<org.jfree.chart.entity.EntityCollection: java.util.Collection getEntities()>();

        interfaceinvoke $stack2.<java.util.List: boolean addAll(java.util.Collection)>($stack3);

        return;
    }

    public org.jfree.chart.entity.ChartEntity getEntity(double, double)
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        java.util.List $stack8, $stack10;
        int entityCount, i;
        java.lang.Object $stack11;
        org.jfree.chart.entity.ChartEntity entity;
        java.awt.Shape $stack12;
        double x, y;
        boolean $stack13;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        x := @parameter0: double;

        y := @parameter1: double;

        $stack8 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        entityCount = interfaceinvoke $stack8.<java.util.List: int size()>();

        i = entityCount - 1;

     label1:
        if i < 0 goto label3;

        $stack10 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack11 = interfaceinvoke $stack10.<java.util.List: java.lang.Object get(int)>(i);

        entity = (org.jfree.chart.entity.ChartEntity) $stack11;

        $stack12 = virtualinvoke entity.<org.jfree.chart.entity.ChartEntity: java.awt.Shape getArea()>();

        $stack13 = interfaceinvoke $stack12.<java.awt.Shape: boolean contains(double,double)>(x, y);

        if $stack13 == 0 goto label2;

        return entity;

     label2:
        i = i + -1;

        goto label1;

     label3:
        return null;
    }

    public java.util.Collection getEntities()
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        java.util.List $stack1;
        java.util.Collection $stack2;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        $stack1 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($stack1);

        return $stack2;
    }

    public java.util.Iterator iterator()
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        java.util.List $stack1;
        java.util.Iterator $stack2;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        $stack1 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: java.util.Iterator iterator()>();

        return $stack2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.entity.StandardEntityCollection this, that;
        boolean $stack3, $stack6;
        java.util.List $stack4, $stack5;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.entity.StandardEntityCollection;

        if $stack3 == 0 goto label2;

        that = (org.jfree.chart.entity.StandardEntityCollection) obj;

        $stack5 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack4 = that.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        return $stack6;

     label2:
        return 0;
    }

    public int hashCode()
    {
        org.jfree.chart.entity.StandardEntityCollection this;
        java.util.List $stack2;
        int $stack3, $stack4, hash#2;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        $stack3 = 29 * 5;

        $stack2 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack2);

        hash#2 = $stack3 + $stack4;

        return hash#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.entity.StandardEntityCollection this, clone;
        java.lang.Object $stack4, $stack11, $stack13;
        java.util.ArrayList $stack5;
        java.util.List $stack6, $stack8, $stack10, $stack12;
        int $stack7, $stack9, i;
        org.jfree.chart.entity.ChartEntity entity, $stack14;

        this := @this: org.jfree.chart.entity.StandardEntityCollection;

        $stack4 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        clone = (org.jfree.chart.entity.StandardEntityCollection) $stack4;

        $stack5 = new java.util.ArrayList;

        $stack6 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack7 = interfaceinvoke $stack6.<java.util.List: int size()>();

        specialinvoke $stack5.<java.util.ArrayList: void <init>(int)>($stack7);

        clone.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities> = $stack5;

        i = 0;

     label1:
        $stack8 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack9 = interfaceinvoke $stack8.<java.util.List: int size()>();

        if i >= $stack9 goto label2;

        $stack10 = this.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack11 = interfaceinvoke $stack10.<java.util.List: java.lang.Object get(int)>(i);

        entity = (org.jfree.chart.entity.ChartEntity) $stack11;

        $stack12 = clone.<org.jfree.chart.entity.StandardEntityCollection: java.util.List entities>;

        $stack13 = virtualinvoke entity.<org.jfree.chart.entity.ChartEntity: java.lang.Object clone()>();

        $stack14 = (org.jfree.chart.entity.ChartEntity) $stack13;

        interfaceinvoke $stack12.<java.util.List: boolean add(java.lang.Object)>($stack14);

        i = i + 1;

        goto label1;

     label2:
        return clone;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.entity.StandardEntityCollection: long serialVersionUID> = 5384773031184897047L;

        return;
    }
}
