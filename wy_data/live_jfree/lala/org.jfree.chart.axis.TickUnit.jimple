public abstract class org.jfree.chart.axis.TickUnit extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    private static final long serialVersionUID;
    private double size;
    private int minorTickCount;

    public void <init>(double)
    {
        org.jfree.chart.axis.TickUnit this;
        double size;

        this := @this: org.jfree.chart.axis.TickUnit;

        size := @parameter0: double;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jfree.chart.axis.TickUnit: double size> = size;

        return;
    }

    public void <init>(double, int)
    {
        org.jfree.chart.axis.TickUnit this;
        double size;
        int minorTickCount;

        this := @this: org.jfree.chart.axis.TickUnit;

        size := @parameter0: double;

        minorTickCount := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jfree.chart.axis.TickUnit: double size> = size;

        this.<org.jfree.chart.axis.TickUnit: int minorTickCount> = minorTickCount;

        return;
    }

    public double getSize()
    {
        org.jfree.chart.axis.TickUnit this;
        double $stack1;

        this := @this: org.jfree.chart.axis.TickUnit;

        $stack1 = this.<org.jfree.chart.axis.TickUnit: double size>;

        return $stack1;
    }

    public int getMinorTickCount()
    {
        org.jfree.chart.axis.TickUnit this;
        int $stack1;

        this := @this: org.jfree.chart.axis.TickUnit;

        $stack1 = this.<org.jfree.chart.axis.TickUnit: int minorTickCount>;

        return $stack1;
    }

    public java.lang.String valueToString(double)
    {
        double value;
        java.lang.String $stack3;
        org.jfree.chart.axis.TickUnit this;

        this := @this: org.jfree.chart.axis.TickUnit;

        value := @parameter0: double;

        $stack3 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(value);

        return $stack3;
    }

    public int compareTo(java.lang.Object)
    {
        java.lang.Object object;
        boolean $stack3;
        org.jfree.chart.axis.TickUnit other, this;
        double $stack4, $stack5, $stack7, $stack8;
        byte $stack6, $stack9;

        this := @this: org.jfree.chart.axis.TickUnit;

        object := @parameter0: java.lang.Object;

        $stack3 = object instanceof org.jfree.chart.axis.TickUnit;

        if $stack3 == 0 goto label3;

        other = (org.jfree.chart.axis.TickUnit) object;

        $stack4 = this.<org.jfree.chart.axis.TickUnit: double size>;

        $stack5 = virtualinvoke other.<org.jfree.chart.axis.TickUnit: double getSize()>();

        $stack6 = $stack4 cmpl $stack5;

        if $stack6 <= 0 goto label1;

        return 1;

     label1:
        $stack7 = this.<org.jfree.chart.axis.TickUnit: double size>;

        $stack8 = virtualinvoke other.<org.jfree.chart.axis.TickUnit: double getSize()>();

        $stack9 = $stack7 cmpg $stack8;

        if $stack9 >= 0 goto label2;

        return -1;

     label2:
        return 0;

     label3:
        return -1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.axis.TickUnit this, that;
        boolean $stack3;
        double $stack4, $stack5;
        byte $stack6;
        int $stack7, $stack8;

        this := @this: org.jfree.chart.axis.TickUnit;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.axis.TickUnit;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.axis.TickUnit) obj;

        $stack5 = this.<org.jfree.chart.axis.TickUnit: double size>;

        $stack4 = that.<org.jfree.chart.axis.TickUnit: double size>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.axis.TickUnit: int minorTickCount>;

        $stack7 = that.<org.jfree.chart.axis.TickUnit: int minorTickCount>;

        if $stack8 == $stack7 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.axis.TickUnit this;
        double $stack3, $stack8;
        byte $stack4;
        long $stack5, $stack6, $stack9;
        int $stack7;

        this := @this: org.jfree.chart.axis.TickUnit;

        $stack3 = this.<org.jfree.chart.axis.TickUnit: double size>;

        $stack4 = $stack3 cmpl 0.0;

        if $stack4 == 0 goto label1;

        $stack8 = this.<org.jfree.chart.axis.TickUnit: double size>;

        $stack9 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack8);

        goto label2;

     label1:
        $stack9 = 0L;

     label2:
        $stack5 = $stack9 >>> 32;

        $stack6 = $stack9 ^ $stack5;

        $stack7 = (int) $stack6;

        return $stack7;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.axis.TickUnit: long serialVersionUID> = 510179855057013974L;

        return;
    }
}
