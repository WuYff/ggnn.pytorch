public class org.jfree.chart.title.TextTitle extends org.jfree.chart.title.Title implements java.io.Serializable, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable
{
    private static final long serialVersionUID;
    public static final java.awt.Font DEFAULT_FONT;
    public static final java.awt.Paint DEFAULT_TEXT_PAINT;
    private java.lang.String text;
    private java.awt.Font font;
    private org.jfree.chart.ui.HorizontalAlignment textAlignment;
    private transient java.awt.Paint paint;
    private transient java.awt.Paint backgroundPaint;
    private java.lang.String toolTipText;
    private java.lang.String urlText;
    private org.jfree.chart.text.TextBlock content;
    private boolean expandToFitSpace;
    private int maximumLinesToDisplay;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.jfree.chart.title.TextTitle this;

        this := @this: org.jfree.chart.title.TextTitle;

        specialinvoke this.<org.jfree.chart.title.TextTitle: void <init>(java.lang.String)>("");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.String text;
        org.jfree.chart.ui.RectangleInsets $stack2;
        org.jfree.chart.ui.VerticalAlignment $stack3;
        org.jfree.chart.ui.HorizontalAlignment $stack4;
        org.jfree.chart.ui.RectangleEdge $stack5;
        java.awt.Paint $stack6;
        java.awt.Font $stack7;

        this := @this: org.jfree.chart.title.TextTitle;

        text := @parameter0: java.lang.String;

        $stack7 = <org.jfree.chart.title.TextTitle: java.awt.Font DEFAULT_FONT>;

        $stack6 = <org.jfree.chart.title.TextTitle: java.awt.Paint DEFAULT_TEXT_PAINT>;

        $stack5 = <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge DEFAULT_POSITION>;

        $stack4 = <org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment DEFAULT_HORIZONTAL_ALIGNMENT>;

        $stack3 = <org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment DEFAULT_VERTICAL_ALIGNMENT>;

        $stack2 = <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleInsets DEFAULT_PADDING>;

        specialinvoke this.<org.jfree.chart.title.TextTitle: void <init>(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.ui.RectangleEdge,org.jfree.chart.ui.HorizontalAlignment,org.jfree.chart.ui.VerticalAlignment,org.jfree.chart.ui.RectangleInsets)>(text, $stack7, $stack6, $stack5, $stack4, $stack3, $stack2);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font)
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.String text;
        java.awt.Font font;
        org.jfree.chart.ui.RectangleInsets $stack3;
        org.jfree.chart.ui.VerticalAlignment $stack4;
        org.jfree.chart.ui.HorizontalAlignment $stack5;
        org.jfree.chart.ui.RectangleEdge $stack6;
        java.awt.Paint $stack7;

        this := @this: org.jfree.chart.title.TextTitle;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        $stack7 = <org.jfree.chart.title.TextTitle: java.awt.Paint DEFAULT_TEXT_PAINT>;

        $stack6 = <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge DEFAULT_POSITION>;

        $stack5 = <org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment DEFAULT_HORIZONTAL_ALIGNMENT>;

        $stack4 = <org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment DEFAULT_VERTICAL_ALIGNMENT>;

        $stack3 = <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleInsets DEFAULT_PADDING>;

        specialinvoke this.<org.jfree.chart.title.TextTitle: void <init>(java.lang.String,java.awt.Font,java.awt.Paint,org.jfree.chart.ui.RectangleEdge,org.jfree.chart.ui.HorizontalAlignment,org.jfree.chart.ui.VerticalAlignment,org.jfree.chart.ui.RectangleInsets)>(text, font, $stack7, $stack6, $stack5, $stack4, $stack3);

        return;
    }

    public void <init>(java.lang.String, java.awt.Font, java.awt.Paint, org.jfree.chart.ui.RectangleEdge, org.jfree.chart.ui.HorizontalAlignment, org.jfree.chart.ui.VerticalAlignment, org.jfree.chart.ui.RectangleInsets)
    {
        org.jfree.chart.title.TextTitle this;
        org.jfree.chart.ui.RectangleEdge position;
        org.jfree.chart.ui.HorizontalAlignment horizontalAlignment;
        org.jfree.chart.ui.VerticalAlignment verticalAlignment;
        org.jfree.chart.ui.RectangleInsets padding;
        java.lang.String text;
        java.awt.Font font;
        java.awt.Paint paint;
        java.lang.NullPointerException $stack8, $stack9, $stack10;

        this := @this: org.jfree.chart.title.TextTitle;

        text := @parameter0: java.lang.String;

        font := @parameter1: java.awt.Font;

        paint := @parameter2: java.awt.Paint;

        position := @parameter3: org.jfree.chart.ui.RectangleEdge;

        horizontalAlignment := @parameter4: org.jfree.chart.ui.HorizontalAlignment;

        verticalAlignment := @parameter5: org.jfree.chart.ui.VerticalAlignment;

        padding := @parameter6: org.jfree.chart.ui.RectangleInsets;

        specialinvoke this.<org.jfree.chart.title.Title: void <init>(org.jfree.chart.ui.RectangleEdge,org.jfree.chart.ui.HorizontalAlignment,org.jfree.chart.ui.VerticalAlignment,org.jfree.chart.ui.RectangleInsets)>(position, horizontalAlignment, verticalAlignment, padding);

        this.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace> = 0;

        this.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay> = 2147483647;

        if text != null goto label1;

        $stack10 = new java.lang.NullPointerException;

        specialinvoke $stack10.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null \'text\' argument.");

        throw $stack10;

     label1:
        if font != null goto label2;

        $stack9 = new java.lang.NullPointerException;

        specialinvoke $stack9.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null \'font\' argument.");

        throw $stack9;

     label2:
        if paint != null goto label3;

        $stack8 = new java.lang.NullPointerException;

        specialinvoke $stack8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null \'paint\' argument.");

        throw $stack8;

     label3:
        this.<org.jfree.chart.title.TextTitle: java.lang.String text> = text;

        this.<org.jfree.chart.title.TextTitle: java.awt.Font font> = font;

        this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint> = paint;

        this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment> = horizontalAlignment;

        this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint> = null;

        this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content> = null;

        this.<org.jfree.chart.title.TextTitle: java.lang.String toolTipText> = null;

        this.<org.jfree.chart.title.TextTitle: java.lang.String urlText> = null;

        return;
    }

    public java.lang.String getText()
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        return $stack1;
    }

    public void setText(java.lang.String)
    {
        java.lang.String text, $stack2;
        org.jfree.chart.title.TextTitle this;
        boolean $stack3;
        org.jfree.chart.event.TitleChangeEvent $stack4;

        this := @this: org.jfree.chart.title.TextTitle;

        text := @parameter0: java.lang.String;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(text, "text");

        $stack2 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>(text);

        if $stack3 != 0 goto label1;

        this.<org.jfree.chart.title.TextTitle: java.lang.String text> = text;

        $stack4 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack4);

     label1:
        return;
    }

    public org.jfree.chart.ui.HorizontalAlignment getTextAlignment()
    {
        org.jfree.chart.title.TextTitle this;
        org.jfree.chart.ui.HorizontalAlignment $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment>;

        return $stack1;
    }

    public void setTextAlignment(org.jfree.chart.ui.HorizontalAlignment)
    {
        org.jfree.chart.ui.HorizontalAlignment alignment;
        org.jfree.chart.title.TextTitle this;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.TextTitle;

        alignment := @parameter0: org.jfree.chart.ui.HorizontalAlignment;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(alignment, "alignment");

        this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment> = alignment;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public java.awt.Font getFont()
    {
        org.jfree.chart.title.TextTitle this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        return $stack1;
    }

    public void setFont(java.awt.Font)
    {
        java.awt.Font font, $stack2;
        org.jfree.chart.title.TextTitle this;
        boolean $stack3;
        org.jfree.chart.event.TitleChangeEvent $stack4;

        this := @this: org.jfree.chart.title.TextTitle;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        $stack2 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        $stack3 = virtualinvoke $stack2.<java.awt.Font: boolean equals(java.lang.Object)>(font);

        if $stack3 != 0 goto label1;

        this.<org.jfree.chart.title.TextTitle: java.awt.Font font> = font;

        $stack4 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack4);

     label1:
        return;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.title.TextTitle this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        return $stack1;
    }

    public void setPaint(java.awt.Paint)
    {
        java.awt.Paint paint, $stack2;
        org.jfree.chart.title.TextTitle this;
        boolean $stack3;
        org.jfree.chart.event.TitleChangeEvent $stack4;

        this := @this: org.jfree.chart.title.TextTitle;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        $stack2 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        $stack3 = virtualinvoke $stack2.<java.lang.Object: boolean equals(java.lang.Object)>(paint);

        if $stack3 != 0 goto label1;

        this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint> = paint;

        $stack4 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack4);

     label1:
        return;
    }

    public java.awt.Paint getBackgroundPaint()
    {
        org.jfree.chart.title.TextTitle this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>;

        return $stack1;
    }

    public void setBackgroundPaint(java.awt.Paint)
    {
        org.jfree.chart.title.TextTitle this;
        java.awt.Paint paint;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.TextTitle;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint> = paint;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public java.lang.String getToolTipText()
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: java.lang.String toolTipText>;

        return $stack1;
    }

    public void setToolTipText(java.lang.String)
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.String text;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.TextTitle;

        text := @parameter0: java.lang.String;

        this.<org.jfree.chart.title.TextTitle: java.lang.String toolTipText> = text;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public java.lang.String getURLText()
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: java.lang.String urlText>;

        return $stack1;
    }

    public void setURLText(java.lang.String)
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.String text;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.TextTitle;

        text := @parameter0: java.lang.String;

        this.<org.jfree.chart.title.TextTitle: java.lang.String urlText> = text;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public boolean getExpandToFitSpace()
    {
        org.jfree.chart.title.TextTitle this;
        boolean $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>;

        return $stack1;
    }

    public void setExpandToFitSpace(boolean)
    {
        org.jfree.chart.title.TextTitle this;
        boolean expand;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.TextTitle;

        expand := @parameter0: boolean;

        this.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace> = expand;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public int getMaximumLinesToDisplay()
    {
        org.jfree.chart.title.TextTitle this;
        int $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = this.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay>;

        return $stack1;
    }

    public void setMaximumLinesToDisplay(int)
    {
        org.jfree.chart.title.TextTitle this;
        int max;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.TextTitle;

        max := @parameter0: int;

        this.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay> = max;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.title.TextTitle this;
        org.jfree.chart.block.RectangleConstraint constraint, cc;
        org.jfree.chart.block.LengthConstraintType w, h, $stack10, $stack11, $stack12, $stack24, $stack25, $stack26, $stack31, $stack32, $stack33, $stack40, $stack41, $stack42;
        org.jfree.chart.ui.Size2D $stack14, contentSize;
        double $stack15, $stack16, $stack17, $stack18, $stack29;
        java.lang.AssertionError $stack23;
        java.lang.RuntimeException $stack27, $stack28, $stack34, $stack43, $stack44;
        java.awt.Graphics2D g2;
        org.jfree.data.Range $stack35, $stack36, $stack38;
        boolean $stack13;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        constraint := @parameter1: org.jfree.chart.block.RectangleConstraint;

        cc = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(constraint);

        w = virtualinvoke cc.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>();

        h = virtualinvoke cc.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>();

        contentSize = null;

        $stack10 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if w != $stack10 goto label03;

        $stack40 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack40 goto label01;

        contentSize = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.Size2D arrangeNN(java.awt.Graphics2D)>(g2);

        goto label09;

     label01:
        $stack41 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack41 goto label02;

        $stack44 = new java.lang.RuntimeException;

        specialinvoke $stack44.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack44;

     label02:
        $stack42 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack42 goto label09;

        $stack43 = new java.lang.RuntimeException;

        specialinvoke $stack43.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack43;

     label03:
        $stack11 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if w != $stack11 goto label06;

        $stack31 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack31 goto label04;

        $stack38 = virtualinvoke cc.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        contentSize = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.Size2D arrangeRN(java.awt.Graphics2D,org.jfree.data.Range)>(g2, $stack38);

        goto label09;

     label04:
        $stack32 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack32 goto label05;

        $stack35 = virtualinvoke cc.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getWidthRange()>();

        $stack36 = virtualinvoke cc.<org.jfree.chart.block.RectangleConstraint: org.jfree.data.Range getHeightRange()>();

        contentSize = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.Size2D arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)>(g2, $stack35, $stack36);

        goto label09;

     label05:
        $stack33 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack33 goto label09;

        $stack34 = new java.lang.RuntimeException;

        specialinvoke $stack34.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack34;

     label06:
        $stack12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if w != $stack12 goto label09;

        $stack24 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack24 goto label07;

        $stack29 = virtualinvoke cc.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        contentSize = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.Size2D arrangeFN(java.awt.Graphics2D,double)>(g2, $stack29);

        goto label09;

     label07:
        $stack25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack25 goto label08;

        $stack28 = new java.lang.RuntimeException;

        specialinvoke $stack28.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack28;

     label08:
        $stack26 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack26 goto label09;

        $stack27 = new java.lang.RuntimeException;

        specialinvoke $stack27.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack27;

     label09:
        $stack13 = <org.jfree.chart.title.TextTitle: boolean $assertionsDisabled>;

        if $stack13 != 0 goto label10;

        if contentSize != null goto label10;

        $stack23 = new java.lang.AssertionError;

        specialinvoke $stack23.<java.lang.AssertionError: void <init>()>();

        throw $stack23;

     label10:
        $stack14 = new org.jfree.chart.ui.Size2D;

        $stack15 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack16 = virtualinvoke this.<org.jfree.chart.title.TextTitle: double calculateTotalWidth(double)>($stack15);

        $stack17 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack18 = virtualinvoke this.<org.jfree.chart.title.TextTitle: double calculateTotalHeight(double)>($stack17);

        specialinvoke $stack14.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack16, $stack18);

        return $stack14;
    }

    protected org.jfree.chart.ui.Size2D arrangeNN(java.awt.Graphics2D)
    {
        org.jfree.data.Range $stack3;
        org.jfree.chart.title.TextTitle this;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.Size2D $stack4;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        $stack3 = new org.jfree.data.Range;

        specialinvoke $stack3.<org.jfree.data.Range: void <init>(double,double)>(0.0, 3.4028234663852886E38);

        $stack4 = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.Size2D arrangeRR(java.awt.Graphics2D,org.jfree.data.Range,org.jfree.data.Range)>(g2, $stack3, $stack3);

        return $stack4;
    }

    protected org.jfree.chart.ui.Size2D arrangeFN(java.awt.Graphics2D, double)
    {
        org.jfree.chart.title.TextTitle this;
        org.jfree.chart.ui.RectangleEdge position, $stack8, $stack24, $stack25, $stack44;
        double w, $stack22, $stack23, $stack39, $stack40, $stack42, $stack43;
        java.awt.Graphics2D g2;
        java.awt.Font $stack9, $stack12, $stack26, $stack29;
        org.jfree.chart.text.G2TextMeasurer $stack10, $stack27;
        java.lang.String $stack11, $stack28;
        java.awt.Paint $stack13, $stack30;
        int $stack14, $stack31;
        org.jfree.chart.text.TextBlock $stack15, $stack17, $stack18, $stack32, $stack34, $stack35;
        org.jfree.chart.ui.HorizontalAlignment $stack16, $stack33;
        boolean $stack20, $stack37;
        org.jfree.chart.ui.Size2D $stack21, $stack38, $stack41, contentSize;
        java.lang.RuntimeException $stack45;
        float maxWidth;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        w := @parameter1: double;

        position = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.RectangleEdge getPosition()>();

        $stack8 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

        if position == $stack8 goto label1;

        $stack24 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge BOTTOM>;

        if position != $stack24 goto label3;

     label1:
        maxWidth = (float) w;

        $stack9 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack9);

        $stack11 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack12 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        $stack13 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        $stack14 = this.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay>;

        $stack10 = new org.jfree.chart.text.G2TextMeasurer;

        specialinvoke $stack10.<org.jfree.chart.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(g2);

        $stack15 = staticinvoke <org.jfree.chart.text.TextUtils: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>($stack11, $stack12, $stack13, maxWidth, $stack14, $stack10);

        this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content> = $stack15;

        $stack17 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        $stack16 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment>;

        virtualinvoke $stack17.<org.jfree.chart.text.TextBlock: void setLineAlignment(org.jfree.chart.ui.HorizontalAlignment)>($stack16);

        $stack18 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        contentSize = virtualinvoke $stack18.<org.jfree.chart.text.TextBlock: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack20 = this.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>;

        if $stack20 == 0 goto label2;

        $stack21 = new org.jfree.chart.ui.Size2D;

        $stack22 = (double) maxWidth;

        $stack23 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getHeight()>();

        specialinvoke $stack21.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack22, $stack23);

        return $stack21;

     label2:
        return contentSize;

     label3:
        $stack25 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        if position == $stack25 goto label4;

        $stack44 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge RIGHT>;

        if position != $stack44 goto label6;

     label4:
        $stack26 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack26);

        $stack28 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack29 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        $stack30 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        $stack31 = this.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay>;

        $stack27 = new org.jfree.chart.text.G2TextMeasurer;

        specialinvoke $stack27.<org.jfree.chart.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(g2);

        $stack32 = staticinvoke <org.jfree.chart.text.TextUtils: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>($stack28, $stack29, $stack30, 3.4028235E38F, $stack31, $stack27);

        this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content> = $stack32;

        $stack34 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        $stack33 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment>;

        virtualinvoke $stack34.<org.jfree.chart.text.TextBlock: void setLineAlignment(org.jfree.chart.ui.HorizontalAlignment)>($stack33);

        $stack35 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        contentSize = virtualinvoke $stack35.<org.jfree.chart.text.TextBlock: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack37 = this.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>;

        if $stack37 == 0 goto label5;

        $stack41 = new org.jfree.chart.ui.Size2D;

        $stack42 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack43 = (double) 3.4028235E38F;

        specialinvoke $stack41.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack42, $stack43);

        return $stack41;

     label5:
        $stack38 = new org.jfree.chart.ui.Size2D;

        $stack40 = contentSize.<org.jfree.chart.ui.Size2D: double height>;

        $stack39 = contentSize.<org.jfree.chart.ui.Size2D: double width>;

        specialinvoke $stack38.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack40, $stack39);

        return $stack38;

     label6:
        $stack45 = new java.lang.RuntimeException;

        specialinvoke $stack45.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unrecognised exception.");

        throw $stack45;
    }

    protected org.jfree.chart.ui.Size2D arrangeRN(java.awt.Graphics2D, org.jfree.data.Range)
    {
        org.jfree.chart.title.TextTitle this;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.Size2D s, $stack11;
        org.jfree.data.Range widthRange;
        double $stack7, $stack9, ww;
        boolean $stack8;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        widthRange := @parameter1: org.jfree.data.Range;

        s = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.Size2D arrangeNN(java.awt.Graphics2D)>(g2);

        $stack7 = virtualinvoke s.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack8 = virtualinvoke widthRange.<org.jfree.data.Range: boolean contains(double)>($stack7);

        if $stack8 == 0 goto label1;

        return s;

     label1:
        $stack9 = virtualinvoke s.<org.jfree.chart.ui.Size2D: double getWidth()>();

        ww = virtualinvoke widthRange.<org.jfree.data.Range: double constrain(double)>($stack9);

        $stack11 = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.Size2D arrangeFN(java.awt.Graphics2D,double)>(g2, ww);

        return $stack11;
    }

    protected org.jfree.chart.ui.Size2D arrangeRR(java.awt.Graphics2D, org.jfree.data.Range, org.jfree.data.Range)
    {
        org.jfree.chart.title.TextTitle this;
        org.jfree.chart.ui.RectangleEdge position, $stack8, $stack25, $stack26, $stack46;
        org.jfree.data.Range widthRange, heightRange;
        double $stack9, $stack23, $stack24, $stack27, $stack41, $stack42, $stack44, $stack45;
        java.awt.Graphics2D g2;
        java.awt.Font $stack10, $stack13, $stack28, $stack31;
        org.jfree.chart.text.G2TextMeasurer $stack11, $stack29;
        java.lang.String $stack12, $stack30;
        java.awt.Paint $stack14, $stack32;
        int $stack15, $stack33;
        org.jfree.chart.text.TextBlock $stack16, $stack18, $stack19, $stack34, $stack36, $stack37;
        org.jfree.chart.ui.HorizontalAlignment $stack17, $stack35;
        boolean $stack21, $stack39;
        org.jfree.chart.ui.Size2D $stack22, $stack40, $stack43, contentSize;
        java.lang.RuntimeException $stack47;
        float maxWidth;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        widthRange := @parameter1: org.jfree.data.Range;

        heightRange := @parameter2: org.jfree.data.Range;

        position = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.RectangleEdge getPosition()>();

        $stack8 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

        if position == $stack8 goto label1;

        $stack25 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge BOTTOM>;

        if position != $stack25 goto label3;

     label1:
        $stack9 = virtualinvoke widthRange.<org.jfree.data.Range: double getUpperBound()>();

        maxWidth = (float) $stack9;

        $stack10 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack10);

        $stack12 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack13 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        $stack14 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        $stack15 = this.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay>;

        $stack11 = new org.jfree.chart.text.G2TextMeasurer;

        specialinvoke $stack11.<org.jfree.chart.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(g2);

        $stack16 = staticinvoke <org.jfree.chart.text.TextUtils: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>($stack12, $stack13, $stack14, maxWidth, $stack15, $stack11);

        this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content> = $stack16;

        $stack18 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        $stack17 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment>;

        virtualinvoke $stack18.<org.jfree.chart.text.TextBlock: void setLineAlignment(org.jfree.chart.ui.HorizontalAlignment)>($stack17);

        $stack19 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        contentSize = virtualinvoke $stack19.<org.jfree.chart.text.TextBlock: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack21 = this.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>;

        if $stack21 == 0 goto label2;

        $stack22 = new org.jfree.chart.ui.Size2D;

        $stack23 = (double) maxWidth;

        $stack24 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getHeight()>();

        specialinvoke $stack22.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack23, $stack24);

        return $stack22;

     label2:
        return contentSize;

     label3:
        $stack26 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        if position == $stack26 goto label4;

        $stack46 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge RIGHT>;

        if position != $stack46 goto label6;

     label4:
        $stack27 = virtualinvoke heightRange.<org.jfree.data.Range: double getUpperBound()>();

        maxWidth = (float) $stack27;

        $stack28 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack28);

        $stack30 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack31 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        $stack32 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        $stack33 = this.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay>;

        $stack29 = new org.jfree.chart.text.G2TextMeasurer;

        specialinvoke $stack29.<org.jfree.chart.text.G2TextMeasurer: void <init>(java.awt.Graphics2D)>(g2);

        $stack34 = staticinvoke <org.jfree.chart.text.TextUtils: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>($stack30, $stack31, $stack32, maxWidth, $stack33, $stack29);

        this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content> = $stack34;

        $stack36 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        $stack35 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment>;

        virtualinvoke $stack36.<org.jfree.chart.text.TextBlock: void setLineAlignment(org.jfree.chart.ui.HorizontalAlignment)>($stack35);

        $stack37 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        contentSize = virtualinvoke $stack37.<org.jfree.chart.text.TextBlock: org.jfree.chart.ui.Size2D calculateDimensions(java.awt.Graphics2D)>(g2);

        $stack39 = this.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>;

        if $stack39 == 0 goto label5;

        $stack43 = new org.jfree.chart.ui.Size2D;

        $stack44 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack45 = (double) maxWidth;

        specialinvoke $stack43.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack44, $stack45);

        return $stack43;

     label5:
        $stack40 = new org.jfree.chart.ui.Size2D;

        $stack42 = contentSize.<org.jfree.chart.ui.Size2D: double height>;

        $stack41 = contentSize.<org.jfree.chart.ui.Size2D: double width>;

        specialinvoke $stack40.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack42, $stack41);

        return $stack40;

     label6:
        $stack47 = new java.lang.RuntimeException;

        specialinvoke $stack47.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unrecognised exception.");

        throw $stack47;
    }

    public void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.title.TextTitle this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        virtualinvoke this.<org.jfree.chart.title.TextTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(g2, area, null);

        return;
    }

    public java.lang.Object draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.lang.Object)
    {
        org.jfree.chart.title.TextTitle this;
        org.jfree.chart.text.TextBlock $stack8;
        java.awt.Graphics2D g2;
        java.lang.String $stack10, $stack41, $stack42;
        boolean $stack11, $stack12, $stack36;
        java.lang.Object params;
        org.jfree.chart.ui.RectangleEdge $stack17, $stack21, $stack22, $stack24, p#17;
        org.jfree.chart.entity.StandardEntityCollection $stack19;
        java.awt.Paint $stack31, $stack14;
        org.jfree.chart.entity.TitleEntity $stack40, entity;
        java.awt.geom.Rectangle2D area, area#2;
        org.jfree.chart.block.EntityBlockParams p;
        org.jfree.chart.block.BlockResult $stack18;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        params := @parameter2: java.lang.Object;

        $stack8 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        if $stack8 != null goto label1;

        return null;

     label1:
        area#2 = virtualinvoke this.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(area);

        virtualinvoke this.<org.jfree.chart.title.TextTitle: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area#2);

        $stack10 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack11 = virtualinvoke $stack10.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack11 == 0 goto label2;

        return null;

     label2:
        entity = null;

        $stack12 = params instanceof org.jfree.chart.block.EntityBlockParams;

        if $stack12 == 0 goto label3;

        p = (org.jfree.chart.block.EntityBlockParams) params;

        $stack36 = interfaceinvoke p.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>();

        if $stack36 == 0 goto label3;

        $stack40 = new org.jfree.chart.entity.TitleEntity;

        $stack42 = this.<org.jfree.chart.title.TextTitle: java.lang.String toolTipText>;

        $stack41 = this.<org.jfree.chart.title.TextTitle: java.lang.String urlText>;

        specialinvoke $stack40.<org.jfree.chart.entity.TitleEntity: void <init>(java.awt.Shape,org.jfree.chart.title.Title,java.lang.String,java.lang.String)>(area#2, this, $stack42, $stack41);

        entity = $stack40;

     label3:
        area#2 = virtualinvoke this.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(area#2);

        $stack14 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>;

        if $stack14 == null goto label4;

        $stack31 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack31);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(area#2);

     label4:
        area#2 = virtualinvoke this.<org.jfree.chart.title.TextTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(area#2);

        p#17 = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.RectangleEdge getPosition()>();

        $stack17 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

        if p#17 == $stack17 goto label5;

        $stack21 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge BOTTOM>;

        if p#17 != $stack21 goto label6;

     label5:
        virtualinvoke this.<org.jfree.chart.title.TextTitle: void drawHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area#2);

        goto label8;

     label6:
        $stack22 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        if p#17 == $stack22 goto label7;

        $stack24 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge RIGHT>;

        if p#17 != $stack24 goto label8;

     label7:
        virtualinvoke this.<org.jfree.chart.title.TextTitle: void drawVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area#2);

     label8:
        $stack18 = new org.jfree.chart.block.BlockResult;

        specialinvoke $stack18.<org.jfree.chart.block.BlockResult: void <init>()>();

        if entity == null goto label9;

        $stack19 = new org.jfree.chart.entity.StandardEntityCollection;

        specialinvoke $stack19.<org.jfree.chart.entity.StandardEntityCollection: void <init>()>();

        virtualinvoke $stack19.<org.jfree.chart.entity.StandardEntityCollection: void add(org.jfree.chart.entity.ChartEntity)>(entity);

        virtualinvoke $stack18.<org.jfree.chart.block.BlockResult: void setEntityCollection(org.jfree.chart.entity.EntityCollection)>($stack19);

     label9:
        return $stack18;
    }

    protected void drawHorizontal(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D area, titleArea;
        java.lang.Object $stack9;
        java.awt.Graphics2D g2;
        org.jfree.chart.title.TextTitle this;
        java.awt.Font $stack10;
        java.awt.Paint $stack11;
        org.jfree.chart.ui.HorizontalAlignment horizontalAlignment, $stack13, $stack14, $stack15, $stack21, $stack22, $stack23;
        org.jfree.chart.ui.RectangleEdge position, $stack18, $stack17;
        double $stack20, $stack29, $stack30, $stack34, $stack35;
        org.jfree.chart.text.TextBlockAnchor anchor;
        float x, y;
        org.jfree.chart.text.TextBlock $stack19;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        $stack9 = virtualinvoke area.<java.awt.geom.Rectangle2D: java.lang.Object clone()>();

        titleArea = (java.awt.geom.Rectangle2D) $stack9;

        $stack10 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack10);

        $stack11 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack11);

        anchor = null;

        x = 0.0F;

        horizontalAlignment = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment getHorizontalAlignment()>();

        $stack13 = <org.jfree.chart.ui.HorizontalAlignment: org.jfree.chart.ui.HorizontalAlignment LEFT>;

        if horizontalAlignment != $stack13 goto label1;

        $stack35 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getX()>();

        x = (float) $stack35;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor TOP_LEFT>;

        goto label3;

     label1:
        $stack14 = <org.jfree.chart.ui.HorizontalAlignment: org.jfree.chart.ui.HorizontalAlignment RIGHT>;

        if horizontalAlignment != $stack14 goto label2;

        $stack34 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getMaxX()>();

        x = (float) $stack34;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor TOP_RIGHT>;

        goto label3;

     label2:
        $stack15 = <org.jfree.chart.ui.HorizontalAlignment: org.jfree.chart.ui.HorizontalAlignment CENTER>;

        if horizontalAlignment != $stack15 goto label3;

        $stack30 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getCenterX()>();

        x = (float) $stack30;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor TOP_CENTER>;

     label3:
        y = 0.0F;

        position = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.RectangleEdge getPosition()>();

        $stack17 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

        if position != $stack17 goto label4;

        $stack29 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getY()>();

        y = (float) $stack29;

        goto label7;

     label4:
        $stack18 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge BOTTOM>;

        if position != $stack18 goto label7;

        $stack20 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getMaxY()>();

        y = (float) $stack20;

        $stack21 = <org.jfree.chart.ui.HorizontalAlignment: org.jfree.chart.ui.HorizontalAlignment LEFT>;

        if horizontalAlignment != $stack21 goto label5;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor BOTTOM_LEFT>;

        goto label7;

     label5:
        $stack22 = <org.jfree.chart.ui.HorizontalAlignment: org.jfree.chart.ui.HorizontalAlignment CENTER>;

        if horizontalAlignment != $stack22 goto label6;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor BOTTOM_CENTER>;

        goto label7;

     label6:
        $stack23 = <org.jfree.chart.ui.HorizontalAlignment: org.jfree.chart.ui.HorizontalAlignment RIGHT>;

        if horizontalAlignment != $stack23 goto label7;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor BOTTOM_RIGHT>;

     label7:
        $stack19 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        virtualinvoke $stack19.<org.jfree.chart.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor)>(g2, x, y, anchor);

        return;
    }

    protected void drawVertical(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D area, titleArea;
        java.lang.Object $stack9;
        java.awt.Graphics2D g2;
        org.jfree.chart.title.TextTitle this;
        java.awt.Font $stack10;
        java.awt.Paint $stack11;
        org.jfree.chart.ui.VerticalAlignment verticalAlignment, $stack13, $stack14, $stack15, $stack21, $stack22, $stack23;
        org.jfree.chart.ui.RectangleEdge position, $stack18, $stack17;
        double $stack20, $stack32, $stack33, $stack37, $stack38;
        org.jfree.chart.text.TextBlockAnchor anchor;
        float y, x;
        org.jfree.chart.text.TextBlock $stack19;

        this := @this: org.jfree.chart.title.TextTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        $stack9 = virtualinvoke area.<java.awt.geom.Rectangle2D: java.lang.Object clone()>();

        titleArea = (java.awt.geom.Rectangle2D) $stack9;

        $stack10 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        virtualinvoke g2.<java.awt.Graphics2D: void setFont(java.awt.Font)>($stack10);

        $stack11 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack11);

        anchor = null;

        y = 0.0F;

        verticalAlignment = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.VerticalAlignment getVerticalAlignment()>();

        $stack13 = <org.jfree.chart.ui.VerticalAlignment: org.jfree.chart.ui.VerticalAlignment TOP>;

        if verticalAlignment != $stack13 goto label1;

        $stack38 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getY()>();

        y = (float) $stack38;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor TOP_RIGHT>;

        goto label3;

     label1:
        $stack14 = <org.jfree.chart.ui.VerticalAlignment: org.jfree.chart.ui.VerticalAlignment BOTTOM>;

        if verticalAlignment != $stack14 goto label2;

        $stack37 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getMaxY()>();

        y = (float) $stack37;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor TOP_LEFT>;

        goto label3;

     label2:
        $stack15 = <org.jfree.chart.ui.VerticalAlignment: org.jfree.chart.ui.VerticalAlignment CENTER>;

        if verticalAlignment != $stack15 goto label3;

        $stack33 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getCenterY()>();

        y = (float) $stack33;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor TOP_CENTER>;

     label3:
        x = 0.0F;

        position = virtualinvoke this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.RectangleEdge getPosition()>();

        $stack17 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        if position != $stack17 goto label4;

        $stack32 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getX()>();

        x = (float) $stack32;

        goto label7;

     label4:
        $stack18 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge RIGHT>;

        if position != $stack18 goto label7;

        $stack20 = virtualinvoke titleArea.<java.awt.geom.Rectangle2D: double getMaxX()>();

        x = (float) $stack20;

        $stack21 = <org.jfree.chart.ui.VerticalAlignment: org.jfree.chart.ui.VerticalAlignment TOP>;

        if verticalAlignment != $stack21 goto label5;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor BOTTOM_RIGHT>;

        goto label7;

     label5:
        $stack22 = <org.jfree.chart.ui.VerticalAlignment: org.jfree.chart.ui.VerticalAlignment CENTER>;

        if verticalAlignment != $stack22 goto label6;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor BOTTOM_CENTER>;

        goto label7;

     label6:
        $stack23 = <org.jfree.chart.ui.VerticalAlignment: org.jfree.chart.ui.VerticalAlignment BOTTOM>;

        if verticalAlignment != $stack23 goto label7;

        anchor = <org.jfree.chart.text.TextBlockAnchor: org.jfree.chart.text.TextBlockAnchor BOTTOM_LEFT>;

     label7:
        $stack19 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.text.TextBlock content>;

        virtualinvoke $stack19.<org.jfree.chart.text.TextBlock: void draw(java.awt.Graphics2D,float,float,org.jfree.chart.text.TextBlockAnchor,float,float,double)>(g2, x, y, anchor, x, y, -1.5707963267948966);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.title.TextTitle this, that;
        boolean $stack3, $stack6, $stack9, $stack12, $stack17, $stack20, $stack21, $stack24, $stack27, $stack28;
        java.lang.String $stack4, $stack5, $stack22, $stack23, $stack25, $stack26;
        java.awt.Font $stack7, $stack8;
        java.awt.Paint $stack10, $stack11, $stack15, $stack16;
        org.jfree.chart.ui.HorizontalAlignment $stack13, $stack14;
        int $stack18, $stack19;

        this := @this: org.jfree.chart.title.TextTitle;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack3 = obj instanceof org.jfree.chart.title.TextTitle;

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        that = (org.jfree.chart.title.TextTitle) obj;

        $stack5 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack4 = that.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        if $stack6 != 0 goto label03;

        return 0;

     label03:
        $stack8 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        $stack7 = that.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        if $stack9 != 0 goto label04;

        return 0;

     label04:
        $stack11 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        $stack10 = that.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        $stack12 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack11, $stack10);

        if $stack12 != 0 goto label05;

        return 0;

     label05:
        $stack14 = this.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment>;

        $stack13 = that.<org.jfree.chart.title.TextTitle: org.jfree.chart.ui.HorizontalAlignment textAlignment>;

        if $stack14 == $stack13 goto label06;

        return 0;

     label06:
        $stack16 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>;

        $stack15 = that.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>;

        $stack17 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack16, $stack15);

        if $stack17 != 0 goto label07;

        return 0;

     label07:
        $stack19 = this.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay>;

        $stack18 = that.<org.jfree.chart.title.TextTitle: int maximumLinesToDisplay>;

        if $stack19 == $stack18 goto label08;

        return 0;

     label08:
        $stack21 = this.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>;

        $stack20 = that.<org.jfree.chart.title.TextTitle: boolean expandToFitSpace>;

        if $stack21 == $stack20 goto label09;

        return 0;

     label09:
        $stack23 = this.<org.jfree.chart.title.TextTitle: java.lang.String toolTipText>;

        $stack22 = that.<org.jfree.chart.title.TextTitle: java.lang.String toolTipText>;

        $stack24 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack23, $stack22);

        if $stack24 != 0 goto label10;

        return 0;

     label10:
        $stack26 = this.<org.jfree.chart.title.TextTitle: java.lang.String urlText>;

        $stack25 = that.<org.jfree.chart.title.TextTitle: java.lang.String urlText>;

        $stack27 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack26, $stack25);

        if $stack27 != 0 goto label11;

        return 0;

     label11:
        $stack28 = specialinvoke this.<org.jfree.chart.title.Title: boolean equals(java.lang.Object)>(obj);

        return $stack28;
    }

    public int hashCode()
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.String $stack3, $stack27;
        int $stack4, $stack6, $stack8, $stack10, result, $stack28, $stack22, $stack16, $stack12;
        java.awt.Font $stack5, $stack21;
        java.awt.Paint $stack7, $stack9, $stack11, $stack15;

        this := @this: org.jfree.chart.title.TextTitle;

        result = specialinvoke this.<org.jfree.chart.title.Title: int hashCode()>();

        $stack4 = 29 * result;

        $stack3 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        if $stack3 == null goto label1;

        $stack27 = this.<org.jfree.chart.title.TextTitle: java.lang.String text>;

        $stack28 = virtualinvoke $stack27.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $stack28 = 0;

     label2:
        result = $stack4 + $stack28;

        $stack6 = 29 * result;

        $stack5 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        if $stack5 == null goto label3;

        $stack21 = this.<org.jfree.chart.title.TextTitle: java.awt.Font font>;

        $stack22 = virtualinvoke $stack21.<java.awt.Font: int hashCode()>();

        goto label4;

     label3:
        $stack22 = 0;

     label4:
        result = $stack6 + $stack22;

        $stack8 = 29 * result;

        $stack7 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        if $stack7 == null goto label5;

        $stack15 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        $stack16 = virtualinvoke $stack15.<java.lang.Object: int hashCode()>();

        goto label6;

     label5:
        $stack16 = 0;

     label6:
        result = $stack8 + $stack16;

        $stack10 = 29 * result;

        $stack9 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>;

        if $stack9 == null goto label7;

        $stack11 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>;

        $stack12 = virtualinvoke $stack11.<java.lang.Object: int hashCode()>();

        goto label8;

     label7:
        $stack12 = 0;

     label8:
        result = $stack10 + $stack12;

        return result;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.title.TextTitle this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.title.TextTitle;

        $stack1 = specialinvoke this.<org.jfree.chart.title.Title: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.title.TextTitle this;
        java.awt.Paint $stack2, $stack3;

        this := @this: org.jfree.chart.title.TextTitle;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.title.TextTitle this;
        java.awt.Paint $stack2, $stack3;

        this := @this: org.jfree.chart.title.TextTitle;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.TextTitle: java.awt.Paint paint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.TextTitle: java.awt.Paint backgroundPaint> = $stack3;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack4;
        java.awt.Font $stack2;
        java.awt.Color $stack3;

        <org.jfree.chart.title.TextTitle: long serialVersionUID> = 8372008692127477443L;

        $stack0 = class "Lorg/jfree/chart/title/TextTitle;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack4 = 1;

        goto label2;

     label1:
        $stack4 = 0;

     label2:
        <org.jfree.chart.title.TextTitle: boolean $assertionsDisabled> = $stack4;

        $stack2 = new java.awt.Font;

        specialinvoke $stack2.<java.awt.Font: void <init>(java.lang.String,int,int)>("SansSerif", 1, 12);

        <org.jfree.chart.title.TextTitle: java.awt.Font DEFAULT_FONT> = $stack2;

        $stack3 = <java.awt.Color: java.awt.Color BLACK>;

        <org.jfree.chart.title.TextTitle: java.awt.Paint DEFAULT_TEXT_PAINT> = $stack3;

        return;
    }
}
