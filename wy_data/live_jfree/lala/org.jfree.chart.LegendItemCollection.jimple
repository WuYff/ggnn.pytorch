public class org.jfree.chart.LegendItemCollection extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.List items;

    public void <init>()
    {
        org.jfree.chart.LegendItemCollection this;
        java.util.ArrayList $stack1;

        this := @this: org.jfree.chart.LegendItemCollection;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.LegendItemCollection: java.util.List items> = $stack1;

        return;
    }

    public void add(org.jfree.chart.LegendItem)
    {
        org.jfree.chart.LegendItemCollection this;
        org.jfree.chart.LegendItem item;
        java.util.List $stack2;

        this := @this: org.jfree.chart.LegendItemCollection;

        item := @parameter0: org.jfree.chart.LegendItem;

        $stack2 = this.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(item);

        return;
    }

    public void addAll(org.jfree.chart.LegendItemCollection)
    {
        org.jfree.chart.LegendItemCollection this, collection;
        java.util.List $stack2, $stack3;

        this := @this: org.jfree.chart.LegendItemCollection;

        collection := @parameter0: org.jfree.chart.LegendItemCollection;

        $stack3 = this.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        $stack2 = collection.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        interfaceinvoke $stack3.<java.util.List: boolean addAll(java.util.Collection)>($stack2);

        return;
    }

    public org.jfree.chart.LegendItem get(int)
    {
        org.jfree.chart.LegendItemCollection this;
        int index;
        java.util.List $stack2;
        java.lang.Object $stack3;
        org.jfree.chart.LegendItem $stack4;

        this := @this: org.jfree.chart.LegendItemCollection;

        index := @parameter0: int;

        $stack2 = this.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(index);

        $stack4 = (org.jfree.chart.LegendItem) $stack3;

        return $stack4;
    }

    public int getItemCount()
    {
        org.jfree.chart.LegendItemCollection this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.chart.LegendItemCollection;

        $stack1 = this.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public java.util.Iterator iterator()
    {
        org.jfree.chart.LegendItemCollection this;
        java.util.List $stack1;
        java.util.Iterator $stack2;

        this := @this: org.jfree.chart.LegendItemCollection;

        $stack1 = this.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: java.util.Iterator iterator()>();

        return $stack2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.LegendItemCollection this, that;
        boolean $stack3, $stack6;
        java.util.List $stack4, $stack5;

        this := @this: org.jfree.chart.LegendItemCollection;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.LegendItemCollection;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.LegendItemCollection) obj;

        $stack5 = this.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        $stack4 = that.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.LegendItemCollection this;
        java.util.List $stack2;
        int $stack3, $stack4, hash#2;

        this := @this: org.jfree.chart.LegendItemCollection;

        $stack3 = 17 * 7;

        $stack2 = this.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack2);

        hash#2 = $stack3 + $stack4;

        return hash#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.LegendItemCollection this, clone;
        java.lang.Object $stack2;
        java.util.List $stack3, $stack4;

        this := @this: org.jfree.chart.LegendItemCollection;

        $stack2 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        clone = (org.jfree.chart.LegendItemCollection) $stack2;

        $stack3 = this.<org.jfree.chart.LegendItemCollection: java.util.List items>;

        $stack4 = staticinvoke <org.jfree.chart.util.CloneUtils: java.util.List cloneList(java.util.List)>($stack3);

        clone.<org.jfree.chart.LegendItemCollection: java.util.List items> = $stack4;

        return clone;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.LegendItemCollection: long serialVersionUID> = 1365215565589815953L;

        return;
    }
}
