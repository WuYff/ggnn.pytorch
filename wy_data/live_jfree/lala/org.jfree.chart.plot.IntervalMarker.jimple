public class org.jfree.chart.plot.IntervalMarker extends org.jfree.chart.plot.Marker implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private double startValue;
    private double endValue;
    private org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer;

    public void <init>(double, double)
    {
        org.jfree.chart.plot.IntervalMarker this;
        double start, end;
        java.awt.BasicStroke $stack5, $stack7;
        java.awt.Color $stack6, $stack8;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        start := @parameter0: double;

        end := @parameter1: double;

        $stack6 = <java.awt.Color: java.awt.Color GRAY>;

        $stack5 = new java.awt.BasicStroke;

        specialinvoke $stack5.<java.awt.BasicStroke: void <init>(float)>(0.5F);

        $stack8 = <java.awt.Color: java.awt.Color GRAY>;

        $stack7 = new java.awt.BasicStroke;

        specialinvoke $stack7.<java.awt.BasicStroke: void <init>(float)>(0.5F);

        specialinvoke this.<org.jfree.chart.plot.IntervalMarker: void <init>(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)>(start, end, $stack6, $stack5, $stack8, $stack7, 0.8F);

        return;
    }

    public void <init>(double, double, java.awt.Paint)
    {
        org.jfree.chart.plot.IntervalMarker this;
        double start, end;
        java.awt.Paint paint;
        java.awt.BasicStroke $stack6;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        start := @parameter0: double;

        end := @parameter1: double;

        paint := @parameter2: java.awt.Paint;

        $stack6 = new java.awt.BasicStroke;

        specialinvoke $stack6.<java.awt.BasicStroke: void <init>(float)>(0.5F);

        specialinvoke this.<org.jfree.chart.plot.IntervalMarker: void <init>(double,double,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)>(start, end, paint, $stack6, null, null, 0.8F);

        return;
    }

    public void <init>(double, double, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float)
    {
        org.jfree.chart.plot.IntervalMarker this;
        java.awt.Paint paint, outlinePaint;
        java.awt.Stroke stroke, outlineStroke;
        float alpha;
        double start, end;
        org.jfree.chart.ui.LengthAdjustmentType $stack10;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        start := @parameter0: double;

        end := @parameter1: double;

        paint := @parameter2: java.awt.Paint;

        stroke := @parameter3: java.awt.Stroke;

        outlinePaint := @parameter4: java.awt.Paint;

        outlineStroke := @parameter5: java.awt.Stroke;

        alpha := @parameter6: float;

        specialinvoke this.<org.jfree.chart.plot.Marker: void <init>(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)>(paint, stroke, outlinePaint, outlineStroke, alpha);

        this.<org.jfree.chart.plot.IntervalMarker: double startValue> = start;

        this.<org.jfree.chart.plot.IntervalMarker: double endValue> = end;

        this.<org.jfree.chart.plot.IntervalMarker: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer> = null;

        $stack10 = <org.jfree.chart.ui.LengthAdjustmentType: org.jfree.chart.ui.LengthAdjustmentType CONTRACT>;

        virtualinvoke this.<org.jfree.chart.plot.IntervalMarker: void setLabelOffsetType(org.jfree.chart.ui.LengthAdjustmentType)>($stack10);

        return;
    }

    public double getStartValue()
    {
        org.jfree.chart.plot.IntervalMarker this;
        double $stack1;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        $stack1 = this.<org.jfree.chart.plot.IntervalMarker: double startValue>;

        return $stack1;
    }

    public void setStartValue(double)
    {
        org.jfree.chart.plot.IntervalMarker this;
        double value;
        org.jfree.chart.event.MarkerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        value := @parameter0: double;

        this.<org.jfree.chart.plot.IntervalMarker: double startValue> = value;

        $stack3 = new org.jfree.chart.event.MarkerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(this);

        virtualinvoke this.<org.jfree.chart.plot.IntervalMarker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($stack3);

        return;
    }

    public double getEndValue()
    {
        org.jfree.chart.plot.IntervalMarker this;
        double $stack1;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        $stack1 = this.<org.jfree.chart.plot.IntervalMarker: double endValue>;

        return $stack1;
    }

    public void setEndValue(double)
    {
        org.jfree.chart.plot.IntervalMarker this;
        double value;
        org.jfree.chart.event.MarkerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        value := @parameter0: double;

        this.<org.jfree.chart.plot.IntervalMarker: double endValue> = value;

        $stack3 = new org.jfree.chart.event.MarkerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(this);

        virtualinvoke this.<org.jfree.chart.plot.IntervalMarker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($stack3);

        return;
    }

    public org.jfree.chart.ui.GradientPaintTransformer getGradientPaintTransformer()
    {
        org.jfree.chart.plot.IntervalMarker this;
        org.jfree.chart.ui.GradientPaintTransformer $stack1;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        $stack1 = this.<org.jfree.chart.plot.IntervalMarker: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer>;

        return $stack1;
    }

    public void setGradientPaintTransformer(org.jfree.chart.ui.GradientPaintTransformer)
    {
        org.jfree.chart.plot.IntervalMarker this;
        org.jfree.chart.ui.GradientPaintTransformer transformer;
        org.jfree.chart.event.MarkerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        transformer := @parameter0: org.jfree.chart.ui.GradientPaintTransformer;

        this.<org.jfree.chart.plot.IntervalMarker: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer> = transformer;

        $stack2 = new org.jfree.chart.event.MarkerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(this);

        virtualinvoke this.<org.jfree.chart.plot.IntervalMarker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($stack2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.plot.IntervalMarker this, that;
        boolean $stack3, $stack4, $stack13;
        double $stack5, $stack6, $stack8, $stack9;
        byte $stack7, $stack10;
        org.jfree.chart.ui.GradientPaintTransformer $stack11, $stack12;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.plot.IntervalMarker;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        $stack4 = specialinvoke this.<org.jfree.chart.plot.Marker: boolean equals(java.lang.Object)>(obj);

        if $stack4 != 0 goto label3;

        return 0;

     label3:
        that = (org.jfree.chart.plot.IntervalMarker) obj;

        $stack6 = this.<org.jfree.chart.plot.IntervalMarker: double startValue>;

        $stack5 = that.<org.jfree.chart.plot.IntervalMarker: double startValue>;

        $stack7 = $stack6 cmpl $stack5;

        if $stack7 == 0 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.chart.plot.IntervalMarker: double endValue>;

        $stack8 = that.<org.jfree.chart.plot.IntervalMarker: double endValue>;

        $stack10 = $stack9 cmpl $stack8;

        if $stack10 == 0 goto label5;

        return 0;

     label5:
        $stack12 = this.<org.jfree.chart.plot.IntervalMarker: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer>;

        $stack11 = that.<org.jfree.chart.plot.IntervalMarker: org.jfree.chart.ui.GradientPaintTransformer gradientPaintTransformer>;

        $stack13 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack12, $stack11);

        if $stack13 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.plot.IntervalMarker this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.plot.IntervalMarker;

        $stack1 = specialinvoke this.<org.jfree.chart.plot.Marker: java.lang.Object clone()>();

        return $stack1;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.plot.IntervalMarker: long serialVersionUID> = -1762344775267627916L;

        return;
    }
}
