public class org.jfree.data.xy.DefaultIntervalXYDataset extends org.jfree.data.xy.AbstractIntervalXYDataset implements org.jfree.chart.util.PublicCloneable
{
    private java.util.List seriesKeys;
    private java.util.List seriesList;

    public void <init>()
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        java.util.ArrayList $stack1, $stack2;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        specialinvoke this.<org.jfree.data.xy.AbstractIntervalXYDataset: void <init>()>();

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys> = $stack1;

        $stack2 = new java.util.ArrayList;

        specialinvoke $stack2.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> = $stack2;

        return;
    }

    public int getSeriesCount()
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        $stack1 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public java.lang.Comparable getSeriesKey(int)
    {
        int series, $stack5, $stack6;
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        java.util.List $stack2, $stack7;
        java.lang.Object $stack8;
        java.lang.Comparable $stack9;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        $stack2 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>;

        $stack5 = interfaceinvoke $stack2.<java.util.List: int size()>();

        $stack6 = $stack5 - 1;

        staticinvoke <org.jfree.chart.util.Args: void requireInRange(int,java.lang.String,int,int)>(series, "series", 0, $stack6);

        $stack7 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>;

        $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(series);

        $stack9 = (java.lang.Comparable) $stack8;

        return $stack9;
    }

    public int getItemCount(int)
    {
        int series, $stack6, $stack7, $stack11;
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        java.util.List $stack3, $stack8;
        java.lang.Object $stack9;
        double[][] seriesArray;
        double[] $stack10;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        $stack3 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack6 = interfaceinvoke $stack3.<java.util.List: int size()>();

        $stack7 = $stack6 - 1;

        staticinvoke <org.jfree.chart.util.Args: void requireInRange(int,java.lang.String,int,int)>(series, "series", 0, $stack7);

        $stack8 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack9 = interfaceinvoke $stack8.<java.util.List: java.lang.Object get(int)>(series);

        seriesArray = (double[][]) $stack9;

        $stack10 = seriesArray[0];

        $stack11 = lengthof $stack10;

        return $stack11;
    }

    public double getXValue(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        java.util.List $stack4;
        java.lang.Object $stack5;
        double[][] seriesData;
        double[] $stack6;
        double $stack7;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        seriesData = (double[][]) $stack5;

        $stack6 = seriesData[0];

        $stack7 = $stack6[item];

        return $stack7;
    }

    public double getYValue(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        java.util.List $stack4;
        java.lang.Object $stack5;
        double[][] seriesData;
        double[] $stack6;
        double $stack7;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        seriesData = (double[][]) $stack5;

        $stack6 = seriesData[3];

        $stack7 = $stack6[item];

        return $stack7;
    }

    public double getStartXValue(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        java.util.List $stack4;
        java.lang.Object $stack5;
        double[][] seriesData;
        double[] $stack6;
        double $stack7;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        seriesData = (double[][]) $stack5;

        $stack6 = seriesData[1];

        $stack7 = $stack6[item];

        return $stack7;
    }

    public double getEndXValue(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        java.util.List $stack4;
        java.lang.Object $stack5;
        double[][] seriesData;
        double[] $stack6;
        double $stack7;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        seriesData = (double[][]) $stack5;

        $stack6 = seriesData[2];

        $stack7 = $stack6[item];

        return $stack7;
    }

    public double getStartYValue(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        java.util.List $stack4;
        java.lang.Object $stack5;
        double[][] seriesData;
        double[] $stack6;
        double $stack7;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        seriesData = (double[][]) $stack5;

        $stack6 = seriesData[4];

        $stack7 = $stack6[item];

        return $stack7;
    }

    public double getEndYValue(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        java.util.List $stack4;
        java.lang.Object $stack5;
        double[][] seriesData;
        double[] $stack6;
        double $stack7;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(series);

        seriesData = (double[][]) $stack5;

        $stack6 = seriesData[5];

        $stack7 = $stack6[item];

        return $stack7;
    }

    public java.lang.Number getEndX(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        double $stack3;
        java.lang.Double $stack4;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.xy.DefaultIntervalXYDataset: double getEndXValue(int,int)>(series, item);

        $stack4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack3);

        return $stack4;
    }

    public java.lang.Number getEndY(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        double $stack3;
        java.lang.Double $stack4;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.xy.DefaultIntervalXYDataset: double getEndYValue(int,int)>(series, item);

        $stack4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack3);

        return $stack4;
    }

    public java.lang.Number getStartX(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        double $stack3;
        java.lang.Double $stack4;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.xy.DefaultIntervalXYDataset: double getStartXValue(int,int)>(series, item);

        $stack4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack3);

        return $stack4;
    }

    public java.lang.Number getStartY(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        double $stack3;
        java.lang.Double $stack4;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.xy.DefaultIntervalXYDataset: double getStartYValue(int,int)>(series, item);

        $stack4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack3);

        return $stack4;
    }

    public java.lang.Number getX(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        double $stack3;
        java.lang.Double $stack4;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.xy.DefaultIntervalXYDataset: double getXValue(int,int)>(series, item);

        $stack4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack3);

        return $stack4;
    }

    public java.lang.Number getY(int, int)
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        int series, item;
        double $stack3;
        java.lang.Double $stack4;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.xy.DefaultIntervalXYDataset: double getYValue(int,int)>(series, item);

        $stack4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack3);

        return $stack4;
    }

    public void addSeries(java.lang.Comparable, double[][])
    {
        java.lang.Comparable seriesKey;
        double[][] data;
        int $stack5, length, $stack8, $stack11, $stack14, $stack16, $stack18, seriesIndex;
        double[] $stack6, $stack7, $stack10, $stack13, $stack15, $stack17;
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        java.util.List $stack20, $stack22, $stack24, $stack26;
        org.jfree.data.general.DatasetChangeEvent $stack23;
        java.lang.IllegalArgumentException $stack31, $stack9;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        seriesKey := @parameter0: java.lang.Comparable;

        data := @parameter1: double[][];

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(seriesKey, "seriesKey");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(data, "data");

        $stack5 = lengthof data;

        if $stack5 == 6 goto label1;

        $stack31 = new java.lang.IllegalArgumentException;

        specialinvoke $stack31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'data\' array must have length == 6.");

        throw $stack31;

     label1:
        $stack6 = data[0];

        length = lengthof $stack6;

        $stack7 = data[1];

        $stack8 = lengthof $stack7;

        if length != $stack8 goto label2;

        $stack10 = data[2];

        $stack11 = lengthof $stack10;

        if length != $stack11 goto label2;

        $stack13 = data[3];

        $stack14 = lengthof $stack13;

        if length != $stack14 goto label2;

        $stack15 = data[4];

        $stack16 = lengthof $stack15;

        if length != $stack16 goto label2;

        $stack17 = data[5];

        $stack18 = lengthof $stack17;

        if length == $stack18 goto label3;

     label2:
        $stack9 = new java.lang.IllegalArgumentException;

        specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'data\' array must contain six arrays with equal length.");

        throw $stack9;

     label3:
        seriesIndex = virtualinvoke this.<org.jfree.data.xy.DefaultIntervalXYDataset: int indexOf(java.lang.Comparable)>(seriesKey);

        if seriesIndex != -1 goto label4;

        $stack24 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>;

        interfaceinvoke $stack24.<java.util.List: boolean add(java.lang.Object)>(seriesKey);

        $stack26 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        interfaceinvoke $stack26.<java.util.List: boolean add(java.lang.Object)>(data);

        goto label5;

     label4:
        $stack20 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        interfaceinvoke $stack20.<java.util.List: java.lang.Object remove(int)>(seriesIndex);

        $stack22 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        interfaceinvoke $stack22.<java.util.List: void add(int,java.lang.Object)>(seriesIndex, data);

     label5:
        $stack23 = new org.jfree.data.general.DatasetChangeEvent;

        specialinvoke $stack23.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(this, this);

        virtualinvoke this.<org.jfree.data.xy.DefaultIntervalXYDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($stack23);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj, $stack25, $stack28;
        org.jfree.data.xy.DefaultIntervalXYDataset this, that;
        boolean $stack18, $stack21, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35;
        java.util.List $stack19, $stack20, $stack22, $stack24, $stack27;
        int $stack23, i;
        double[][] $stack26, d1, $stack29, d2;
        double[] d1x, d2x, d1xs, d2xs, d1xe, d2xe, d1y, d2y, d1ys, d2ys, d1ye, d2ye;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack18 = obj instanceof org.jfree.data.xy.DefaultIntervalXYDataset;

        if $stack18 != 0 goto label02;

        return 0;

     label02:
        that = (org.jfree.data.xy.DefaultIntervalXYDataset) obj;

        $stack20 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>;

        $stack19 = that.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>;

        $stack21 = interfaceinvoke $stack20.<java.util.List: boolean equals(java.lang.Object)>($stack19);

        if $stack21 != 0 goto label03;

        return 0;

     label03:
        i = 0;

     label04:
        $stack22 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack23 = interfaceinvoke $stack22.<java.util.List: int size()>();

        if i >= $stack23 goto label11;

        $stack24 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack25 = interfaceinvoke $stack24.<java.util.List: java.lang.Object get(int)>(i);

        $stack26 = (double[][]) $stack25;

        d1 = (double[][]) $stack26;

        $stack27 = that.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack28 = interfaceinvoke $stack27.<java.util.List: java.lang.Object get(int)>(i);

        $stack29 = (double[][]) $stack28;

        d2 = (double[][]) $stack29;

        d1x = d1[0];

        d2x = d2[0];

        $stack30 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(d1x, d2x);

        if $stack30 != 0 goto label05;

        return 0;

     label05:
        d1xs = d1[1];

        d2xs = d2[1];

        $stack31 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(d1xs, d2xs);

        if $stack31 != 0 goto label06;

        return 0;

     label06:
        d1xe = d1[2];

        d2xe = d2[2];

        $stack32 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(d1xe, d2xe);

        if $stack32 != 0 goto label07;

        return 0;

     label07:
        d1y = d1[3];

        d2y = d2[3];

        $stack33 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(d1y, d2y);

        if $stack33 != 0 goto label08;

        return 0;

     label08:
        d1ys = d1[4];

        d2ys = d2[4];

        $stack34 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(d1ys, d2ys);

        if $stack34 != 0 goto label09;

        return 0;

     label09:
        d1ye = d1[5];

        d2ye = d2[5];

        $stack35 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(d1ye, d2ye);

        if $stack35 != 0 goto label10;

        return 0;

     label10:
        i = i + 1;

        goto label04;

     label11:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this;
        java.util.List $stack2, $stack4;
        int $stack5, $stack6, result;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        $stack2 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>;

        result = interfaceinvoke $stack2.<java.util.List: int hashCode()>();

        $stack5 = 29 * result;

        $stack4 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack6 = interfaceinvoke $stack4.<java.util.List: int hashCode()>();

        result = $stack5 + $stack6;

        return result;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.data.xy.DefaultIntervalXYDataset this, clone;
        java.lang.Object $stack16, $stack25;
        java.util.ArrayList $stack17, $stack19;
        java.util.List $stack18, $stack20, $stack22, $stack24, $stack40;
        int $stack21, $stack23, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, i;
        double[][] $stack26, data, $stack39;
        double[] x, xStart, xEnd, y, yStart, yEnd, xx, xxStart, xxEnd, yy, yyStart, yyEnd;

        this := @this: org.jfree.data.xy.DefaultIntervalXYDataset;

        $stack16 = specialinvoke this.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>();

        clone = (org.jfree.data.xy.DefaultIntervalXYDataset) $stack16;

        $stack17 = new java.util.ArrayList;

        $stack18 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys>;

        specialinvoke $stack17.<java.util.ArrayList: void <init>(java.util.Collection)>($stack18);

        clone.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesKeys> = $stack17;

        $stack19 = new java.util.ArrayList;

        $stack20 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack21 = interfaceinvoke $stack20.<java.util.List: int size()>();

        specialinvoke $stack19.<java.util.ArrayList: void <init>(int)>($stack21);

        clone.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList> = $stack19;

        i = 0;

     label1:
        $stack22 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack23 = interfaceinvoke $stack22.<java.util.List: int size()>();

        if i >= $stack23 goto label2;

        $stack24 = this.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack25 = interfaceinvoke $stack24.<java.util.List: java.lang.Object get(int)>(i);

        $stack26 = (double[][]) $stack25;

        data = (double[][]) $stack26;

        x = data[0];

        xStart = data[1];

        xEnd = data[2];

        y = data[3];

        yStart = data[4];

        yEnd = data[5];

        $stack27 = lengthof x;

        xx = newarray (double)[$stack27];

        $stack28 = lengthof xStart;

        xxStart = newarray (double)[$stack28];

        $stack29 = lengthof xEnd;

        xxEnd = newarray (double)[$stack29];

        $stack30 = lengthof y;

        yy = newarray (double)[$stack30];

        $stack31 = lengthof yStart;

        yyStart = newarray (double)[$stack31];

        $stack32 = lengthof yEnd;

        yyEnd = newarray (double)[$stack32];

        $stack33 = lengthof x;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(x, 0, xx, 0, $stack33);

        $stack34 = lengthof xStart;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(xStart, 0, xxStart, 0, $stack34);

        $stack35 = lengthof xEnd;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(xEnd, 0, xxEnd, 0, $stack35);

        $stack36 = lengthof y;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(y, 0, yy, 0, $stack36);

        $stack37 = lengthof yStart;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(yStart, 0, yyStart, 0, $stack37);

        $stack38 = lengthof yEnd;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(yEnd, 0, yyEnd, 0, $stack38);

        $stack40 = clone.<org.jfree.data.xy.DefaultIntervalXYDataset: java.util.List seriesList>;

        $stack39 = newarray (double[])[6];

        $stack39[0] = xx;

        $stack39[1] = xxStart;

        $stack39[2] = xxEnd;

        $stack39[3] = yy;

        $stack39[4] = yyStart;

        $stack39[5] = yyEnd;

        interfaceinvoke $stack40.<java.util.List: void add(int,java.lang.Object)>(i, $stack39);

        i = i + 1;

        goto label1;

     label2:
        return clone;
    }
}
