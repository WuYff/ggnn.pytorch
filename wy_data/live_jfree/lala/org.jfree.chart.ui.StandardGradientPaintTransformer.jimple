public class org.jfree.chart.ui.StandardGradientPaintTransformer extends java.lang.Object implements org.jfree.chart.ui.GradientPaintTransformer, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private org.jfree.chart.ui.GradientPaintTransformType type;

    public void <init>()
    {
        org.jfree.chart.ui.StandardGradientPaintTransformer this;
        org.jfree.chart.ui.GradientPaintTransformType $stack1;

        this := @this: org.jfree.chart.ui.StandardGradientPaintTransformer;

        $stack1 = <org.jfree.chart.ui.GradientPaintTransformType: org.jfree.chart.ui.GradientPaintTransformType VERTICAL>;

        specialinvoke this.<org.jfree.chart.ui.StandardGradientPaintTransformer: void <init>(org.jfree.chart.ui.GradientPaintTransformType)>($stack1);

        return;
    }

    public void <init>(org.jfree.chart.ui.GradientPaintTransformType)
    {
        org.jfree.chart.ui.StandardGradientPaintTransformer this;
        org.jfree.chart.ui.GradientPaintTransformType type;
        java.lang.IllegalArgumentException $stack2;

        this := @this: org.jfree.chart.ui.StandardGradientPaintTransformer;

        type := @parameter0: org.jfree.chart.ui.GradientPaintTransformType;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if type != null goto label1;

        $stack2 = new java.lang.IllegalArgumentException;

        specialinvoke $stack2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null \'type\' argument.");

        throw $stack2;

     label1:
        this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type> = type;

        return;
    }

    public org.jfree.chart.ui.GradientPaintTransformType getType()
    {
        org.jfree.chart.ui.StandardGradientPaintTransformer this;
        org.jfree.chart.ui.GradientPaintTransformType $stack1;

        this := @this: org.jfree.chart.ui.StandardGradientPaintTransformer;

        $stack1 = this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        return $stack1;
    }

    public java.awt.GradientPaint transform(java.awt.GradientPaint, java.awt.Shape)
    {
        java.awt.GradientPaint paint, $stack18, $stack30, $stack41, $stack52, result;
        java.awt.Shape target;
        java.awt.geom.Rectangle2D bounds;
        org.jfree.chart.ui.StandardGradientPaintTransformer this;
        org.jfree.chart.ui.GradientPaintTransformType $stack6, $stack7, $stack9, $stack10, $stack12, $stack13, $stack15, $stack16;
        boolean $stack8, $stack11, $stack14, $stack17;
        double $stack19, $stack21, $stack24, $stack26, $stack31, $stack33, $stack36, $stack38, $stack42, $stack44, $stack47, $stack49, $stack53, $stack55, $stack58, $stack60;
        float $stack20, $stack22, $stack25, $stack27, $stack32, $stack34, $stack37, $stack39, $stack43, $stack45, $stack48, $stack50, $stack54, $stack56, $stack59, $stack61;
        java.awt.Color $stack23, $stack28, $stack35, $stack40, $stack46, $stack51, $stack57, $stack62;

        this := @this: org.jfree.chart.ui.StandardGradientPaintTransformer;

        paint := @parameter0: java.awt.GradientPaint;

        target := @parameter1: java.awt.Shape;

        result = paint;

        bounds = interfaceinvoke target.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        $stack7 = this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        $stack6 = <org.jfree.chart.ui.GradientPaintTransformType: org.jfree.chart.ui.GradientPaintTransformType VERTICAL>;

        $stack8 = virtualinvoke $stack7.<org.jfree.chart.ui.GradientPaintTransformType: boolean equals(java.lang.Object)>($stack6);

        if $stack8 == 0 goto label1;

        $stack52 = new java.awt.GradientPaint;

        $stack53 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $stack54 = (float) $stack53;

        $stack55 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMinY()>();

        $stack56 = (float) $stack55;

        $stack57 = virtualinvoke paint.<java.awt.GradientPaint: java.awt.Color getColor1()>();

        $stack58 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $stack59 = (float) $stack58;

        $stack60 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMaxY()>();

        $stack61 = (float) $stack60;

        $stack62 = virtualinvoke paint.<java.awt.GradientPaint: java.awt.Color getColor2()>();

        specialinvoke $stack52.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>($stack54, $stack56, $stack57, $stack59, $stack61, $stack62);

        result = $stack52;

        goto label4;

     label1:
        $stack10 = this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        $stack9 = <org.jfree.chart.ui.GradientPaintTransformType: org.jfree.chart.ui.GradientPaintTransformType HORIZONTAL>;

        $stack11 = virtualinvoke $stack10.<org.jfree.chart.ui.GradientPaintTransformType: boolean equals(java.lang.Object)>($stack9);

        if $stack11 == 0 goto label2;

        $stack41 = new java.awt.GradientPaint;

        $stack42 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMinX()>();

        $stack43 = (float) $stack42;

        $stack44 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterY()>();

        $stack45 = (float) $stack44;

        $stack46 = virtualinvoke paint.<java.awt.GradientPaint: java.awt.Color getColor1()>();

        $stack47 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $stack48 = (float) $stack47;

        $stack49 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterY()>();

        $stack50 = (float) $stack49;

        $stack51 = virtualinvoke paint.<java.awt.GradientPaint: java.awt.Color getColor2()>();

        specialinvoke $stack41.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>($stack43, $stack45, $stack46, $stack48, $stack50, $stack51);

        result = $stack41;

        goto label4;

     label2:
        $stack13 = this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        $stack12 = <org.jfree.chart.ui.GradientPaintTransformType: org.jfree.chart.ui.GradientPaintTransformType CENTER_HORIZONTAL>;

        $stack14 = virtualinvoke $stack13.<org.jfree.chart.ui.GradientPaintTransformType: boolean equals(java.lang.Object)>($stack12);

        if $stack14 == 0 goto label3;

        $stack30 = new java.awt.GradientPaint;

        $stack31 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $stack32 = (float) $stack31;

        $stack33 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterY()>();

        $stack34 = (float) $stack33;

        $stack35 = virtualinvoke paint.<java.awt.GradientPaint: java.awt.Color getColor2()>();

        $stack36 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $stack37 = (float) $stack36;

        $stack38 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterY()>();

        $stack39 = (float) $stack38;

        $stack40 = virtualinvoke paint.<java.awt.GradientPaint: java.awt.Color getColor1()>();

        specialinvoke $stack30.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color,boolean)>($stack32, $stack34, $stack35, $stack37, $stack39, $stack40, 1);

        result = $stack30;

        goto label4;

     label3:
        $stack16 = this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        $stack15 = <org.jfree.chart.ui.GradientPaintTransformType: org.jfree.chart.ui.GradientPaintTransformType CENTER_VERTICAL>;

        $stack17 = virtualinvoke $stack16.<org.jfree.chart.ui.GradientPaintTransformType: boolean equals(java.lang.Object)>($stack15);

        if $stack17 == 0 goto label4;

        $stack18 = new java.awt.GradientPaint;

        $stack19 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $stack20 = (float) $stack19;

        $stack21 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getMinY()>();

        $stack22 = (float) $stack21;

        $stack23 = virtualinvoke paint.<java.awt.GradientPaint: java.awt.Color getColor1()>();

        $stack24 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $stack25 = (float) $stack24;

        $stack26 = virtualinvoke bounds.<java.awt.geom.Rectangle2D: double getCenterY()>();

        $stack27 = (float) $stack26;

        $stack28 = virtualinvoke paint.<java.awt.GradientPaint: java.awt.Color getColor2()>();

        specialinvoke $stack18.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color,boolean)>($stack20, $stack22, $stack23, $stack25, $stack27, $stack28, 1);

        result = $stack18;

     label4:
        return result;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.ui.StandardGradientPaintTransformer this, that;
        boolean $stack3;
        org.jfree.chart.ui.GradientPaintTransformType $stack4, $stack5;

        this := @this: org.jfree.chart.ui.StandardGradientPaintTransformer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.ui.StandardGradientPaintTransformer;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.ui.StandardGradientPaintTransformer) obj;

        $stack5 = this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        $stack4 = that.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        return 1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.ui.StandardGradientPaintTransformer this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.ui.StandardGradientPaintTransformer;

        $stack1 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        return $stack1;
    }

    public int hashCode()
    {
        org.jfree.chart.ui.StandardGradientPaintTransformer this;
        org.jfree.chart.ui.GradientPaintTransformType $stack1, $stack2;
        int $stack3;

        this := @this: org.jfree.chart.ui.StandardGradientPaintTransformer;

        $stack1 = this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        if $stack1 == null goto label1;

        $stack2 = this.<org.jfree.chart.ui.StandardGradientPaintTransformer: org.jfree.chart.ui.GradientPaintTransformType type>;

        $stack3 = virtualinvoke $stack2.<org.jfree.chart.ui.GradientPaintTransformType: int hashCode()>();

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.ui.StandardGradientPaintTransformer: long serialVersionUID> = -8155025776964678320L;

        return;
    }
}
