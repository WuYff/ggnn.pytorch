public class org.jfree.chart.block.EmptyBlock extends org.jfree.chart.block.AbstractBlock implements org.jfree.chart.block.Block, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>(double, double)
    {
        org.jfree.chart.block.EmptyBlock this;
        double width, height;

        this := @this: org.jfree.chart.block.EmptyBlock;

        width := @parameter0: double;

        height := @parameter1: double;

        specialinvoke this.<org.jfree.chart.block.AbstractBlock: void <init>()>();

        virtualinvoke this.<org.jfree.chart.block.EmptyBlock: void setWidth(double)>(width);

        virtualinvoke this.<org.jfree.chart.block.EmptyBlock: void setHeight(double)>(height);

        return;
    }

    public org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.ui.Size2D $stack4, $stack9;
        org.jfree.chart.block.EmptyBlock this;
        double $stack5, $stack6, $stack7, $stack8;
        org.jfree.chart.block.RectangleConstraint constraint;
        java.awt.Graphics2D g2;

        this := @this: org.jfree.chart.block.EmptyBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        constraint := @parameter1: org.jfree.chart.block.RectangleConstraint;

        $stack4 = new org.jfree.chart.ui.Size2D;

        $stack5 = virtualinvoke this.<org.jfree.chart.block.EmptyBlock: double getWidth()>();

        $stack6 = virtualinvoke this.<org.jfree.chart.block.EmptyBlock: double calculateTotalWidth(double)>($stack5);

        $stack7 = virtualinvoke this.<org.jfree.chart.block.EmptyBlock: double getHeight()>();

        $stack8 = virtualinvoke this.<org.jfree.chart.block.EmptyBlock: double calculateTotalHeight(double)>($stack7);

        specialinvoke $stack4.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack6, $stack8);

        $stack9 = virtualinvoke constraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.ui.Size2D calculateConstrainedSize(org.jfree.chart.ui.Size2D)>($stack4);

        return $stack9;
    }

    public void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.block.EmptyBlock this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.block.EmptyBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        virtualinvoke this.<org.jfree.chart.block.EmptyBlock: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(g2, area, null);

        return;
    }

    public java.lang.Object draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.lang.Object)
    {
        org.jfree.chart.block.EmptyBlock this;
        java.awt.Graphics2D g2;
        java.lang.Object params;
        java.awt.geom.Rectangle2D area, area#2;

        this := @this: org.jfree.chart.block.EmptyBlock;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        params := @parameter2: java.lang.Object;

        area#2 = virtualinvoke this.<org.jfree.chart.block.EmptyBlock: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(area);

        virtualinvoke this.<org.jfree.chart.block.EmptyBlock: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area#2);

        return null;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.block.EmptyBlock this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.block.EmptyBlock;

        $stack1 = specialinvoke this.<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>();

        return $stack1;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.block.EmptyBlock: long serialVersionUID> = -4083197869412648579L;

        return;
    }
}
