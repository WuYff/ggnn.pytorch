public abstract class org.jfree.chart.plot.AbstractPieLabelDistributor extends java.lang.Object implements java.io.Serializable
{
    protected java.util.List labels;

    public void <init>()
    {
        org.jfree.chart.plot.AbstractPieLabelDistributor this;
        java.util.ArrayList $stack1;

        this := @this: org.jfree.chart.plot.AbstractPieLabelDistributor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels> = $stack1;

        return;
    }

    public org.jfree.chart.plot.PieLabelRecord getPieLabelRecord(int)
    {
        org.jfree.chart.plot.AbstractPieLabelDistributor this;
        int index;
        java.util.List $stack2;
        java.lang.Object $stack3;
        org.jfree.chart.plot.PieLabelRecord $stack4;

        this := @this: org.jfree.chart.plot.AbstractPieLabelDistributor;

        index := @parameter0: int;

        $stack2 = this.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(index);

        $stack4 = (org.jfree.chart.plot.PieLabelRecord) $stack3;

        return $stack4;
    }

    public void addPieLabelRecord(org.jfree.chart.plot.PieLabelRecord)
    {
        org.jfree.chart.plot.PieLabelRecord record;
        org.jfree.chart.plot.AbstractPieLabelDistributor this;
        java.util.List $stack2;

        this := @this: org.jfree.chart.plot.AbstractPieLabelDistributor;

        record := @parameter0: org.jfree.chart.plot.PieLabelRecord;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(record, "record");

        $stack2 = this.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(record);

        return;
    }

    public int getItemCount()
    {
        org.jfree.chart.plot.AbstractPieLabelDistributor this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.chart.plot.AbstractPieLabelDistributor;

        $stack1 = this.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public void clear()
    {
        org.jfree.chart.plot.AbstractPieLabelDistributor this;
        java.util.List $stack1;

        this := @this: org.jfree.chart.plot.AbstractPieLabelDistributor;

        $stack1 = this.<org.jfree.chart.plot.AbstractPieLabelDistributor: java.util.List labels>;

        interfaceinvoke $stack1.<java.util.List: void clear()>();

        return;
    }

    public abstract void distributeLabels(double, double);
}
