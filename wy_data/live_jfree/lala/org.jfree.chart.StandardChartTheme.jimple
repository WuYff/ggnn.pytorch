public class org.jfree.chart.StandardChartTheme extends java.lang.Object implements org.jfree.chart.ChartTheme, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private java.lang.String name;
    private java.awt.Font extraLargeFont;
    private java.awt.Font largeFont;
    private java.awt.Font regularFont;
    private java.awt.Font smallFont;
    private transient java.awt.Paint titlePaint;
    private transient java.awt.Paint subtitlePaint;
    private transient java.awt.Paint chartBackgroundPaint;
    private transient java.awt.Paint legendBackgroundPaint;
    private transient java.awt.Paint legendItemPaint;
    private org.jfree.chart.plot.DrawingSupplier drawingSupplier;
    private transient java.awt.Paint plotBackgroundPaint;
    private transient java.awt.Paint plotOutlinePaint;
    private org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle;
    private transient java.awt.Paint labelLinkPaint;
    private transient java.awt.Paint domainGridlinePaint;
    private transient java.awt.Paint rangeGridlinePaint;
    private transient java.awt.Paint baselinePaint;
    private transient java.awt.Paint crosshairPaint;
    private org.jfree.chart.ui.RectangleInsets axisOffset;
    private transient java.awt.Paint axisLabelPaint;
    private transient java.awt.Paint tickLabelPaint;
    private transient java.awt.Paint itemLabelPaint;
    private boolean shadowVisible;
    private transient java.awt.Paint shadowPaint;
    private org.jfree.chart.renderer.category.BarPainter barPainter;
    private org.jfree.chart.renderer.xy.XYBarPainter xyBarPainter;
    private transient java.awt.Paint thermometerPaint;
    private transient java.awt.Paint errorIndicatorPaint;
    private transient java.awt.Paint gridBandPaint;
    private transient java.awt.Paint gridBandAlternatePaint;
    private org.jfree.chart.util.ShadowGenerator shadowGenerator;

    public static org.jfree.chart.ChartTheme createJFreeTheme()
    {
        org.jfree.chart.StandardChartTheme $stack0;

        $stack0 = new org.jfree.chart.StandardChartTheme;

        specialinvoke $stack0.<org.jfree.chart.StandardChartTheme: void <init>(java.lang.String)>("JFree");

        return $stack0;
    }

    public static org.jfree.chart.ChartTheme createDarknessTheme()
    {
        org.jfree.chart.StandardChartTheme $stack1;
        java.awt.Color $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack19, $stack21, $stack23, $stack25, $stack27, $stack29, $stack31, $stack33, $stack35, $stack37, $stack39, $stack42, $stack44, $stack52, $stack53, $stack54;
        org.jfree.chart.plot.DefaultDrawingSupplier $stack16;
        java.awt.Paint[] $stack17, $stack40;
        java.awt.Stroke[] $stack45, $stack48;
        java.awt.BasicStroke $stack46, $stack49;
        java.awt.Shape[] $stack51;

        $stack1 = new org.jfree.chart.StandardChartTheme;

        specialinvoke $stack1.<org.jfree.chart.StandardChartTheme: void <init>(java.lang.String)>("Darkness");

        $stack2 = <java.awt.Color: java.awt.Color WHITE>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint> = $stack2;

        $stack3 = <java.awt.Color: java.awt.Color WHITE>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint> = $stack3;

        $stack4 = <java.awt.Color: java.awt.Color BLACK>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint> = $stack4;

        $stack5 = <java.awt.Color: java.awt.Color WHITE>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint> = $stack5;

        $stack6 = <java.awt.Color: java.awt.Color BLACK>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint> = $stack6;

        $stack7 = <java.awt.Color: java.awt.Color BLACK>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint> = $stack7;

        $stack8 = <java.awt.Color: java.awt.Color YELLOW>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint> = $stack8;

        $stack9 = <java.awt.Color: java.awt.Color WHITE>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint> = $stack9;

        $stack10 = <java.awt.Color: java.awt.Color RED>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint> = $stack10;

        $stack11 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint> = $stack11;

        $stack12 = <java.awt.Color: java.awt.Color WHITE>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint> = $stack12;

        $stack13 = <java.awt.Color: java.awt.Color WHITE>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint> = $stack13;

        $stack14 = <java.awt.Color: java.awt.Color DARK_GRAY>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint> = $stack14;

        $stack15 = <java.awt.Color: java.awt.Color WHITE>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint> = $stack15;

        $stack16 = new org.jfree.chart.plot.DefaultDrawingSupplier;

        $stack17 = newarray (java.awt.Paint)[11];

        $stack19 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0xFFFF00");

        $stack17[0] = $stack19;

        $stack21 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0x0036CC");

        $stack17[1] = $stack21;

        $stack23 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0xFF0000");

        $stack17[2] = $stack23;

        $stack25 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0xFFFF7F");

        $stack17[3] = $stack25;

        $stack27 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0x6681CC");

        $stack17[4] = $stack27;

        $stack29 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0xFF7F7F");

        $stack17[5] = $stack29;

        $stack31 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0xFFFFBF");

        $stack17[6] = $stack31;

        $stack33 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0x99A6CC");

        $stack17[7] = $stack33;

        $stack35 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0xFFBFBF");

        $stack17[8] = $stack35;

        $stack37 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0xA9A938");

        $stack17[9] = $stack37;

        $stack39 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0x2D4587");

        $stack17[10] = $stack39;

        $stack40 = newarray (java.awt.Paint)[2];

        $stack42 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0xFFFF00");

        $stack40[0] = $stack42;

        $stack44 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("0x0036CC");

        $stack40[1] = $stack44;

        $stack45 = newarray (java.awt.Stroke)[1];

        $stack46 = new java.awt.BasicStroke;

        specialinvoke $stack46.<java.awt.BasicStroke: void <init>(float)>(2.0F);

        $stack45[0] = $stack46;

        $stack48 = newarray (java.awt.Stroke)[1];

        $stack49 = new java.awt.BasicStroke;

        specialinvoke $stack49.<java.awt.BasicStroke: void <init>(float)>(0.5F);

        $stack48[0] = $stack49;

        $stack51 = <org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] DEFAULT_SHAPE_SEQUENCE>;

        specialinvoke $stack16.<org.jfree.chart.plot.DefaultDrawingSupplier: void <init>(java.awt.Paint[],java.awt.Paint[],java.awt.Stroke[],java.awt.Stroke[],java.awt.Shape[])>($stack17, $stack40, $stack45, $stack48, $stack51);

        $stack1.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = $stack16;

        $stack52 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint> = $stack52;

        $stack53 = new java.awt.Color;

        specialinvoke $stack53.<java.awt.Color: void <init>(int,int,int,int)>(255, 255, 255, 20);

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint> = $stack53;

        $stack54 = new java.awt.Color;

        specialinvoke $stack54.<java.awt.Color: void <init>(int,int,int,int)>(255, 255, 255, 40);

        $stack1.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint> = $stack54;

        $stack1.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator> = null;

        return $stack1;
    }

    public static org.jfree.chart.ChartTheme createLegacyTheme()
    {
        org.jfree.chart.StandardChartTheme$1 $stack1;

        $stack1 = new org.jfree.chart.StandardChartTheme$1;

        specialinvoke $stack1.<org.jfree.chart.StandardChartTheme$1: void <init>(java.lang.String)>("Legacy");

        return $stack1;
    }

    public void <init>(java.lang.String)
    {
        org.jfree.chart.StandardChartTheme this;
        java.lang.String name;

        this := @this: org.jfree.chart.StandardChartTheme;

        name := @parameter0: java.lang.String;

        specialinvoke this.<org.jfree.chart.StandardChartTheme: void <init>(java.lang.String,boolean)>(name, 0);

        return;
    }

    public void <init>(java.lang.String, boolean)
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack3, $stack4;
        java.lang.String name;
        java.awt.Font $stack5, $stack6, $stack7, $stack8;
        java.awt.Color $stack9, $stack10, $stack11, $stack12, $stack13, $stack15, $stack16, $stack17, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack28, $stack29, $stack30, $stack31;
        org.jfree.chart.plot.DefaultDrawingSupplier $stack14;
        org.jfree.chart.plot.PieLabelLinkStyle $stack18;
        org.jfree.chart.ui.RectangleInsets $stack19;
        org.jfree.chart.renderer.category.GradientBarPainter $stack26;
        org.jfree.chart.renderer.xy.GradientXYBarPainter $stack27;
        boolean shadow;
        org.jfree.chart.util.DefaultShadowGenerator $stack32;

        this := @this: org.jfree.chart.StandardChartTheme;

        name := @parameter0: java.lang.String;

        shadow := @parameter1: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack3 = <org.jfree.chart.axis.SymbolAxis: java.awt.Paint DEFAULT_GRID_BAND_PAINT>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint> = $stack3;

        $stack4 = <org.jfree.chart.axis.SymbolAxis: java.awt.Paint DEFAULT_GRID_BAND_ALTERNATE_PAINT>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint> = $stack4;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(name, "name");

        this.<org.jfree.chart.StandardChartTheme: java.lang.String name> = name;

        $stack5 = new java.awt.Font;

        specialinvoke $stack5.<java.awt.Font: void <init>(java.lang.String,int,int)>("Tahoma", 1, 20);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont> = $stack5;

        $stack6 = new java.awt.Font;

        specialinvoke $stack6.<java.awt.Font: void <init>(java.lang.String,int,int)>("Tahoma", 1, 14);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont> = $stack6;

        $stack7 = new java.awt.Font;

        specialinvoke $stack7.<java.awt.Font: void <init>(java.lang.String,int,int)>("Tahoma", 0, 12);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont> = $stack7;

        $stack8 = new java.awt.Font;

        specialinvoke $stack8.<java.awt.Font: void <init>(java.lang.String,int,int)>("Tahoma", 0, 10);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Font smallFont> = $stack8;

        $stack9 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint> = $stack9;

        $stack10 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint> = $stack10;

        $stack11 = <java.awt.Color: java.awt.Color WHITE>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint> = $stack11;

        $stack12 = <java.awt.Color: java.awt.Color DARK_GRAY>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint> = $stack12;

        $stack13 = <java.awt.Color: java.awt.Color WHITE>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint> = $stack13;

        $stack14 = new org.jfree.chart.plot.DefaultDrawingSupplier;

        specialinvoke $stack14.<org.jfree.chart.plot.DefaultDrawingSupplier: void <init>()>();

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = $stack14;

        $stack15 = <java.awt.Color: java.awt.Color LIGHT_GRAY>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint> = $stack15;

        $stack16 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint> = $stack16;

        $stack17 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint> = $stack17;

        $stack18 = <org.jfree.chart.plot.PieLabelLinkStyle: org.jfree.chart.plot.PieLabelLinkStyle CUBIC_CURVE>;

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> = $stack18;

        $stack19 = new org.jfree.chart.ui.RectangleInsets;

        specialinvoke $stack19.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(4.0, 4.0, 4.0, 4.0);

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.ui.RectangleInsets axisOffset> = $stack19;

        $stack20 = <java.awt.Color: java.awt.Color WHITE>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint> = $stack20;

        $stack21 = <java.awt.Color: java.awt.Color WHITE>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint> = $stack21;

        $stack22 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint> = $stack22;

        $stack23 = <java.awt.Color: java.awt.Color BLUE>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint> = $stack23;

        $stack24 = <java.awt.Color: java.awt.Color DARK_GRAY>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint> = $stack24;

        $stack25 = <java.awt.Color: java.awt.Color DARK_GRAY>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint> = $stack25;

        $stack26 = new org.jfree.chart.renderer.category.GradientBarPainter;

        specialinvoke $stack26.<org.jfree.chart.renderer.category.GradientBarPainter: void <init>()>();

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.category.BarPainter barPainter> = $stack26;

        $stack27 = new org.jfree.chart.renderer.xy.GradientXYBarPainter;

        specialinvoke $stack27.<org.jfree.chart.renderer.xy.GradientXYBarPainter: void <init>()>();

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.xy.XYBarPainter xyBarPainter> = $stack27;

        this.<org.jfree.chart.StandardChartTheme: boolean shadowVisible> = 0;

        $stack28 = <java.awt.Color: java.awt.Color GRAY>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint> = $stack28;

        $stack29 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint> = $stack29;

        $stack30 = <java.awt.Color: java.awt.Color WHITE>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint> = $stack30;

        $stack31 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint> = $stack31;

        if shadow == 0 goto label1;

        $stack32 = new org.jfree.chart.util.DefaultShadowGenerator;

        specialinvoke $stack32.<org.jfree.chart.util.DefaultShadowGenerator: void <init>()>();

        goto label2;

     label1:
        $stack32 = null;

     label2:
        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator> = $stack32;

        return;
    }

    public java.awt.Font getExtraLargeFont()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>;

        return $stack1;
    }

    public void setExtraLargeFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont> = font;

        return;
    }

    public java.awt.Font getLargeFont()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        return $stack1;
    }

    public void setLargeFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont> = font;

        return;
    }

    public java.awt.Font getRegularFont()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        return $stack1;
    }

    public void setRegularFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont> = font;

        return;
    }

    public java.awt.Font getSmallFont()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font smallFont>;

        return $stack1;
    }

    public void setSmallFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Font smallFont> = font;

        return;
    }

    public java.awt.Paint getTitlePaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>;

        return $stack1;
    }

    public void setTitlePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint> = paint;

        return;
    }

    public java.awt.Paint getSubtitlePaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint>;

        return $stack1;
    }

    public void setSubtitlePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint> = paint;

        return;
    }

    public java.awt.Paint getChartBackgroundPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>;

        return $stack1;
    }

    public void setChartBackgroundPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint> = paint;

        return;
    }

    public java.awt.Paint getLegendBackgroundPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>;

        return $stack1;
    }

    public void setLegendBackgroundPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint> = paint;

        return;
    }

    public java.awt.Paint getLegendItemPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>;

        return $stack1;
    }

    public void setLegendItemPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint> = paint;

        return;
    }

    public java.awt.Paint getPlotBackgroundPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>;

        return $stack1;
    }

    public void setPlotBackgroundPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint> = paint;

        return;
    }

    public java.awt.Paint getPlotOutlinePaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>;

        return $stack1;
    }

    public void setPlotOutlinePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint> = paint;

        return;
    }

    public org.jfree.chart.plot.PieLabelLinkStyle getLabelLinkStyle()
    {
        org.jfree.chart.StandardChartTheme this;
        org.jfree.chart.plot.PieLabelLinkStyle $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>;

        return $stack1;
    }

    public void setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)
    {
        org.jfree.chart.plot.PieLabelLinkStyle style;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        style := @parameter0: org.jfree.chart.plot.PieLabelLinkStyle;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(style, "style");

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle> = style;

        return;
    }

    public java.awt.Paint getLabelLinkPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>;

        return $stack1;
    }

    public void setLabelLinkPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint> = paint;

        return;
    }

    public java.awt.Paint getDomainGridlinePaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        return $stack1;
    }

    public void setDomainGridlinePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint> = paint;

        return;
    }

    public java.awt.Paint getRangeGridlinePaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        return $stack1;
    }

    public void setRangeGridlinePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint> = paint;

        return;
    }

    public java.awt.Paint getBaselinePaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint>;

        return $stack1;
    }

    public void setBaselinePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint> = paint;

        return;
    }

    public java.awt.Paint getCrosshairPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint>;

        return $stack1;
    }

    public void setCrosshairPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint> = paint;

        return;
    }

    public org.jfree.chart.ui.RectangleInsets getAxisOffset()
    {
        org.jfree.chart.StandardChartTheme this;
        org.jfree.chart.ui.RectangleInsets $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.ui.RectangleInsets axisOffset>;

        return $stack1;
    }

    public void setAxisOffset(org.jfree.chart.ui.RectangleInsets)
    {
        org.jfree.chart.ui.RectangleInsets offset;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        offset := @parameter0: org.jfree.chart.ui.RectangleInsets;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(offset, "offset");

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.ui.RectangleInsets axisOffset> = offset;

        return;
    }

    public java.awt.Paint getAxisLabelPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        return $stack1;
    }

    public void setAxisLabelPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint> = paint;

        return;
    }

    public java.awt.Paint getTickLabelPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        return $stack1;
    }

    public void setTickLabelPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint> = paint;

        return;
    }

    public java.awt.Paint getItemLabelPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>;

        return $stack1;
    }

    public void setItemLabelPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint> = paint;

        return;
    }

    public boolean isShadowVisible()
    {
        org.jfree.chart.StandardChartTheme this;
        boolean $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: boolean shadowVisible>;

        return $stack1;
    }

    public void setShadowVisible(boolean)
    {
        org.jfree.chart.StandardChartTheme this;
        boolean visible;

        this := @this: org.jfree.chart.StandardChartTheme;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.StandardChartTheme: boolean shadowVisible> = visible;

        return;
    }

    public java.awt.Paint getShadowPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint>;

        return $stack1;
    }

    public void setShadowPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint> = paint;

        return;
    }

    public org.jfree.chart.renderer.category.BarPainter getBarPainter()
    {
        org.jfree.chart.StandardChartTheme this;
        org.jfree.chart.renderer.category.BarPainter $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.category.BarPainter barPainter>;

        return $stack1;
    }

    public void setBarPainter(org.jfree.chart.renderer.category.BarPainter)
    {
        org.jfree.chart.renderer.category.BarPainter painter;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        painter := @parameter0: org.jfree.chart.renderer.category.BarPainter;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(painter, "painter");

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.category.BarPainter barPainter> = painter;

        return;
    }

    public org.jfree.chart.renderer.xy.XYBarPainter getXYBarPainter()
    {
        org.jfree.chart.StandardChartTheme this;
        org.jfree.chart.renderer.xy.XYBarPainter $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.xy.XYBarPainter xyBarPainter>;

        return $stack1;
    }

    public void setXYBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)
    {
        org.jfree.chart.renderer.xy.XYBarPainter painter;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        painter := @parameter0: org.jfree.chart.renderer.xy.XYBarPainter;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(painter, "painter");

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.xy.XYBarPainter xyBarPainter> = painter;

        return;
    }

    public java.awt.Paint getThermometerPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint>;

        return $stack1;
    }

    public void setThermometerPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint> = paint;

        return;
    }

    public java.awt.Paint getErrorIndicatorPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint>;

        return $stack1;
    }

    public void setErrorIndicatorPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint> = paint;

        return;
    }

    public java.awt.Paint getGridBandPaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint>;

        return $stack1;
    }

    public void setGridBandPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint> = paint;

        return;
    }

    public java.awt.Paint getGridBandAlternatePaint()
    {
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint>;

        return $stack1;
    }

    public void setGridBandAlternatePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint> = paint;

        return;
    }

    public java.lang.String getName()
    {
        org.jfree.chart.StandardChartTheme this;
        java.lang.String $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = this.<org.jfree.chart.StandardChartTheme: java.lang.String name>;

        return $stack1;
    }

    public org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()
    {
        org.jfree.chart.StandardChartTheme this;
        org.jfree.chart.plot.DrawingSupplier $stack4, $stack6, result;
        boolean $stack5;
        org.jfree.chart.util.PublicCloneable pc;
        java.lang.Object $stack7;
        java.lang.CloneNotSupportedException $stack9;
        java.lang.RuntimeException $stack10;

        this := @this: org.jfree.chart.StandardChartTheme;

        result = null;

        $stack4 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>;

        $stack5 = $stack4 instanceof org.jfree.chart.util.PublicCloneable;

        if $stack5 == 0 goto label4;

        $stack6 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>;

        pc = (org.jfree.chart.util.PublicCloneable) $stack6;

     label1:
        $stack7 = interfaceinvoke pc.<org.jfree.chart.util.PublicCloneable: java.lang.Object clone()>();

        result = (org.jfree.chart.plot.DrawingSupplier) $stack7;

     label2:
        goto label4;

     label3:
        $stack9 := @caughtexception;

        $stack10 = new java.lang.RuntimeException;

        specialinvoke $stack10.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($stack9);

        throw $stack10;

     label4:
        return result;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public void setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)
    {
        org.jfree.chart.plot.DrawingSupplier supplier;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        supplier := @parameter0: org.jfree.chart.plot.DrawingSupplier;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(supplier, "supplier");

        this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier> = supplier;

        return;
    }

    public void apply(org.jfree.chart.JFreeChart)
    {
        org.jfree.chart.JFreeChart chart;
        org.jfree.chart.title.TextTitle title;
        int subtitleCount, i;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack7, $stack13;
        org.jfree.chart.title.Title $stack9;
        java.awt.Font $stack12;
        org.jfree.chart.plot.Plot i#6;

        this := @this: org.jfree.chart.StandardChartTheme;

        chart := @parameter0: org.jfree.chart.JFreeChart;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(chart, "chart");

        title = virtualinvoke chart.<org.jfree.chart.JFreeChart: org.jfree.chart.title.TextTitle getTitle()>();

        if title == null goto label1;

        $stack12 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>;

        virtualinvoke title.<org.jfree.chart.title.TextTitle: void setFont(java.awt.Font)>($stack12);

        $stack13 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>;

        virtualinvoke title.<org.jfree.chart.title.TextTitle: void setPaint(java.awt.Paint)>($stack13);

     label1:
        subtitleCount = virtualinvoke chart.<org.jfree.chart.JFreeChart: int getSubtitleCount()>();

        i = 0;

     label2:
        if i >= subtitleCount goto label3;

        $stack9 = virtualinvoke chart.<org.jfree.chart.JFreeChart: org.jfree.chart.title.Title getSubtitle(int)>(i);

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToTitle(org.jfree.chart.title.Title)>($stack9);

        i = i + 1;

        goto label2;

     label3:
        $stack7 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>;

        virtualinvoke chart.<org.jfree.chart.JFreeChart: void setBackgroundPaint(java.awt.Paint)>($stack7);

        i#6 = virtualinvoke chart.<org.jfree.chart.JFreeChart: org.jfree.chart.plot.Plot getPlot()>();

        if i#6 == null goto label4;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(i#6);

     label4:
        return;
    }

    protected void applyToTitle(org.jfree.chart.title.Title)
    {
        org.jfree.chart.title.Title title, $stack17;
        boolean $stack6, $stack7, $stack8, $stack9, $stack13, $stack15;
        java.util.List $stack11;
        java.util.Iterator l4;
        java.lang.Object $stack14;
        org.jfree.chart.block.Block b;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack18, $stack20, $stack22, $stack25, $stack32;
        java.awt.Font $stack21, $stack31;
        org.jfree.chart.block.BlockContainer $stack23, $stack24, axis#6;
        org.jfree.chart.title.TextTitle tt;
        org.jfree.chart.title.LegendTitle tt#2;
        org.jfree.chart.title.PaintScaleLegend tt#3;
        org.jfree.chart.axis.ValueAxis axis;
        org.jfree.chart.title.CompositeTitle tt#5;

        this := @this: org.jfree.chart.StandardChartTheme;

        title := @parameter0: org.jfree.chart.title.Title;

        $stack6 = title instanceof org.jfree.chart.title.TextTitle;

        if $stack6 == 0 goto label1;

        tt = (org.jfree.chart.title.TextTitle) title;

        $stack31 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        virtualinvoke tt.<org.jfree.chart.title.TextTitle: void setFont(java.awt.Font)>($stack31);

        $stack32 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint>;

        virtualinvoke tt.<org.jfree.chart.title.TextTitle: void setPaint(java.awt.Paint)>($stack32);

        goto label9;

     label1:
        $stack7 = title instanceof org.jfree.chart.title.LegendTitle;

        if $stack7 == 0 goto label4;

        tt#2 = (org.jfree.chart.title.LegendTitle) title;

        $stack20 = virtualinvoke tt#2.<org.jfree.chart.title.LegendTitle: java.awt.Paint getBackgroundPaint()>();

        if $stack20 == null goto label2;

        $stack25 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>;

        virtualinvoke tt#2.<org.jfree.chart.title.LegendTitle: void setBackgroundPaint(java.awt.Paint)>($stack25);

     label2:
        $stack21 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke tt#2.<org.jfree.chart.title.LegendTitle: void setItemFont(java.awt.Font)>($stack21);

        $stack22 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>;

        virtualinvoke tt#2.<org.jfree.chart.title.LegendTitle: void setItemPaint(java.awt.Paint)>($stack22);

        $stack23 = virtualinvoke tt#2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer getWrapper()>();

        if $stack23 == null goto label3;

        $stack24 = virtualinvoke tt#2.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer getWrapper()>();

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToBlockContainer(org.jfree.chart.block.BlockContainer)>($stack24);

     label3:
        goto label9;

     label4:
        $stack8 = title instanceof org.jfree.chart.title.PaintScaleLegend;

        if $stack8 == 0 goto label6;

        tt#3 = (org.jfree.chart.title.PaintScaleLegend) title;

        $stack18 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>;

        virtualinvoke tt#3.<org.jfree.chart.title.PaintScaleLegend: void setBackgroundPaint(java.awt.Paint)>($stack18);

        axis = virtualinvoke tt#3.<org.jfree.chart.title.PaintScaleLegend: org.jfree.chart.axis.ValueAxis getAxis()>();

        if axis == null goto label5;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(axis);

     label5:
        goto label9;

     label6:
        $stack9 = title instanceof org.jfree.chart.title.CompositeTitle;

        if $stack9 == 0 goto label9;

        tt#5 = (org.jfree.chart.title.CompositeTitle) title;

        axis#6 = virtualinvoke tt#5.<org.jfree.chart.title.CompositeTitle: org.jfree.chart.block.BlockContainer getContainer()>();

        $stack11 = virtualinvoke axis#6.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>();

        l4 = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $stack13 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label9;

        $stack14 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        b = (org.jfree.chart.block.Block) $stack14;

        $stack15 = b instanceof org.jfree.chart.title.Title;

        if $stack15 == 0 goto label8;

        $stack17 = (org.jfree.chart.title.Title) b;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToTitle(org.jfree.chart.title.Title)>($stack17);

     label8:
        goto label7;

     label9:
        return;
    }

    protected void applyToBlockContainer(org.jfree.chart.block.BlockContainer)
    {
        org.jfree.chart.block.BlockContainer bc;
        java.util.List $stack4;
        java.util.Iterator l2;
        boolean $stack6;
        java.lang.Object $stack7;
        org.jfree.chart.block.Block b;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        bc := @parameter0: org.jfree.chart.block.BlockContainer;

        $stack4 = virtualinvoke bc.<org.jfree.chart.block.BlockContainer: java.util.List getBlocks()>();

        l2 = interfaceinvoke $stack4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        $stack7 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        b = (org.jfree.chart.block.Block) $stack7;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToBlock(org.jfree.chart.block.Block)>(b);

        goto label1;

     label2:
        return;
    }

    protected void applyToBlock(org.jfree.chart.block.Block)
    {
        org.jfree.chart.block.Block b;
        boolean $stack3, $stack4;
        org.jfree.chart.block.LabelBlock lb;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack5;
        java.awt.Paint $stack6;
        org.jfree.chart.title.Title $stack7;

        this := @this: org.jfree.chart.StandardChartTheme;

        b := @parameter0: org.jfree.chart.block.Block;

        $stack3 = b instanceof org.jfree.chart.title.Title;

        if $stack3 == 0 goto label1;

        $stack7 = (org.jfree.chart.title.Title) b;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToTitle(org.jfree.chart.title.Title)>($stack7);

        goto label2;

     label1:
        $stack4 = b instanceof org.jfree.chart.block.LabelBlock;

        if $stack4 == 0 goto label2;

        lb = (org.jfree.chart.block.LabelBlock) b;

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke lb.<org.jfree.chart.block.LabelBlock: void setFont(java.awt.Font)>($stack5);

        $stack6 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>;

        virtualinvoke lb.<org.jfree.chart.block.LabelBlock: void setPaint(java.awt.Paint)>($stack6);

     label2:
        return;
    }

    protected void applyToPlot(org.jfree.chart.plot.Plot)
    {
        org.jfree.chart.plot.Plot plot;
        org.jfree.chart.plot.DrawingSupplier $stack2, $stack27;
        java.awt.Paint $stack3, $stack4, $stack23;
        org.jfree.chart.StandardChartTheme this;
        boolean $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13;
        org.jfree.chart.plot.PolarPlot $stack14;
        org.jfree.chart.plot.SpiderWebPlot $stack15;
        org.jfree.chart.plot.ThermometerPlot $stack16;
        org.jfree.chart.plot.MeterPlot $stack17;
        org.jfree.chart.plot.FastScatterPlot $stack18;
        org.jfree.chart.plot.XYPlot $stack19;
        org.jfree.chart.plot.CategoryPlot $stack20;
        org.jfree.chart.plot.MultiplePiePlot $stack21;
        org.jfree.chart.plot.PiePlot $stack22;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.Plot;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(plot, "plot");

        $stack2 = virtualinvoke plot.<org.jfree.chart.plot.Plot: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>();

        if $stack2 == null goto label01;

        $stack27 = virtualinvoke this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier getDrawingSupplier()>();

        virtualinvoke plot.<org.jfree.chart.plot.Plot: void setDrawingSupplier(org.jfree.chart.plot.DrawingSupplier)>($stack27);

     label01:
        $stack3 = virtualinvoke plot.<org.jfree.chart.plot.Plot: java.awt.Paint getBackgroundPaint()>();

        if $stack3 == null goto label02;

        $stack23 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.Plot: void setBackgroundPaint(java.awt.Paint)>($stack23);

     label02:
        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.Plot: void setOutlinePaint(java.awt.Paint)>($stack4);

        $stack5 = plot instanceof org.jfree.chart.plot.PiePlot;

        if $stack5 == 0 goto label03;

        $stack22 = (org.jfree.chart.plot.PiePlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToPiePlot(org.jfree.chart.plot.PiePlot)>($stack22);

        goto label11;

     label03:
        $stack6 = plot instanceof org.jfree.chart.plot.MultiplePiePlot;

        if $stack6 == 0 goto label04;

        $stack21 = (org.jfree.chart.plot.MultiplePiePlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)>($stack21);

        goto label11;

     label04:
        $stack7 = plot instanceof org.jfree.chart.plot.CategoryPlot;

        if $stack7 == 0 goto label05;

        $stack20 = (org.jfree.chart.plot.CategoryPlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)>($stack20);

        goto label11;

     label05:
        $stack8 = plot instanceof org.jfree.chart.plot.XYPlot;

        if $stack8 == 0 goto label06;

        $stack19 = (org.jfree.chart.plot.XYPlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToXYPlot(org.jfree.chart.plot.XYPlot)>($stack19);

        goto label11;

     label06:
        $stack9 = plot instanceof org.jfree.chart.plot.FastScatterPlot;

        if $stack9 == 0 goto label07;

        $stack18 = (org.jfree.chart.plot.FastScatterPlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)>($stack18);

        goto label11;

     label07:
        $stack10 = plot instanceof org.jfree.chart.plot.MeterPlot;

        if $stack10 == 0 goto label08;

        $stack17 = (org.jfree.chart.plot.MeterPlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToMeterPlot(org.jfree.chart.plot.MeterPlot)>($stack17);

        goto label11;

     label08:
        $stack11 = plot instanceof org.jfree.chart.plot.ThermometerPlot;

        if $stack11 == 0 goto label09;

        $stack16 = (org.jfree.chart.plot.ThermometerPlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)>($stack16);

        goto label11;

     label09:
        $stack12 = plot instanceof org.jfree.chart.plot.SpiderWebPlot;

        if $stack12 == 0 goto label10;

        $stack15 = (org.jfree.chart.plot.SpiderWebPlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)>($stack15);

        goto label11;

     label10:
        $stack13 = plot instanceof org.jfree.chart.plot.PolarPlot;

        if $stack13 == 0 goto label11;

        $stack14 = (org.jfree.chart.plot.PolarPlot) plot;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToPolarPlot(org.jfree.chart.plot.PolarPlot)>($stack14);

     label11:
        return;
    }

    protected void applyToPiePlot(org.jfree.chart.plot.PiePlot)
    {
        org.jfree.chart.plot.PiePlot plot;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack2;
        org.jfree.chart.plot.PieLabelLinkStyle $stack3;
        java.awt.Font $stack4;
        org.jfree.chart.util.ShadowGenerator $stack5;
        boolean $stack6, $stack7, $stack8;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.PiePlot;

        $stack2 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.PiePlot: void setLabelLinkPaint(java.awt.Paint)>($stack2);

        $stack3 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>;

        virtualinvoke plot.<org.jfree.chart.plot.PiePlot: void setLabelLinkStyle(org.jfree.chart.plot.PieLabelLinkStyle)>($stack3);

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke plot.<org.jfree.chart.plot.PiePlot: void setLabelFont(java.awt.Font)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator>;

        virtualinvoke plot.<org.jfree.chart.plot.PiePlot: void setShadowGenerator(org.jfree.chart.util.ShadowGenerator)>($stack5);

        $stack6 = virtualinvoke plot.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionPaint()>();

        if $stack6 == 0 goto label1;

        virtualinvoke plot.<org.jfree.chart.plot.PiePlot: void clearSectionPaints(boolean)>(0);

     label1:
        $stack7 = virtualinvoke plot.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlinePaint()>();

        if $stack7 == 0 goto label2;

        virtualinvoke plot.<org.jfree.chart.plot.PiePlot: void clearSectionOutlinePaints(boolean)>(0);

     label2:
        $stack8 = virtualinvoke plot.<org.jfree.chart.plot.PiePlot: boolean getAutoPopulateSectionOutlineStroke()>();

        if $stack8 == 0 goto label3;

        virtualinvoke plot.<org.jfree.chart.plot.PiePlot: void clearSectionOutlineStrokes(boolean)>(0);

     label3:
        return;
    }

    protected void applyToMultiplePiePlot(org.jfree.chart.plot.MultiplePiePlot)
    {
        org.jfree.chart.StandardChartTheme this;
        org.jfree.chart.plot.MultiplePiePlot plot;
        org.jfree.chart.JFreeChart $stack2;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.MultiplePiePlot;

        $stack2 = virtualinvoke plot.<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.JFreeChart getPieChart()>();

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void apply(org.jfree.chart.JFreeChart)>($stack2);

        return;
    }

    protected void applyToCategoryPlot(org.jfree.chart.plot.CategoryPlot)
    {
        org.jfree.chart.plot.CategoryPlot plot, subplot;
        org.jfree.chart.StandardChartTheme this;
        org.jfree.chart.ui.RectangleInsets $stack8;
        java.awt.Paint $stack9, $stack10, $stack11;
        org.jfree.chart.util.ShadowGenerator $stack12;
        int domainAxisCount, i, axis#4, axis#7;
        boolean $stack16, $stack17, $stack20, $stack25;
        java.util.List $stack18, $stack23;
        java.lang.Object $stack21, $stack27;
        org.jfree.chart.axis.CategoryAxis axis;
        org.jfree.chart.axis.ValueAxis axis#5;
        org.jfree.chart.renderer.category.CategoryItemRenderer r;
        org.jfree.chart.plot.CombinedDomainCategoryPlot axis#9;
        java.util.Iterator r#10;
        org.jfree.chart.plot.CombinedRangeCategoryPlot axis#12;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.CategoryPlot;

        $stack8 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.ui.RectangleInsets axisOffset>;

        virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: void setAxisOffset(org.jfree.chart.ui.RectangleInsets)>($stack8);

        $stack9 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: void setDomainGridlinePaint(java.awt.Paint)>($stack9);

        $stack10 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: void setRangeGridlinePaint(java.awt.Paint)>($stack10);

        $stack11 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: void setRangeZeroBaselinePaint(java.awt.Paint)>($stack11);

        $stack12 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator>;

        virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: void setShadowGenerator(org.jfree.chart.util.ShadowGenerator)>($stack12);

        domainAxisCount = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: int getDomainAxisCount()>();

        i = 0;

     label01:
        if i >= domainAxisCount goto label03;

        axis = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxis(int)>(i);

        if axis == null goto label02;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)>(axis);

     label02:
        i = i + 1;

        goto label01;

     label03:
        i = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: int getRangeAxisCount()>();

        axis#4 = 0;

     label04:
        if axis#4 >= i goto label06;

        axis#5 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(axis#4);

        if axis#5 == null goto label05;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(axis#5);

     label05:
        axis#4 = axis#4 + 1;

        goto label04;

     label06:
        axis#4 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: int getRendererCount()>();

        axis#7 = 0;

     label07:
        if axis#7 >= axis#4 goto label09;

        r = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.renderer.category.CategoryItemRenderer getRenderer(int)>(axis#7);

        if r == null goto label08;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)>(r);

     label08:
        axis#7 = axis#7 + 1;

        goto label07;

     label09:
        $stack16 = plot instanceof org.jfree.chart.plot.CombinedDomainCategoryPlot;

        if $stack16 == 0 goto label12;

        axis#9 = (org.jfree.chart.plot.CombinedDomainCategoryPlot) plot;

        $stack23 = virtualinvoke axis#9.<org.jfree.chart.plot.CombinedDomainCategoryPlot: java.util.List getSubplots()>();

        r#10 = interfaceinvoke $stack23.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $stack25 = interfaceinvoke r#10.<java.util.Iterator: boolean hasNext()>();

        if $stack25 == 0 goto label12;

        $stack27 = interfaceinvoke r#10.<java.util.Iterator: java.lang.Object next()>();

        subplot = (org.jfree.chart.plot.CategoryPlot) $stack27;

        if subplot == null goto label11;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(subplot);

     label11:
        goto label10;

     label12:
        $stack17 = plot instanceof org.jfree.chart.plot.CombinedRangeCategoryPlot;

        if $stack17 == 0 goto label15;

        axis#12 = (org.jfree.chart.plot.CombinedRangeCategoryPlot) plot;

        $stack18 = virtualinvoke axis#12.<org.jfree.chart.plot.CombinedRangeCategoryPlot: java.util.List getSubplots()>();

        r#10 = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $stack20 = interfaceinvoke r#10.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label15;

        $stack21 = interfaceinvoke r#10.<java.util.Iterator: java.lang.Object next()>();

        subplot = (org.jfree.chart.plot.CategoryPlot) $stack21;

        if subplot == null goto label14;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(subplot);

     label14:
        goto label13;

     label15:
        return;
    }

    protected void applyToXYPlot(org.jfree.chart.plot.XYPlot)
    {
        org.jfree.chart.plot.XYPlot plot, subplot;
        org.jfree.chart.StandardChartTheme this;
        org.jfree.chart.ui.RectangleInsets $stack8;
        java.awt.Paint $stack9, $stack10, $stack11, $stack12, $stack13, $stack14;
        org.jfree.chart.util.ShadowGenerator $stack15;
        int domainAxisCount, i, axis#4, axis#7;
        java.util.List $stack19, $stack24, $stack29;
        boolean $stack21, $stack22, $stack23, $stack26, $stack31;
        java.lang.Object $stack27, $stack33, $stack35;
        org.jfree.chart.axis.ValueAxis axis;
        org.jfree.chart.renderer.xy.XYItemRenderer r;
        java.util.Iterator axis#9, r#12;
        org.jfree.chart.annotations.XYAnnotation r#10;
        org.jfree.chart.plot.CombinedDomainXYPlot axis#11;
        org.jfree.chart.plot.CombinedRangeXYPlot axis#14;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.XYPlot;

        $stack8 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.ui.RectangleInsets axisOffset>;

        virtualinvoke plot.<org.jfree.chart.plot.XYPlot: void setAxisOffset(org.jfree.chart.ui.RectangleInsets)>($stack8);

        $stack9 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.XYPlot: void setDomainZeroBaselinePaint(java.awt.Paint)>($stack9);

        $stack10 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.XYPlot: void setRangeZeroBaselinePaint(java.awt.Paint)>($stack10);

        $stack11 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.XYPlot: void setDomainGridlinePaint(java.awt.Paint)>($stack11);

        $stack12 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.XYPlot: void setRangeGridlinePaint(java.awt.Paint)>($stack12);

        $stack13 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.XYPlot: void setDomainCrosshairPaint(java.awt.Paint)>($stack13);

        $stack14 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.XYPlot: void setRangeCrosshairPaint(java.awt.Paint)>($stack14);

        $stack15 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.util.ShadowGenerator shadowGenerator>;

        virtualinvoke plot.<org.jfree.chart.plot.XYPlot: void setShadowGenerator(org.jfree.chart.util.ShadowGenerator)>($stack15);

        domainAxisCount = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: int getDomainAxisCount()>();

        i = 0;

     label01:
        if i >= domainAxisCount goto label03;

        axis = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getDomainAxis(int)>(i);

        if axis == null goto label02;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(axis);

     label02:
        i = i + 1;

        goto label01;

     label03:
        i = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: int getRangeAxisCount()>();

        axis#4 = 0;

     label04:
        if axis#4 >= i goto label06;

        axis = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.axis.ValueAxis getRangeAxis(int)>(axis#4);

        if axis == null goto label05;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(axis);

     label05:
        axis#4 = axis#4 + 1;

        goto label04;

     label06:
        axis#4 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: int getRendererCount()>();

        axis#7 = 0;

     label07:
        if axis#7 >= axis#4 goto label09;

        r = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.renderer.xy.XYItemRenderer getRenderer(int)>(axis#7);

        if r == null goto label08;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)>(r);

     label08:
        axis#7 = axis#7 + 1;

        goto label07;

     label09:
        $stack19 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: java.util.List getAnnotations()>();

        axis#9 = interfaceinvoke $stack19.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $stack21 = interfaceinvoke axis#9.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label11;

        $stack35 = interfaceinvoke axis#9.<java.util.Iterator: java.lang.Object next()>();

        r#10 = (org.jfree.chart.annotations.XYAnnotation) $stack35;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)>(r#10);

        goto label10;

     label11:
        $stack22 = plot instanceof org.jfree.chart.plot.CombinedDomainXYPlot;

        if $stack22 == 0 goto label14;

        axis#11 = (org.jfree.chart.plot.CombinedDomainXYPlot) plot;

        $stack29 = virtualinvoke axis#11.<org.jfree.chart.plot.CombinedDomainXYPlot: java.util.List getSubplots()>();

        r#12 = interfaceinvoke $stack29.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $stack31 = interfaceinvoke r#12.<java.util.Iterator: boolean hasNext()>();

        if $stack31 == 0 goto label14;

        $stack33 = interfaceinvoke r#12.<java.util.Iterator: java.lang.Object next()>();

        subplot = (org.jfree.chart.plot.XYPlot) $stack33;

        if subplot == null goto label13;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(subplot);

     label13:
        goto label12;

     label14:
        $stack23 = plot instanceof org.jfree.chart.plot.CombinedRangeXYPlot;

        if $stack23 == 0 goto label17;

        axis#14 = (org.jfree.chart.plot.CombinedRangeXYPlot) plot;

        $stack24 = virtualinvoke axis#14.<org.jfree.chart.plot.CombinedRangeXYPlot: java.util.List getSubplots()>();

        r#12 = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $stack26 = interfaceinvoke r#12.<java.util.Iterator: boolean hasNext()>();

        if $stack26 == 0 goto label17;

        $stack27 = interfaceinvoke r#12.<java.util.Iterator: java.lang.Object next()>();

        subplot = (org.jfree.chart.plot.XYPlot) $stack27;

        if subplot == null goto label16;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToPlot(org.jfree.chart.plot.Plot)>(subplot);

     label16:
        goto label15;

     label17:
        return;
    }

    protected void applyToFastScatterPlot(org.jfree.chart.plot.FastScatterPlot)
    {
        org.jfree.chart.plot.FastScatterPlot plot;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack4, $stack5;
        org.jfree.chart.axis.ValueAxis xAxis, yAxis;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.FastScatterPlot;

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.FastScatterPlot: void setDomainGridlinePaint(java.awt.Paint)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.FastScatterPlot: void setRangeGridlinePaint(java.awt.Paint)>($stack5);

        xAxis = virtualinvoke plot.<org.jfree.chart.plot.FastScatterPlot: org.jfree.chart.axis.ValueAxis getDomainAxis()>();

        if xAxis == null goto label1;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(xAxis);

     label1:
        yAxis = virtualinvoke plot.<org.jfree.chart.plot.FastScatterPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>();

        if yAxis == null goto label2;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(yAxis);

     label2:
        return;
    }

    protected void applyToPolarPlot(org.jfree.chart.plot.PolarPlot)
    {
        org.jfree.chart.plot.PolarPlot plot;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack3;
        java.awt.Paint $stack4, $stack5, $stack6;
        org.jfree.chart.axis.ValueAxis axis;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.PolarPlot;

        $stack3 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: void setAngleLabelFont(java.awt.Font)>($stack3);

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: void setAngleLabelPaint(java.awt.Paint)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: void setAngleGridlinePaint(java.awt.Paint)>($stack5);

        $stack6 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: void setRadiusGridlinePaint(java.awt.Paint)>($stack6);

        axis = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.ValueAxis getAxis()>();

        if axis == null goto label1;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(axis);

     label1:
        return;
    }

    protected void applyToSpiderWebPlot(org.jfree.chart.plot.SpiderWebPlot)
    {
        org.jfree.chart.plot.SpiderWebPlot plot;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack2;
        java.awt.Paint $stack3, $stack4;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.SpiderWebPlot;

        $stack2 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke plot.<org.jfree.chart.plot.SpiderWebPlot: void setLabelFont(java.awt.Font)>($stack2);

        $stack3 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.SpiderWebPlot: void setLabelPaint(java.awt.Paint)>($stack3);

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.SpiderWebPlot: void setAxisLinePaint(java.awt.Paint)>($stack4);

        return;
    }

    protected void applyToMeterPlot(org.jfree.chart.plot.MeterPlot)
    {
        org.jfree.chart.plot.MeterPlot plot;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack2, $stack4, $stack5, $stack6, $stack8;
        java.awt.Font $stack3, $stack7;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.MeterPlot;

        $stack2 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.MeterPlot: void setDialBackgroundPaint(java.awt.Paint)>($stack2);

        $stack3 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        virtualinvoke plot.<org.jfree.chart.plot.MeterPlot: void setValueFont(java.awt.Font)>($stack3);

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.MeterPlot: void setValuePaint(java.awt.Paint)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>;

        virtualinvoke plot.<org.jfree.chart.plot.MeterPlot: void setDialOutlinePaint(java.awt.Paint)>($stack5);

        $stack6 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.MeterPlot: void setNeedlePaint(java.awt.Paint)>($stack6);

        $stack7 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke plot.<org.jfree.chart.plot.MeterPlot: void setTickLabelFont(java.awt.Font)>($stack7);

        $stack8 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.MeterPlot: void setTickLabelPaint(java.awt.Paint)>($stack8);

        return;
    }

    protected void applyToThermometerPlot(org.jfree.chart.plot.ThermometerPlot)
    {
        org.jfree.chart.plot.ThermometerPlot plot;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack3;
        java.awt.Paint $stack4;
        org.jfree.chart.axis.ValueAxis axis;

        this := @this: org.jfree.chart.StandardChartTheme;

        plot := @parameter0: org.jfree.chart.plot.ThermometerPlot;

        $stack3 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        virtualinvoke plot.<org.jfree.chart.plot.ThermometerPlot: void setValueFont(java.awt.Font)>($stack3);

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint>;

        virtualinvoke plot.<org.jfree.chart.plot.ThermometerPlot: void setThermometerPaint(java.awt.Paint)>($stack4);

        axis = virtualinvoke plot.<org.jfree.chart.plot.ThermometerPlot: org.jfree.chart.axis.ValueAxis getRangeAxis()>();

        if axis == null goto label1;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToValueAxis(org.jfree.chart.axis.ValueAxis)>(axis);

     label1:
        return;
    }

    protected void applyToCategoryAxis(org.jfree.chart.axis.CategoryAxis)
    {
        org.jfree.chart.axis.CategoryAxis axis;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack3, $stack5, $stack8;
        java.awt.Paint $stack4, $stack6, $stack9;
        boolean $stack7;
        org.jfree.chart.axis.SubCategoryAxis sca;

        this := @this: org.jfree.chart.StandardChartTheme;

        axis := @parameter0: org.jfree.chart.axis.CategoryAxis;

        $stack3 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        virtualinvoke axis.<org.jfree.chart.axis.CategoryAxis: void setLabelFont(java.awt.Font)>($stack3);

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        virtualinvoke axis.<org.jfree.chart.axis.CategoryAxis: void setLabelPaint(java.awt.Paint)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke axis.<org.jfree.chart.axis.CategoryAxis: void setTickLabelFont(java.awt.Font)>($stack5);

        $stack6 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        virtualinvoke axis.<org.jfree.chart.axis.CategoryAxis: void setTickLabelPaint(java.awt.Paint)>($stack6);

        $stack7 = axis instanceof org.jfree.chart.axis.SubCategoryAxis;

        if $stack7 == 0 goto label1;

        sca = (org.jfree.chart.axis.SubCategoryAxis) axis;

        $stack8 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke sca.<org.jfree.chart.axis.SubCategoryAxis: void setSubLabelFont(java.awt.Font)>($stack8);

        $stack9 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        virtualinvoke sca.<org.jfree.chart.axis.SubCategoryAxis: void setSubLabelPaint(java.awt.Paint)>($stack9);

     label1:
        return;
    }

    protected void applyToValueAxis(org.jfree.chart.axis.ValueAxis)
    {
        org.jfree.chart.axis.ValueAxis axis;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack2, $stack4;
        java.awt.Paint $stack3, $stack5;
        boolean $stack6, $stack7;
        org.jfree.chart.axis.PeriodAxis $stack8;
        org.jfree.chart.axis.SymbolAxis $stack9;

        this := @this: org.jfree.chart.StandardChartTheme;

        axis := @parameter0: org.jfree.chart.axis.ValueAxis;

        $stack2 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: void setLabelFont(java.awt.Font)>($stack2);

        $stack3 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: void setLabelPaint(java.awt.Paint)>($stack3);

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: void setTickLabelFont(java.awt.Font)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        virtualinvoke axis.<org.jfree.chart.axis.ValueAxis: void setTickLabelPaint(java.awt.Paint)>($stack5);

        $stack6 = axis instanceof org.jfree.chart.axis.SymbolAxis;

        if $stack6 == 0 goto label1;

        $stack9 = (org.jfree.chart.axis.SymbolAxis) axis;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)>($stack9);

     label1:
        $stack7 = axis instanceof org.jfree.chart.axis.PeriodAxis;

        if $stack7 == 0 goto label2;

        $stack8 = (org.jfree.chart.axis.PeriodAxis) axis;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)>($stack8);

     label2:
        return;
    }

    protected void applyToSymbolAxis(org.jfree.chart.axis.SymbolAxis)
    {
        org.jfree.chart.axis.SymbolAxis axis;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack2, $stack3;

        this := @this: org.jfree.chart.StandardChartTheme;

        axis := @parameter0: org.jfree.chart.axis.SymbolAxis;

        $stack2 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint>;

        virtualinvoke axis.<org.jfree.chart.axis.SymbolAxis: void setGridBandPaint(java.awt.Paint)>($stack2);

        $stack3 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint>;

        virtualinvoke axis.<org.jfree.chart.axis.SymbolAxis: void setGridBandAlternatePaint(java.awt.Paint)>($stack3);

        return;
    }

    protected void applyToPeriodAxis(org.jfree.chart.axis.PeriodAxis)
    {
        org.jfree.chart.axis.PeriodAxis axis;
        org.jfree.chart.axis.PeriodAxisLabelInfo[] info;
        int $stack7, i;
        org.jfree.chart.axis.PeriodAxisLabelInfo e, $stack8;
        java.lang.Class $stack9;
        java.text.DateFormat $stack10;
        org.jfree.chart.ui.RectangleInsets $stack11;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack12;
        java.awt.Paint $stack13, $stack16;
        boolean $stack14;
        java.awt.Stroke $stack15;

        this := @this: org.jfree.chart.StandardChartTheme;

        axis := @parameter0: org.jfree.chart.axis.PeriodAxis;

        info = virtualinvoke axis.<org.jfree.chart.axis.PeriodAxis: org.jfree.chart.axis.PeriodAxisLabelInfo[] getLabelInfo()>();

        i = 0;

     label1:
        $stack7 = lengthof info;

        if i >= $stack7 goto label2;

        e = info[i];

        $stack8 = new org.jfree.chart.axis.PeriodAxisLabelInfo;

        $stack9 = virtualinvoke e.<org.jfree.chart.axis.PeriodAxisLabelInfo: java.lang.Class getPeriodClass()>();

        $stack10 = virtualinvoke e.<org.jfree.chart.axis.PeriodAxisLabelInfo: java.text.DateFormat getDateFormat()>();

        $stack11 = virtualinvoke e.<org.jfree.chart.axis.PeriodAxisLabelInfo: org.jfree.chart.ui.RectangleInsets getPadding()>();

        $stack12 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        $stack13 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        $stack14 = virtualinvoke e.<org.jfree.chart.axis.PeriodAxisLabelInfo: boolean getDrawDividers()>();

        $stack15 = virtualinvoke e.<org.jfree.chart.axis.PeriodAxisLabelInfo: java.awt.Stroke getDividerStroke()>();

        $stack16 = virtualinvoke e.<org.jfree.chart.axis.PeriodAxisLabelInfo: java.awt.Paint getDividerPaint()>();

        specialinvoke $stack8.<org.jfree.chart.axis.PeriodAxisLabelInfo: void <init>(java.lang.Class,java.text.DateFormat,org.jfree.chart.ui.RectangleInsets,java.awt.Font,java.awt.Paint,boolean,java.awt.Stroke,java.awt.Paint)>($stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16);

        info[i] = $stack8;

        i = i + 1;

        goto label1;

     label2:
        virtualinvoke axis.<org.jfree.chart.axis.PeriodAxis: void setLabelInfo(org.jfree.chart.axis.PeriodAxisLabelInfo[])>(info);

        return;
    }

    protected void applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)
    {
        org.jfree.chart.renderer.AbstractRenderer renderer;
        boolean $stack2, $stack3;
        org.jfree.chart.StandardChartTheme this;

        this := @this: org.jfree.chart.StandardChartTheme;

        renderer := @parameter0: org.jfree.chart.renderer.AbstractRenderer;

        $stack2 = virtualinvoke renderer.<org.jfree.chart.renderer.AbstractRenderer: boolean getAutoPopulateSeriesPaint()>();

        if $stack2 == 0 goto label1;

        virtualinvoke renderer.<org.jfree.chart.renderer.AbstractRenderer: void clearSeriesPaints(boolean)>(0);

     label1:
        $stack3 = virtualinvoke renderer.<org.jfree.chart.renderer.AbstractRenderer: boolean getAutoPopulateSeriesStroke()>();

        if $stack3 == 0 goto label2;

        virtualinvoke renderer.<org.jfree.chart.renderer.AbstractRenderer: void clearSeriesStrokes(boolean)>(0);

     label2:
        return;
    }

    protected void applyToCategoryItemRenderer(org.jfree.chart.renderer.category.CategoryItemRenderer)
    {
        org.jfree.chart.renderer.category.CategoryItemRenderer renderer;
        boolean $stack3, $stack6, $stack7, $stack8, $stack13;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack4;
        java.awt.Paint $stack5, $stack9, $stack10, $stack14;
        org.jfree.chart.renderer.category.BarPainter $stack12;
        org.jfree.chart.renderer.AbstractRenderer $stack16;
        org.jfree.chart.renderer.category.BarRenderer br;
        org.jfree.chart.renderer.category.StatisticalBarRenderer br#2;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer br#3;

        this := @this: org.jfree.chart.StandardChartTheme;

        renderer := @parameter0: org.jfree.chart.renderer.category.CategoryItemRenderer;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(renderer, "renderer");

        $stack3 = renderer instanceof org.jfree.chart.renderer.AbstractRenderer;

        if $stack3 == 0 goto label1;

        $stack16 = (org.jfree.chart.renderer.AbstractRenderer) renderer;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)>($stack16);

     label1:
        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        interfaceinvoke renderer.<org.jfree.chart.renderer.category.CategoryItemRenderer: void setDefaultItemLabelFont(java.awt.Font)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>;

        interfaceinvoke renderer.<org.jfree.chart.renderer.category.CategoryItemRenderer: void setDefaultItemLabelPaint(java.awt.Paint)>($stack5);

        $stack6 = renderer instanceof org.jfree.chart.renderer.category.BarRenderer;

        if $stack6 == 0 goto label2;

        br = (org.jfree.chart.renderer.category.BarRenderer) renderer;

        $stack12 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.category.BarPainter barPainter>;

        virtualinvoke br.<org.jfree.chart.renderer.category.BarRenderer: void setBarPainter(org.jfree.chart.renderer.category.BarPainter)>($stack12);

        $stack13 = this.<org.jfree.chart.StandardChartTheme: boolean shadowVisible>;

        virtualinvoke br.<org.jfree.chart.renderer.category.BarRenderer: void setShadowVisible(boolean)>($stack13);

        $stack14 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint>;

        virtualinvoke br.<org.jfree.chart.renderer.category.BarRenderer: void setShadowPaint(java.awt.Paint)>($stack14);

     label2:
        $stack7 = renderer instanceof org.jfree.chart.renderer.category.StatisticalBarRenderer;

        if $stack7 == 0 goto label3;

        br#2 = (org.jfree.chart.renderer.category.StatisticalBarRenderer) renderer;

        $stack10 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint>;

        virtualinvoke br#2.<org.jfree.chart.renderer.category.StatisticalBarRenderer: void setErrorIndicatorPaint(java.awt.Paint)>($stack10);

     label3:
        $stack8 = renderer instanceof org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        if $stack8 == 0 goto label4;

        br#3 = (org.jfree.chart.renderer.category.MinMaxCategoryRenderer) renderer;

        $stack9 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint>;

        virtualinvoke br#3.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: void setGroupPaint(java.awt.Paint)>($stack9);

     label4:
        return;
    }

    protected void applyToXYItemRenderer(org.jfree.chart.renderer.xy.XYItemRenderer)
    {
        org.jfree.chart.renderer.xy.XYItemRenderer renderer;
        boolean $stack3, $stack6, $stack8;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack4;
        java.awt.Paint $stack5;
        org.jfree.chart.renderer.xy.XYBarRenderer br;
        org.jfree.chart.renderer.xy.XYBarPainter $stack7;
        org.jfree.chart.renderer.AbstractRenderer $stack9;

        this := @this: org.jfree.chart.StandardChartTheme;

        renderer := @parameter0: org.jfree.chart.renderer.xy.XYItemRenderer;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(renderer, "renderer");

        $stack3 = renderer instanceof org.jfree.chart.renderer.AbstractRenderer;

        if $stack3 == 0 goto label1;

        $stack9 = (org.jfree.chart.renderer.AbstractRenderer) renderer;

        virtualinvoke this.<org.jfree.chart.StandardChartTheme: void applyToAbstractRenderer(org.jfree.chart.renderer.AbstractRenderer)>($stack9);

     label1:
        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        interfaceinvoke renderer.<org.jfree.chart.renderer.xy.XYItemRenderer: void setDefaultItemLabelFont(java.awt.Font)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>;

        interfaceinvoke renderer.<org.jfree.chart.renderer.xy.XYItemRenderer: void setDefaultItemLabelPaint(java.awt.Paint)>($stack5);

        $stack6 = renderer instanceof org.jfree.chart.renderer.xy.XYBarRenderer;

        if $stack6 == 0 goto label2;

        br = (org.jfree.chart.renderer.xy.XYBarRenderer) renderer;

        $stack7 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.xy.XYBarPainter xyBarPainter>;

        virtualinvoke br.<org.jfree.chart.renderer.xy.XYBarRenderer: void setBarPainter(org.jfree.chart.renderer.xy.XYBarPainter)>($stack7);

        $stack8 = this.<org.jfree.chart.StandardChartTheme: boolean shadowVisible>;

        virtualinvoke br.<org.jfree.chart.renderer.xy.XYBarRenderer: void setShadowVisible(boolean)>($stack8);

     label2:
        return;
    }

    protected void applyToXYAnnotation(org.jfree.chart.annotations.XYAnnotation)
    {
        org.jfree.chart.annotations.XYAnnotation 'annotation';
        boolean $stack3;
        org.jfree.chart.annotations.XYTextAnnotation xyta;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Font $stack4;
        java.awt.Paint $stack5;

        this := @this: org.jfree.chart.StandardChartTheme;

        'annotation' := @parameter0: org.jfree.chart.annotations.XYAnnotation;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>('annotation', "annotation");

        $stack3 = 'annotation' instanceof org.jfree.chart.annotations.XYTextAnnotation;

        if $stack3 == 0 goto label1;

        xyta = (org.jfree.chart.annotations.XYTextAnnotation) 'annotation';

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font smallFont>;

        virtualinvoke xyta.<org.jfree.chart.annotations.XYTextAnnotation: void setFont(java.awt.Font)>($stack4);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>;

        virtualinvoke xyta.<org.jfree.chart.annotations.XYTextAnnotation: void setPaint(java.awt.Paint)>($stack5);

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.StandardChartTheme this, that;
        boolean $stack3, $stack6, $stack9, $stack12, $stack15, $stack18, $stack21, $stack24, $stack27, $stack30, $stack33, $stack36, $stack39, $stack42, $stack45, $stack48, $stack51, $stack54, $stack57, $stack60, $stack63, $stack66, $stack69, $stack70, $stack71, $stack74, $stack77, $stack80, $stack83, $stack86, $stack89, $stack92;
        java.lang.String $stack4, $stack5;
        java.awt.Font $stack7, $stack8, $stack10, $stack11, $stack13, $stack14, $stack16, $stack17;
        java.awt.Paint $stack19, $stack20, $stack22, $stack23, $stack25, $stack26, $stack28, $stack29, $stack31, $stack32, $stack37, $stack38, $stack40, $stack41, $stack46, $stack47, $stack49, $stack50, $stack52, $stack53, $stack55, $stack56, $stack61, $stack62, $stack64, $stack65, $stack67, $stack68, $stack72, $stack73, $stack81, $stack82, $stack84, $stack85, $stack87, $stack88, $stack90, $stack91;
        org.jfree.chart.plot.DrawingSupplier $stack34, $stack35;
        org.jfree.chart.plot.PieLabelLinkStyle $stack43, $stack44;
        org.jfree.chart.ui.RectangleInsets $stack58, $stack59;
        org.jfree.chart.renderer.category.BarPainter $stack75, $stack76;
        org.jfree.chart.renderer.xy.XYBarPainter $stack78, $stack79;

        this := @this: org.jfree.chart.StandardChartTheme;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack3 = obj instanceof org.jfree.chart.StandardChartTheme;

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        that = (org.jfree.chart.StandardChartTheme) obj;

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.lang.String name>;

        $stack4 = that.<org.jfree.chart.StandardChartTheme: java.lang.String name>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label03;

        return 0;

     label03:
        $stack8 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>;

        $stack7 = that.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>;

        $stack9 = virtualinvoke $stack8.<java.awt.Font: boolean equals(java.lang.Object)>($stack7);

        if $stack9 != 0 goto label04;

        return 0;

     label04:
        $stack11 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        $stack10 = that.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        $stack12 = virtualinvoke $stack11.<java.awt.Font: boolean equals(java.lang.Object)>($stack10);

        if $stack12 != 0 goto label05;

        return 0;

     label05:
        $stack14 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        $stack13 = that.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        $stack15 = virtualinvoke $stack14.<java.awt.Font: boolean equals(java.lang.Object)>($stack13);

        if $stack15 != 0 goto label06;

        return 0;

     label06:
        $stack17 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font smallFont>;

        $stack16 = that.<org.jfree.chart.StandardChartTheme: java.awt.Font smallFont>;

        $stack18 = virtualinvoke $stack17.<java.awt.Font: boolean equals(java.lang.Object)>($stack16);

        if $stack18 != 0 goto label07;

        return 0;

     label07:
        $stack20 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>;

        $stack19 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>;

        $stack21 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack20, $stack19);

        if $stack21 != 0 goto label08;

        return 0;

     label08:
        $stack23 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint>;

        $stack22 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint>;

        $stack24 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack23, $stack22);

        if $stack24 != 0 goto label09;

        return 0;

     label09:
        $stack26 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>;

        $stack25 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>;

        $stack27 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack26, $stack25);

        if $stack27 != 0 goto label10;

        return 0;

     label10:
        $stack29 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>;

        $stack28 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>;

        $stack30 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack29, $stack28);

        if $stack30 != 0 goto label11;

        return 0;

     label11:
        $stack32 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>;

        $stack31 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>;

        $stack33 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack32, $stack31);

        if $stack33 != 0 goto label12;

        return 0;

     label12:
        $stack35 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>;

        $stack34 = that.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.DrawingSupplier drawingSupplier>;

        $stack36 = virtualinvoke $stack35.<java.lang.Object: boolean equals(java.lang.Object)>($stack34);

        if $stack36 != 0 goto label13;

        return 0;

     label13:
        $stack38 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>;

        $stack37 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>;

        $stack39 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack38, $stack37);

        if $stack39 != 0 goto label14;

        return 0;

     label14:
        $stack41 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>;

        $stack40 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>;

        $stack42 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack41, $stack40);

        if $stack42 != 0 goto label15;

        return 0;

     label15:
        $stack44 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>;

        $stack43 = that.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>;

        $stack45 = virtualinvoke $stack44.<org.jfree.chart.plot.PieLabelLinkStyle: boolean equals(java.lang.Object)>($stack43);

        if $stack45 != 0 goto label16;

        return 0;

     label16:
        $stack47 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>;

        $stack46 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>;

        $stack48 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack47, $stack46);

        if $stack48 != 0 goto label17;

        return 0;

     label17:
        $stack50 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        $stack49 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        $stack51 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack50, $stack49);

        if $stack51 != 0 goto label18;

        return 0;

     label18:
        $stack53 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        $stack52 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        $stack54 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack53, $stack52);

        if $stack54 != 0 goto label19;

        return 0;

     label19:
        $stack56 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint>;

        $stack55 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint>;

        $stack57 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack56, $stack55);

        if $stack57 != 0 goto label20;

        return 0;

     label20:
        $stack59 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.ui.RectangleInsets axisOffset>;

        $stack58 = that.<org.jfree.chart.StandardChartTheme: org.jfree.chart.ui.RectangleInsets axisOffset>;

        $stack60 = virtualinvoke $stack59.<org.jfree.chart.ui.RectangleInsets: boolean equals(java.lang.Object)>($stack58);

        if $stack60 != 0 goto label21;

        return 0;

     label21:
        $stack62 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        $stack61 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        $stack63 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack62, $stack61);

        if $stack63 != 0 goto label22;

        return 0;

     label22:
        $stack65 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        $stack64 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        $stack66 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack65, $stack64);

        if $stack66 != 0 goto label23;

        return 0;

     label23:
        $stack68 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>;

        $stack67 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>;

        $stack69 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack68, $stack67);

        if $stack69 != 0 goto label24;

        return 0;

     label24:
        $stack71 = this.<org.jfree.chart.StandardChartTheme: boolean shadowVisible>;

        $stack70 = that.<org.jfree.chart.StandardChartTheme: boolean shadowVisible>;

        if $stack71 == $stack70 goto label25;

        return 0;

     label25:
        $stack73 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint>;

        $stack72 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint>;

        $stack74 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack73, $stack72);

        if $stack74 != 0 goto label26;

        return 0;

     label26:
        $stack76 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.category.BarPainter barPainter>;

        $stack75 = that.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.category.BarPainter barPainter>;

        $stack77 = virtualinvoke $stack76.<java.lang.Object: boolean equals(java.lang.Object)>($stack75);

        if $stack77 != 0 goto label27;

        return 0;

     label27:
        $stack79 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.xy.XYBarPainter xyBarPainter>;

        $stack78 = that.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.xy.XYBarPainter xyBarPainter>;

        $stack80 = virtualinvoke $stack79.<java.lang.Object: boolean equals(java.lang.Object)>($stack78);

        if $stack80 != 0 goto label28;

        return 0;

     label28:
        $stack82 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint>;

        $stack81 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint>;

        $stack83 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack82, $stack81);

        if $stack83 != 0 goto label29;

        return 0;

     label29:
        $stack85 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint>;

        $stack84 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint>;

        $stack86 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack85, $stack84);

        if $stack86 != 0 goto label30;

        return 0;

     label30:
        $stack88 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint>;

        $stack87 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint>;

        $stack89 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack88, $stack87);

        if $stack89 != 0 goto label31;

        return 0;

     label31:
        $stack91 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint>;

        $stack90 = that.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint>;

        $stack92 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack91, $stack90);

        if $stack92 != 0 goto label32;

        return 0;

     label32:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.StandardChartTheme this;
        java.lang.String $stack2;
        int $stack3, $stack4, $stack6, $stack7, $stack9, $stack10, $stack12, $stack13, $stack15, $stack16, $stack18, $stack19, $stack21, $stack22, $stack24, $stack25, $stack27, $stack28, $stack30, $stack31, $stack33, $stack34, $stack36, $stack37, $stack39, $stack40, $stack42, $stack43, $stack45, $stack46, $stack48, $stack49, $stack51, $stack52, $stack54, $stack55, $stack57, $stack58, $stack60, $stack61, $stack63, $stack64, $stack66, $stack68, $stack69, $stack71, $stack72, $stack74, $stack75, $stack77, $stack78, $stack80, $stack81, $stack83, $stack84, $stack86, $stack87, hash#2;
        java.awt.Font $stack5, $stack8, $stack11, $stack14;
        java.awt.Paint $stack17, $stack20, $stack23, $stack26, $stack29, $stack32, $stack35, $stack41, $stack44, $stack47, $stack50, $stack56, $stack59, $stack62, $stack67, $stack76, $stack79, $stack82, $stack85;
        org.jfree.chart.plot.PieLabelLinkStyle $stack38;
        org.jfree.chart.ui.RectangleInsets $stack53;
        boolean $stack65;
        org.jfree.chart.renderer.category.BarPainter $stack70;
        org.jfree.chart.renderer.xy.XYBarPainter $stack73;
        byte $stack88;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack3 = 71 * 3;

        $stack2 = this.<org.jfree.chart.StandardChartTheme: java.lang.String name>;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack2);

        hash#2 = $stack3 + $stack4;

        $stack6 = 71 * hash#2;

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font extraLargeFont>;

        $stack7 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack5);

        hash#2 = $stack6 + $stack7;

        $stack9 = 71 * hash#2;

        $stack8 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font largeFont>;

        $stack10 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack8);

        hash#2 = $stack9 + $stack10;

        $stack12 = 71 * hash#2;

        $stack11 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font regularFont>;

        $stack13 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack11);

        hash#2 = $stack12 + $stack13;

        $stack15 = 71 * hash#2;

        $stack14 = this.<org.jfree.chart.StandardChartTheme: java.awt.Font smallFont>;

        $stack16 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack14);

        hash#2 = $stack15 + $stack16;

        $stack18 = 71 * hash#2;

        $stack17 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>;

        $stack19 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack17);

        hash#2 = $stack18 + $stack19;

        $stack21 = 71 * hash#2;

        $stack20 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint>;

        $stack22 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack20);

        hash#2 = $stack21 + $stack22;

        $stack24 = 71 * hash#2;

        $stack23 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>;

        $stack25 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack23);

        hash#2 = $stack24 + $stack25;

        $stack27 = 71 * hash#2;

        $stack26 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>;

        $stack28 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack26);

        hash#2 = $stack27 + $stack28;

        $stack30 = 71 * hash#2;

        $stack29 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>;

        $stack31 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack29);

        hash#2 = $stack30 + $stack31;

        $stack33 = 71 * hash#2;

        $stack32 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>;

        $stack34 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack32);

        hash#2 = $stack33 + $stack34;

        $stack36 = 71 * hash#2;

        $stack35 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>;

        $stack37 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack35);

        hash#2 = $stack36 + $stack37;

        $stack39 = 71 * hash#2;

        $stack38 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.plot.PieLabelLinkStyle labelLinkStyle>;

        $stack40 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack38);

        hash#2 = $stack39 + $stack40;

        $stack42 = 71 * hash#2;

        $stack41 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>;

        $stack43 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack41);

        hash#2 = $stack42 + $stack43;

        $stack45 = 71 * hash#2;

        $stack44 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        $stack46 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack44);

        hash#2 = $stack45 + $stack46;

        $stack48 = 71 * hash#2;

        $stack47 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        $stack49 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack47);

        hash#2 = $stack48 + $stack49;

        $stack51 = 71 * hash#2;

        $stack50 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint>;

        $stack52 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack50);

        hash#2 = $stack51 + $stack52;

        $stack54 = 71 * hash#2;

        $stack53 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.ui.RectangleInsets axisOffset>;

        $stack55 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack53);

        hash#2 = $stack54 + $stack55;

        $stack57 = 71 * hash#2;

        $stack56 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        $stack58 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack56);

        hash#2 = $stack57 + $stack58;

        $stack60 = 71 * hash#2;

        $stack59 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        $stack61 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack59);

        hash#2 = $stack60 + $stack61;

        $stack63 = 71 * hash#2;

        $stack62 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>;

        $stack64 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack62);

        hash#2 = $stack63 + $stack64;

        $stack66 = 71 * hash#2;

        $stack65 = this.<org.jfree.chart.StandardChartTheme: boolean shadowVisible>;

        if $stack65 == 0 goto label1;

        $stack88 = 1;

        goto label2;

     label1:
        $stack88 = 0;

     label2:
        hash#2 = $stack66 + $stack88;

        $stack68 = 71 * hash#2;

        $stack67 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint>;

        $stack69 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack67);

        hash#2 = $stack68 + $stack69;

        $stack71 = 71 * hash#2;

        $stack70 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.category.BarPainter barPainter>;

        $stack72 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack70);

        hash#2 = $stack71 + $stack72;

        $stack74 = 71 * hash#2;

        $stack73 = this.<org.jfree.chart.StandardChartTheme: org.jfree.chart.renderer.xy.XYBarPainter xyBarPainter>;

        $stack75 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack73);

        hash#2 = $stack74 + $stack75;

        $stack77 = 71 * hash#2;

        $stack76 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint>;

        $stack78 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack76);

        hash#2 = $stack77 + $stack78;

        $stack80 = 71 * hash#2;

        $stack79 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint>;

        $stack81 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack79);

        hash#2 = $stack80 + $stack81;

        $stack83 = 71 * hash#2;

        $stack82 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint>;

        $stack84 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack82);

        hash#2 = $stack83 + $stack84;

        $stack86 = 71 * hash#2;

        $stack85 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint>;

        $stack87 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack85);

        hash#2 = $stack86 + $stack87;

        return hash#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.StandardChartTheme this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.StandardChartTheme;

        $stack1 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21;

        this := @this: org.jfree.chart.StandardChartTheme;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack4, stream);

        $stack5 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack5, stream);

        $stack6 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack6, stream);

        $stack7 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack7, stream);

        $stack8 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack8, stream);

        $stack9 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack9, stream);

        $stack10 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack10, stream);

        $stack11 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack11, stream);

        $stack12 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack12, stream);

        $stack13 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack13, stream);

        $stack14 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack14, stream);

        $stack15 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack15, stream);

        $stack16 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack16, stream);

        $stack17 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack17, stream);

        $stack18 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack18, stream);

        $stack19 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack19, stream);

        $stack20 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack20, stream);

        $stack21 = this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack21, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.StandardChartTheme this;
        java.awt.Paint $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21;

        this := @this: org.jfree.chart.StandardChartTheme;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint titlePaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint subtitlePaint> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint chartBackgroundPaint> = $stack4;

        $stack5 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendBackgroundPaint> = $stack5;

        $stack6 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint legendItemPaint> = $stack6;

        $stack7 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotBackgroundPaint> = $stack7;

        $stack8 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint plotOutlinePaint> = $stack8;

        $stack9 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint labelLinkPaint> = $stack9;

        $stack10 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint baselinePaint> = $stack10;

        $stack11 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint domainGridlinePaint> = $stack11;

        $stack12 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint rangeGridlinePaint> = $stack12;

        $stack13 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint crosshairPaint> = $stack13;

        $stack14 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint axisLabelPaint> = $stack14;

        $stack15 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint tickLabelPaint> = $stack15;

        $stack16 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint itemLabelPaint> = $stack16;

        $stack17 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint shadowPaint> = $stack17;

        $stack18 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint thermometerPaint> = $stack18;

        $stack19 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint errorIndicatorPaint> = $stack19;

        $stack20 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandPaint> = $stack20;

        $stack21 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.StandardChartTheme: java.awt.Paint gridBandAlternatePaint> = $stack21;

        return;
    }
}
