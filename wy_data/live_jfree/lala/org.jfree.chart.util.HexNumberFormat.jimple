public class org.jfree.chart.util.HexNumberFormat extends java.text.NumberFormat
{
    public static final int BYTE;
    public static final int WORD;
    public static final int DWORD;
    public static final int QWORD;
    private int m_numDigits;

    public void <init>()
    {
        org.jfree.chart.util.HexNumberFormat this;

        this := @this: org.jfree.chart.util.HexNumberFormat;

        specialinvoke this.<org.jfree.chart.util.HexNumberFormat: void <init>(int)>(8);

        return;
    }

    public void <init>(int)
    {
        org.jfree.chart.util.HexNumberFormat this;
        int digits;

        this := @this: org.jfree.chart.util.HexNumberFormat;

        digits := @parameter0: int;

        specialinvoke this.<java.text.NumberFormat: void <init>()>();

        this.<org.jfree.chart.util.HexNumberFormat: int m_numDigits> = 8;

        this.<org.jfree.chart.util.HexNumberFormat: int m_numDigits> = digits;

        return;
    }

    public final int getNumberOfDigits()
    {
        org.jfree.chart.util.HexNumberFormat this;
        int $stack1;

        this := @this: org.jfree.chart.util.HexNumberFormat;

        $stack1 = this.<org.jfree.chart.util.HexNumberFormat: int m_numDigits>;

        return $stack1;
    }

    public void setNumberOfDigits(int)
    {
        org.jfree.chart.util.HexNumberFormat this;
        int digits;

        this := @this: org.jfree.chart.util.HexNumberFormat;

        digits := @parameter0: int;

        this.<org.jfree.chart.util.HexNumberFormat: int m_numDigits> = digits;

        return;
    }

    public java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition)
    {
        org.jfree.chart.util.HexNumberFormat this;
        double number;
        java.lang.StringBuffer toAppendTo, $stack6;
        java.text.FieldPosition pos;
        long $stack5;

        this := @this: org.jfree.chart.util.HexNumberFormat;

        number := @parameter0: double;

        toAppendTo := @parameter1: java.lang.StringBuffer;

        pos := @parameter2: java.text.FieldPosition;

        $stack5 = (long) number;

        $stack6 = virtualinvoke this.<org.jfree.chart.util.HexNumberFormat: java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition)>($stack5, toAppendTo, pos);

        return $stack6;
    }

    public java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.FieldPosition)
    {
        long number;
        java.lang.String $stack9, l_hex;
        org.jfree.chart.util.HexNumberFormat this;
        int $stack11, $stack12, l_pad, $stack18, i;
        java.lang.StringBuffer $stack13, toAppendTo;
        java.text.FieldPosition pos;

        this := @this: org.jfree.chart.util.HexNumberFormat;

        number := @parameter0: long;

        toAppendTo := @parameter1: java.lang.StringBuffer;

        pos := @parameter2: java.text.FieldPosition;

        $stack9 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(number);

        l_hex = virtualinvoke $stack9.<java.lang.String: java.lang.String toUpperCase()>();

        $stack11 = this.<org.jfree.chart.util.HexNumberFormat: int m_numDigits>;

        $stack12 = virtualinvoke l_hex.<java.lang.String: int length()>();

        l_pad = $stack11 - $stack12;

        if 0 >= l_pad goto label1;

        $stack18 = l_pad;

        goto label2;

     label1:
        $stack18 = 0;

     label2:
        l_pad = $stack18;

        $stack13 = new java.lang.StringBuffer;

        specialinvoke $stack13.<java.lang.StringBuffer: void <init>(java.lang.String)>("0x");

        i = 0;

     label3:
        if i >= l_pad goto label4;

        virtualinvoke $stack13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(0);

        i = i + 1;

        goto label3;

     label4:
        virtualinvoke $stack13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(l_hex);

        return $stack13;
    }

    public java.lang.Number parse(java.lang.String, java.text.ParsePosition)
    {
        org.jfree.chart.util.HexNumberFormat this;
        java.lang.String source;
        java.text.ParsePosition parsePosition;

        this := @this: org.jfree.chart.util.HexNumberFormat;

        source := @parameter0: java.lang.String;

        parsePosition := @parameter1: java.text.ParsePosition;

        return null;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.util.HexNumberFormat: int QWORD> = 16;

        <org.jfree.chart.util.HexNumberFormat: int DWORD> = 8;

        <org.jfree.chart.util.HexNumberFormat: int WORD> = 4;

        <org.jfree.chart.util.HexNumberFormat: int BYTE> = 2;

        return;
    }
}
