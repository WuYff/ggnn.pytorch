public class org.jfree.chart.axis.TickUnits extends java.lang.Object implements org.jfree.chart.axis.TickUnitSource, java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.util.List tickUnits;

    public void <init>()
    {
        org.jfree.chart.axis.TickUnits this;
        java.util.ArrayList $stack1;

        this := @this: org.jfree.chart.axis.TickUnits;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> = $stack1;

        return;
    }

    public void add(org.jfree.chart.axis.TickUnit)
    {
        org.jfree.chart.axis.TickUnit unit;
        org.jfree.chart.axis.TickUnits this;
        java.util.List $stack2, $stack4;
        java.lang.NullPointerException $stack5;

        this := @this: org.jfree.chart.axis.TickUnits;

        unit := @parameter0: org.jfree.chart.axis.TickUnit;

        if unit != null goto label1;

        $stack5 = new java.lang.NullPointerException;

        specialinvoke $stack5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null \'unit\' argument.");

        throw $stack5;

     label1:
        $stack2 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(unit);

        $stack4 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($stack4);

        return;
    }

    public int size()
    {
        org.jfree.chart.axis.TickUnits this;
        java.util.List $stack1;
        int $stack2;

        this := @this: org.jfree.chart.axis.TickUnits;

        $stack1 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public org.jfree.chart.axis.TickUnit get(int)
    {
        org.jfree.chart.axis.TickUnits this;
        int pos;
        java.util.List $stack2;
        java.lang.Object $stack3;
        org.jfree.chart.axis.TickUnit $stack4;

        this := @this: org.jfree.chart.axis.TickUnits;

        pos := @parameter0: int;

        $stack2 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(pos);

        $stack4 = (org.jfree.chart.axis.TickUnit) $stack3;

        return $stack4;
    }

    public org.jfree.chart.axis.TickUnit getLargerTickUnit(org.jfree.chart.axis.TickUnit)
    {
        org.jfree.chart.axis.TickUnits this;
        org.jfree.chart.axis.TickUnit unit, $stack11;
        java.util.List $stack3, $stack5, $stack6;
        int $stack7, $stack8, $stack9, index;
        java.lang.Object $stack10;

        this := @this: org.jfree.chart.axis.TickUnits;

        unit := @parameter0: org.jfree.chart.axis.TickUnit;

        $stack3 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        index = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($stack3, unit);

        if index < 0 goto label1;

        index = index + 1;

        goto label2;

     label1:
        index = neg index;

     label2:
        $stack6 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack5 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack7 = interfaceinvoke $stack5.<java.util.List: int size()>();

        $stack8 = $stack7 - 1;

        $stack9 = staticinvoke <java.lang.Math: int min(int,int)>(index, $stack8);

        $stack10 = interfaceinvoke $stack6.<java.util.List: java.lang.Object get(int)>($stack9);

        $stack11 = (org.jfree.chart.axis.TickUnit) $stack10;

        return $stack11;
    }

    public org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)
    {
        org.jfree.chart.axis.TickUnits this;
        org.jfree.chart.axis.TickUnit unit, $stack12, $stack15;
        java.util.List $stack3, $stack6, $stack7, $stack13;
        int $stack5, $stack8, $stack9, $stack10, index;
        java.lang.Object $stack11, $stack14;

        this := @this: org.jfree.chart.axis.TickUnits;

        unit := @parameter0: org.jfree.chart.axis.TickUnit;

        $stack3 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        index = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>($stack3, unit);

        if index < 0 goto label1;

        $stack13 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack14 = interfaceinvoke $stack13.<java.util.List: java.lang.Object get(int)>(index);

        $stack15 = (org.jfree.chart.axis.TickUnit) $stack14;

        return $stack15;

     label1:
        $stack5 = index + 1;

        index = neg $stack5;

        $stack7 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack6 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack8 = interfaceinvoke $stack6.<java.util.List: int size()>();

        $stack9 = $stack8 - 1;

        $stack10 = staticinvoke <java.lang.Math: int min(int,int)>(index, $stack9);

        $stack11 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>($stack10);

        $stack12 = (org.jfree.chart.axis.TickUnit) $stack11;

        return $stack12;
    }

    public org.jfree.chart.axis.TickUnit getCeilingTickUnit(double)
    {
        org.jfree.chart.axis.TickUnits this;
        org.jfree.chart.axis.NumberTickUnit $stack3;
        double size;
        java.text.NumberFormat $stack4;
        org.jfree.chart.axis.TickUnit $stack5;

        this := @this: org.jfree.chart.axis.TickUnits;

        size := @parameter0: double;

        $stack3 = new org.jfree.chart.axis.NumberTickUnit;

        $stack4 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>();

        specialinvoke $stack3.<org.jfree.chart.axis.NumberTickUnit: void <init>(double,java.text.NumberFormat)>(size, $stack4);

        $stack5 = virtualinvoke this.<org.jfree.chart.axis.TickUnits: org.jfree.chart.axis.TickUnit getCeilingTickUnit(org.jfree.chart.axis.TickUnit)>($stack3);

        return $stack5;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.axis.TickUnits this, clone;
        java.lang.Object $stack2;
        java.util.ArrayList $stack3;
        java.util.List $stack4;

        this := @this: org.jfree.chart.axis.TickUnits;

        $stack2 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        clone = (org.jfree.chart.axis.TickUnits) $stack2;

        $stack3 = new java.util.ArrayList;

        $stack4 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        specialinvoke $stack3.<java.util.ArrayList: void <init>(java.util.Collection)>($stack4);

        clone.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits> = $stack3;

        return clone;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.axis.TickUnits this, that;
        boolean $stack3, $stack6;
        java.util.List $stack4, $stack5;

        this := @this: org.jfree.chart.axis.TickUnits;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.axis.TickUnits;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.axis.TickUnits) obj;

        $stack5 = that.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack4 = this.<org.jfree.chart.axis.TickUnits: java.util.List tickUnits>;

        $stack6 = interfaceinvoke $stack5.<java.util.List: boolean equals(java.lang.Object)>($stack4);

        return $stack6;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.axis.TickUnits: long serialVersionUID> = 1134174035901467545L;

        return;
    }
}
