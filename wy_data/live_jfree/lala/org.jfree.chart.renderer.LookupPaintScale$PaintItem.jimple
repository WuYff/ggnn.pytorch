class org.jfree.chart.renderer.LookupPaintScale$PaintItem extends java.lang.Object implements java.lang.Comparable, java.io.Serializable
{
    static final long serialVersionUID;
    double value;
    transient java.awt.Paint paint;

    public void <init>(double, java.awt.Paint)
    {
        org.jfree.chart.renderer.LookupPaintScale$PaintItem this;
        double value;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.renderer.LookupPaintScale$PaintItem;

        value := @parameter0: double;

        paint := @parameter1: java.awt.Paint;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: double value> = value;

        this.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: java.awt.Paint paint> = paint;

        return;
    }

    public int compareTo(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.LookupPaintScale$PaintItem that, this;
        double d1, d2;
        byte $stack7, $stack8;

        this := @this: org.jfree.chart.renderer.LookupPaintScale$PaintItem;

        obj := @parameter0: java.lang.Object;

        that = (org.jfree.chart.renderer.LookupPaintScale$PaintItem) obj;

        d1 = this.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: double value>;

        d2 = that.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: double value>;

        $stack7 = d1 cmpl d2;

        if $stack7 <= 0 goto label1;

        return 1;

     label1:
        $stack8 = d1 cmpg d2;

        if $stack8 >= 0 goto label2;

        return -1;

     label2:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.LookupPaintScale$PaintItem this, that;
        boolean $stack3, $stack9;
        double $stack4, $stack5;
        byte $stack6;
        java.awt.Paint $stack7, $stack8;

        this := @this: org.jfree.chart.renderer.LookupPaintScale$PaintItem;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.renderer.LookupPaintScale$PaintItem;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.renderer.LookupPaintScale$PaintItem) obj;

        $stack5 = this.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: double value>;

        $stack4 = that.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: double value>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: java.awt.Paint paint>;

        $stack7 = that.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: java.awt.Paint paint>;

        $stack9 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.renderer.LookupPaintScale$PaintItem this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.renderer.LookupPaintScale$PaintItem;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.renderer.LookupPaintScale$PaintItem this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.renderer.LookupPaintScale$PaintItem;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.LookupPaintScale$PaintItem: java.awt.Paint paint> = $stack2;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.renderer.LookupPaintScale$PaintItem: long serialVersionUID> = 698920578512361570L;

        return;
    }
}
