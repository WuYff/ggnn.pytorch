public class org.jfree.chart.renderer.category.CategoryItemRendererState extends org.jfree.chart.renderer.RendererState
{
    private double barWidth;
    private double seriesRunningTotal;
    private int[] visibleSeries;
    private org.jfree.chart.plot.CategoryCrosshairState crosshairState;

    public void <init>(org.jfree.chart.plot.PlotRenderingInfo)
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        org.jfree.chart.plot.PlotRenderingInfo info;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        info := @parameter0: org.jfree.chart.plot.PlotRenderingInfo;

        specialinvoke this.<org.jfree.chart.renderer.RendererState: void <init>(org.jfree.chart.plot.PlotRenderingInfo)>(info);

        this.<org.jfree.chart.renderer.category.CategoryItemRendererState: double barWidth> = 0.0;

        this.<org.jfree.chart.renderer.category.CategoryItemRendererState: double seriesRunningTotal> = 0.0;

        return;
    }

    public double getBarWidth()
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        double $stack1;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        $stack1 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: double barWidth>;

        return $stack1;
    }

    public void setBarWidth(double)
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        double width;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        width := @parameter0: double;

        this.<org.jfree.chart.renderer.category.CategoryItemRendererState: double barWidth> = width;

        return;
    }

    public double getSeriesRunningTotal()
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        double $stack1;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        $stack1 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: double seriesRunningTotal>;

        return $stack1;
    }

    void setSeriesRunningTotal(double)
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        double total;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        total := @parameter0: double;

        this.<org.jfree.chart.renderer.category.CategoryItemRendererState: double seriesRunningTotal> = total;

        return;
    }

    public org.jfree.chart.plot.CategoryCrosshairState getCrosshairState()
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        org.jfree.chart.plot.CategoryCrosshairState $stack1;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        $stack1 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.plot.CategoryCrosshairState crosshairState>;

        return $stack1;
    }

    public void setCrosshairState(org.jfree.chart.plot.CategoryCrosshairState)
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        org.jfree.chart.plot.CategoryCrosshairState state;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        state := @parameter0: org.jfree.chart.plot.CategoryCrosshairState;

        this.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.plot.CategoryCrosshairState crosshairState> = state;

        return;
    }

    public int getVisibleSeriesIndex(int)
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        int[] $stack4, $stack5, $stack7;
        int $stack6, rowIndex, $stack8, index, vRow;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        rowIndex := @parameter0: int;

        $stack4 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        if $stack4 != null goto label1;

        return rowIndex;

     label1:
        index = -1;

        vRow = 0;

     label2:
        $stack5 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        $stack6 = lengthof $stack5;

        if vRow >= $stack6 goto label4;

        $stack7 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        $stack8 = $stack7[vRow];

        if $stack8 != rowIndex goto label3;

        index = vRow;

        goto label4;

     label3:
        vRow = vRow + 1;

        goto label2;

     label4:
        return index;
    }

    public int getVisibleSeriesCount()
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        int[] $stack1, $stack2;
        int $stack3;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        $stack1 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        if $stack1 != null goto label1;

        return -1;

     label1:
        $stack2 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        $stack3 = lengthof $stack2;

        return $stack3;
    }

    public int[] getVisibleSeriesArray()
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        int[] $stack2, $stack3, result, $stack5, $stack7;
        int $stack4, $stack6;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        $stack2 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        if $stack2 != null goto label1;

        return null;

     label1:
        $stack3 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        $stack4 = lengthof $stack3;

        result = newarray (int)[$stack4];

        $stack7 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        $stack5 = this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries>;

        $stack6 = lengthof $stack5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack7, 0, result, 0, $stack6);

        return result;
    }

    public void setVisibleSeriesArray(int[])
    {
        org.jfree.chart.renderer.category.CategoryItemRendererState this;
        int[] visibleSeries;

        this := @this: org.jfree.chart.renderer.category.CategoryItemRendererState;

        visibleSeries := @parameter0: int[];

        this.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] visibleSeries> = visibleSeries;

        return;
    }
}
