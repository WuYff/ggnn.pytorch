public class org.jfree.chart.renderer.xy.StackedXYAreaRenderer extends org.jfree.chart.renderer.xy.XYAreaRenderer implements java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.awt.Paint shapePaint;
    private transient java.awt.Stroke shapeStroke;

    public void <init>()
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        specialinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void <init>(int)>(4);

        return;
    }

    public void <init>(int)
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        int type;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        type := @parameter0: int;

        specialinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void <init>(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)>(type, null, null);

        return;
    }

    public void <init>(int, org.jfree.chart.labels.XYToolTipGenerator, org.jfree.chart.urls.XYURLGenerator)
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        int type;
        org.jfree.chart.labels.XYToolTipGenerator labelGenerator;
        org.jfree.chart.urls.XYURLGenerator urlGenerator;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        type := @parameter0: int;

        labelGenerator := @parameter1: org.jfree.chart.labels.XYToolTipGenerator;

        urlGenerator := @parameter2: org.jfree.chart.urls.XYURLGenerator;

        specialinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: void <init>(int,org.jfree.chart.labels.XYToolTipGenerator,org.jfree.chart.urls.XYURLGenerator)>(type, labelGenerator, urlGenerator);

        this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint> = null;

        this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke shapeStroke> = null;

        return;
    }

    public java.awt.Paint getShapePaint()
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint>;

        return $stack1;
    }

    public void setShapePaint(java.awt.Paint)
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        java.awt.Paint shapePaint;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        shapePaint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint> = shapePaint;

        virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Stroke getShapeStroke()
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke shapeStroke>;

        return $stack1;
    }

    public void setShapeStroke(java.awt.Stroke)
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        java.awt.Stroke shapeStroke;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        shapeStroke := @parameter0: java.awt.Stroke;

        this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke shapeStroke> = shapeStroke;

        virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void fireChangeEvent()>();

        return;
    }

    public org.jfree.chart.renderer.xy.XYItemRendererState initialise(java.awt.Graphics2D, java.awt.geom.Rectangle2D, org.jfree.chart.plot.XYPlot, org.jfree.data.xy.XYDataset, org.jfree.chart.plot.PlotRenderingInfo)
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState $stack7;
        org.jfree.chart.plot.PlotRenderingInfo info;
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.data.xy.XYDataset data;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        dataArea := @parameter1: java.awt.geom.Rectangle2D;

        plot := @parameter2: org.jfree.chart.plot.XYPlot;

        data := @parameter3: org.jfree.data.xy.XYDataset;

        info := @parameter4: org.jfree.chart.plot.PlotRenderingInfo;

        $stack7 = new org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState;

        specialinvoke $stack7.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: void <init>(org.jfree.chart.plot.PlotRenderingInfo)>(info);

        virtualinvoke $stack7.<org.jfree.chart.renderer.xy.XYItemRendererState: void setProcessVisibleItemsOnly(boolean)>(0);

        return $stack7;
    }

    public int getPassCount()
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        return 2;
    }

    public org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)
    {
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.data.xy.TableXYDataset $stack2;
        org.jfree.data.Range $stack3;
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        dataset := @parameter0: org.jfree.data.xy.XYDataset;

        if dataset == null goto label1;

        $stack2 = (org.jfree.data.xy.TableXYDataset) dataset;

        $stack3 = staticinvoke <org.jfree.data.general.DatasetUtils: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset)>($stack2);

        return $stack3;

     label1:
        return null;
    }

    public void drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotRenderingInfo, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, org.jfree.chart.plot.CrosshairState, int)
    {
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.chart.plot.PlotOrientation orientation, $stack56, $stack57, $stack58, $stack59, $stack89, $stack90, $stack91, $stack92, $stack104, $stack123, $stack124, $stack165, $stack166, $stack195, $stack196, $stack103;
        org.jfree.chart.renderer.xy.XYItemRendererState state;
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState areaState;
        org.jfree.data.xy.XYDataset dataset;
        org.jfree.data.xy.TableXYDataset tdataset;
        int itemCount, series, item, pass, $stack120, $stack142, $stack144, $stack147, $stack148, $stack151, $stack152, $stack154, $stack156, $stack158, $stack177, $stack178, $stack181, $stack182, $stack185, $stack187, $stack199, $stack200, $stack202, $stack203, transY2#59;
        double x1, ph1, transX1, $stack49, transY1, $stack82, $stack83, $stack86, $stack87, $stack141, $stack143, $stack162, transY0, $stack184, $stack186, y1, transY2, y0, ph0, transX0, $stack108;
        boolean $stack45, $stack53, $stack55, $stack64, $stack126, $stack131, nullPoint, $stack105, $stack106;
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        org.jfree.chart.axis.ValueAxis domainAxis, rangeAxis;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.ui.RectangleEdge $stack47, $stack50, $stack121, $stack160, $stack163, $stack193;
        java.awt.Paint seriesPaint, $stack93, $stack98, $stack128, seriesFillPaint;
        java.awt.Stroke seriesStroke, $stack94, $stack95, $stack127;
        org.jfree.chart.entity.EntityCollection entities;
        java.awt.geom.Area $stack62, $stack63;
        org.jfree.chart.urls.XYURLGenerator $stack66, $stack68;
        org.jfree.chart.entity.XYItemEntity $stack67;
        java.awt.geom.Rectangle2D$Double $stack81, $stack85;
        java.awt.Graphics2D g2;
        org.jfree.chart.plot.CrosshairState crosshairState;
        java.awt.Polygon $stack125, $stack129, $stack140, $stack146, $stack150, $stack176, $stack183, $stack190, $stack198, $stack201;
        java.lang.Object $stack139;
        java.awt.geom.Line2D $stack168, $stack175, $stack167;
        java.awt.Point $stack180, point;
        java.util.Stack $stack188, $stack191, $stack192, y0#45;
        org.jfree.chart.plot.PlotRenderingInfo info, $stack60;
        java.awt.Shape transY2#100;
        java.lang.String point#112, url;
        org.jfree.chart.labels.XYToolTipGenerator ph0#113;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        state := @parameter1: org.jfree.chart.renderer.xy.XYItemRendererState;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        info := @parameter3: org.jfree.chart.plot.PlotRenderingInfo;

        plot := @parameter4: org.jfree.chart.plot.XYPlot;

        domainAxis := @parameter5: org.jfree.chart.axis.ValueAxis;

        rangeAxis := @parameter6: org.jfree.chart.axis.ValueAxis;

        dataset := @parameter7: org.jfree.data.xy.XYDataset;

        series := @parameter8: int;

        item := @parameter9: int;

        crosshairState := @parameter10: org.jfree.chart.plot.CrosshairState;

        pass := @parameter11: int;

        orientation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        areaState = (org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState) state;

        tdataset = (org.jfree.data.xy.TableXYDataset) dataset;

        itemCount = interfaceinvoke tdataset.<org.jfree.data.xy.TableXYDataset: int getItemCount()>();

        x1 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(series, item);

        y1 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(series, item);

        nullPoint = 0;

        $stack45 = staticinvoke <java.lang.Double: boolean isNaN(double)>(y1);

        if $stack45 == 0 goto label01;

        y1 = 0.0;

        nullPoint = 1;

     label01:
        ph1 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: double getPreviousHeight(org.jfree.data.xy.TableXYDataset,int,int)>(tdataset, series, item);

        $stack47 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        transX1 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(x1, dataArea, $stack47);

        $stack49 = y1 + ph1;

        $stack50 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transY1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack49, dataArea, $stack50);

        seriesPaint = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint getItemPaint(int,int)>(series, item);

        seriesFillPaint = seriesPaint;

        $stack53 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: boolean getUseFillPaint()>();

        if $stack53 == 0 goto label02;

        seriesFillPaint = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint getItemFillPaint(int,int)>(series, item);

     label02:
        seriesStroke = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke getItemStroke(int,int)>(series, item);

        if pass != 0 goto label15;

        if item != 0 goto label04;

        $stack190 = new java.awt.Polygon;

        specialinvoke $stack190.<java.awt.Polygon: void <init>()>();

        virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: void setSeriesArea(java.awt.Polygon)>($stack190);

        $stack191 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.util.Stack getCurrentSeriesPoints()>();

        virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: void setLastSeriesPoints(java.util.Stack)>($stack191);

        $stack192 = new java.util.Stack;

        specialinvoke $stack192.<java.util.Stack: void <init>()>();

        virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: void setCurrentSeriesPoints(java.util.Stack)>($stack192);

        $stack193 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transY2 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(ph1, dataArea, $stack193);

        $stack195 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack195 goto label03;

        $stack201 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        $stack203 = (int) transX1;

        $stack202 = (int) transY2;

        virtualinvoke $stack201.<java.awt.Polygon: void addPoint(int,int)>($stack203, $stack202);

        goto label04;

     label03:
        $stack196 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack196 goto label04;

        $stack198 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        $stack200 = (int) transY2;

        $stack199 = (int) transX1;

        virtualinvoke $stack198.<java.awt.Polygon: void addPoint(int,int)>($stack200, $stack199);

     label04:
        $stack103 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack103 goto label05;

        $stack180 = new java.awt.Point;

        $stack182 = (int) transX1;

        $stack181 = (int) transY1;

        specialinvoke $stack180.<java.awt.Point: void <init>(int,int)>($stack182, $stack181);

        $stack183 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        $stack184 = virtualinvoke $stack180.<java.awt.Point: double getX()>();

        $stack185 = (int) $stack184;

        $stack186 = virtualinvoke $stack180.<java.awt.Point: double getY()>();

        $stack187 = (int) $stack186;

        virtualinvoke $stack183.<java.awt.Polygon: void addPoint(int,int)>($stack185, $stack187);

        $stack188 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.util.Stack getCurrentSeriesPoints()>();

        virtualinvoke $stack188.<java.util.Stack: java.lang.Object push(java.lang.Object)>($stack180);

        goto label06;

     label05:
        $stack104 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack104 goto label06;

        $stack176 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        $stack178 = (int) transY1;

        $stack177 = (int) transX1;

        virtualinvoke $stack176.<java.awt.Polygon: void addPoint(int,int)>($stack178, $stack177);

     label06:
        $stack105 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: boolean getPlotLines()>();

        if $stack105 == 0 goto label09;

        if item <= 0 goto label09;

        $stack154 = item - 1;

        transY2 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(series, $stack154);

        $stack156 = item - 1;

        y0 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(series, $stack156);

        $stack158 = item - 1;

        ph0 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: double getPreviousHeight(org.jfree.data.xy.TableXYDataset,int,int)>(tdataset, series, $stack158);

        $stack160 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        transX0 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(transY2, dataArea, $stack160);

        $stack162 = y0 + ph0;

        $stack163 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transY0 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack162, dataArea, $stack163);

        $stack165 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack165 goto label07;

        $stack175 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.geom.Line2D getLine()>();

        virtualinvoke $stack175.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(transX0, transY0, transX1, transY1);

        goto label08;

     label07:
        $stack166 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack166 goto label08;

        $stack168 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.geom.Line2D getLine()>();

        virtualinvoke $stack168.<java.awt.geom.Line2D: void setLine(double,double,double,double)>(transY0, transX0, transY1, transX1);

     label08:
        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(seriesPaint);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(seriesStroke);

        $stack167 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.geom.Line2D getLine()>();

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack167);

     label09:
        $stack106 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: boolean getPlotArea()>();

        if $stack106 == 0 goto label14;

        if item <= 0 goto label14;

        $stack120 = itemCount - 1;

        if item != $stack120 goto label14;

        $stack121 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        transY2 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(ph1, dataArea, $stack121);

        $stack123 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack123 goto label10;

        $stack150 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        $stack152 = (int) transX1;

        $stack151 = (int) transY2;

        virtualinvoke $stack150.<java.awt.Polygon: void addPoint(int,int)>($stack152, $stack151);

        goto label11;

     label10:
        $stack124 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack124 goto label11;

        $stack146 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        $stack148 = (int) transY2;

        $stack147 = (int) transX1;

        virtualinvoke $stack146.<java.awt.Polygon: void addPoint(int,int)>($stack148, $stack147);

     label11:
        if series == 0 goto label13;

        y0#45 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.util.Stack getLastSeriesPoints()>();

     label12:
        $stack131 = virtualinvoke y0#45.<java.util.Stack: boolean empty()>();

        if $stack131 != 0 goto label13;

        $stack139 = virtualinvoke y0#45.<java.util.Stack: java.lang.Object pop()>();

        point = (java.awt.Point) $stack139;

        $stack140 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        $stack141 = virtualinvoke point.<java.awt.Point: double getX()>();

        $stack142 = (int) $stack141;

        $stack143 = virtualinvoke point.<java.awt.Point: double getY()>();

        $stack144 = (int) $stack143;

        virtualinvoke $stack140.<java.awt.Polygon: void addPoint(int,int)>($stack142, $stack144);

        goto label12;

     label13:
        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(seriesFillPaint);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(seriesStroke);

        $stack125 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack125);

        $stack126 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: boolean isOutline()>();

        if $stack126 == 0 goto label14;

        $stack127 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke lookupSeriesOutlineStroke(int)>(series);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack127);

        $stack128 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint lookupSeriesOutlinePaint(int)>(series);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack128);

        $stack129 = virtualinvoke areaState.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer$StackedXYAreaRendererState: java.awt.Polygon getSeriesArea()>();

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack129);

     label14:
        transY2#59 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: int indexOf(org.jfree.data.xy.XYDataset)>(dataset);

        $stack108 = ph1 + y1;

        virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,double,double,org.jfree.chart.plot.PlotOrientation)>(crosshairState, x1, $stack108, transY2#59, transX1, transY1, orientation);

        goto label27;

     label15:
        if pass != 1 goto label27;

        transY2#100 = null;

        $stack55 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: boolean getPlotShapes()>();

        if $stack55 == 0 goto label22;

        transY2#100 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Shape getItemShape(int,int)>(series, item);

        $stack89 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack90 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if $stack89 != $stack90 goto label16;

        transY2#100 = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape createTranslatedShape(java.awt.Shape,double,double)>(transY2#100, transX1, transY1);

        goto label17;

     label16:
        $stack91 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack92 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if $stack91 != $stack92 goto label17;

        transY2#100 = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape createTranslatedShape(java.awt.Shape,double,double)>(transY2#100, transY1, transX1);

     label17:
        if nullPoint != 0 goto label24;

        $stack93 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint getShapePaint()>();

        if $stack93 == null goto label18;

        $stack98 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint getShapePaint()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack98);

        goto label19;

     label18:
        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(seriesPaint);

     label19:
        $stack94 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke getShapeStroke()>();

        if $stack94 == null goto label20;

        $stack95 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke getShapeStroke()>();

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack95);

        goto label21;

     label20:
        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>(seriesStroke);

     label21:
        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(transY2#100);

        goto label24;

     label22:
        $stack56 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack57 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if $stack56 != $stack57 goto label23;

        $stack85 = new java.awt.geom.Rectangle2D$Double;

        $stack87 = transX1 - 3.0;

        $stack86 = transY1 - 3.0;

        specialinvoke $stack85.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack87, $stack86, 6.0, 6.0);

        transY2#100 = $stack85;

        goto label24;

     label23:
        $stack58 = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack59 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if $stack58 != $stack59 goto label24;

        $stack81 = new java.awt.geom.Rectangle2D$Double;

        $stack83 = transY1 - 3.0;

        $stack82 = transX1 - 3.0;

        specialinvoke $stack81.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack83, $stack82, 6.0, 6.0);

        transY2#100 = $stack81;

     label24:
        $stack60 = virtualinvoke state.<org.jfree.chart.renderer.xy.XYItemRendererState: org.jfree.chart.plot.PlotRenderingInfo getInfo()>();

        if $stack60 == null goto label27;

        entities = virtualinvoke state.<org.jfree.chart.renderer.xy.XYItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

        if entities == null goto label27;

        if transY2#100 == null goto label27;

        if nullPoint != 0 goto label27;

        $stack62 = new java.awt.geom.Area;

        specialinvoke $stack62.<java.awt.geom.Area: void <init>(java.awt.Shape)>(transY2#100);

        $stack63 = new java.awt.geom.Area;

        specialinvoke $stack63.<java.awt.geom.Area: void <init>(java.awt.Shape)>(dataArea);

        virtualinvoke $stack62.<java.awt.geom.Area: void intersect(java.awt.geom.Area)>($stack63);

        $stack64 = virtualinvoke $stack62.<java.awt.geom.Area: boolean isEmpty()>();

        if $stack64 != 0 goto label27;

        point#112 = null;

        ph0#113 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: org.jfree.chart.labels.XYToolTipGenerator getToolTipGenerator(int,int)>(series, item);

        if ph0#113 == null goto label25;

        point#112 = interfaceinvoke ph0#113.<org.jfree.chart.labels.XYToolTipGenerator: java.lang.String generateToolTip(org.jfree.data.xy.XYDataset,int,int)>(dataset, series, item);

     label25:
        url = null;

        $stack66 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: org.jfree.chart.urls.XYURLGenerator getURLGenerator()>();

        if $stack66 == null goto label26;

        $stack68 = virtualinvoke this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: org.jfree.chart.urls.XYURLGenerator getURLGenerator()>();

        url = interfaceinvoke $stack68.<org.jfree.chart.urls.XYURLGenerator: java.lang.String generateURL(org.jfree.data.xy.XYDataset,int,int)>(dataset, series, item);

     label26:
        $stack67 = new org.jfree.chart.entity.XYItemEntity;

        specialinvoke $stack67.<org.jfree.chart.entity.XYItemEntity: void <init>(java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,java.lang.String,java.lang.String)>($stack62, dataset, series, item, point#112, url);

        interfaceinvoke entities.<org.jfree.chart.entity.EntityCollection: void add(org.jfree.chart.entity.ChartEntity)>($stack67);

     label27:
        return;
    }

    protected double getPreviousHeight(org.jfree.data.xy.TableXYDataset, int, int)
    {
        int series, index, i;
        org.jfree.data.xy.TableXYDataset dataset;
        double value, result;
        boolean $stack10;
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        dataset := @parameter0: org.jfree.data.xy.TableXYDataset;

        series := @parameter1: int;

        index := @parameter2: int;

        result = 0.0;

        i = 0;

     label1:
        if i >= series goto label3;

        value = interfaceinvoke dataset.<org.jfree.data.xy.TableXYDataset: double getYValue(int,int)>(i, index);

        $stack10 = staticinvoke <java.lang.Double: boolean isNaN(double)>(value);

        if $stack10 != 0 goto label2;

        result = result + value;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return result;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this, that;
        boolean $stack3, $stack4, $stack7, $stack10;
        java.awt.Paint $stack5, $stack6;
        java.awt.Stroke $stack8, $stack9;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        if $stack3 == 0 goto label2;

        $stack4 = specialinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: boolean equals(java.lang.Object)>(obj);

        if $stack4 != 0 goto label3;

     label2:
        return 0;

     label3:
        that = (org.jfree.chart.renderer.xy.StackedXYAreaRenderer) obj;

        $stack6 = this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint>;

        $stack5 = that.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint>;

        $stack7 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack6, $stack5);

        if $stack7 != 0 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke shapeStroke>;

        $stack8 = that.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke shapeStroke>;

        $stack10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack9, $stack8);

        if $stack10 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        $stack1 = specialinvoke this.<org.jfree.chart.renderer.xy.XYAreaRenderer: java.lang.Object clone()>();

        return $stack1;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        java.awt.Paint $stack2;
        java.awt.Stroke $stack3;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke shapeStroke> = $stack3;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.renderer.xy.StackedXYAreaRenderer this;
        java.awt.Paint $stack2;
        java.awt.Stroke $stack3;

        this := @this: org.jfree.chart.renderer.xy.StackedXYAreaRenderer;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Paint shapePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: java.awt.Stroke shapeStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.renderer.xy.StackedXYAreaRenderer: long serialVersionUID> = 5217394318178570889L;

        return;
    }
}
