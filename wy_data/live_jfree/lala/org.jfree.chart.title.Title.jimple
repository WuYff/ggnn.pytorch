public abstract class org.jfree.chart.title.Title extends org.jfree.chart.block.AbstractBlock implements org.jfree.chart.block.Block, java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final org.jfree.chart.ui.RectangleEdge DEFAULT_POSITION;
    public static final org.jfree.chart.ui.HorizontalAlignment DEFAULT_HORIZONTAL_ALIGNMENT;
    public static final org.jfree.chart.ui.VerticalAlignment DEFAULT_VERTICAL_ALIGNMENT;
    public static final org.jfree.chart.ui.RectangleInsets DEFAULT_PADDING;
    public boolean visible;
    private org.jfree.chart.ui.RectangleEdge position;
    private org.jfree.chart.ui.HorizontalAlignment horizontalAlignment;
    private org.jfree.chart.ui.VerticalAlignment verticalAlignment;
    private transient javax.swing.event.EventListenerList listenerList;
    private boolean notify;

    protected void <init>()
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.ui.RectangleInsets $stack1;
        org.jfree.chart.ui.VerticalAlignment $stack2;
        org.jfree.chart.ui.HorizontalAlignment $stack3;
        org.jfree.chart.ui.RectangleEdge $stack4;

        this := @this: org.jfree.chart.title.Title;

        $stack4 = <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge DEFAULT_POSITION>;

        $stack3 = <org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment DEFAULT_HORIZONTAL_ALIGNMENT>;

        $stack2 = <org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment DEFAULT_VERTICAL_ALIGNMENT>;

        $stack1 = <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleInsets DEFAULT_PADDING>;

        specialinvoke this.<org.jfree.chart.title.Title: void <init>(org.jfree.chart.ui.RectangleEdge,org.jfree.chart.ui.HorizontalAlignment,org.jfree.chart.ui.VerticalAlignment,org.jfree.chart.ui.RectangleInsets)>($stack4, $stack3, $stack2, $stack1);

        return;
    }

    protected void <init>(org.jfree.chart.ui.RectangleEdge, org.jfree.chart.ui.HorizontalAlignment, org.jfree.chart.ui.VerticalAlignment)
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.ui.RectangleEdge position;
        org.jfree.chart.ui.HorizontalAlignment horizontalAlignment;
        org.jfree.chart.ui.VerticalAlignment verticalAlignment;
        org.jfree.chart.ui.RectangleInsets $stack4;

        this := @this: org.jfree.chart.title.Title;

        position := @parameter0: org.jfree.chart.ui.RectangleEdge;

        horizontalAlignment := @parameter1: org.jfree.chart.ui.HorizontalAlignment;

        verticalAlignment := @parameter2: org.jfree.chart.ui.VerticalAlignment;

        $stack4 = <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleInsets DEFAULT_PADDING>;

        specialinvoke this.<org.jfree.chart.title.Title: void <init>(org.jfree.chart.ui.RectangleEdge,org.jfree.chart.ui.HorizontalAlignment,org.jfree.chart.ui.VerticalAlignment,org.jfree.chart.ui.RectangleInsets)>(position, horizontalAlignment, verticalAlignment, $stack4);

        return;
    }

    protected void <init>(org.jfree.chart.ui.RectangleEdge, org.jfree.chart.ui.HorizontalAlignment, org.jfree.chart.ui.VerticalAlignment, org.jfree.chart.ui.RectangleInsets)
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.ui.RectangleEdge position;
        org.jfree.chart.ui.HorizontalAlignment horizontalAlignment;
        org.jfree.chart.ui.VerticalAlignment verticalAlignment;
        org.jfree.chart.ui.RectangleInsets padding;
        javax.swing.event.EventListenerList $stack5;

        this := @this: org.jfree.chart.title.Title;

        position := @parameter0: org.jfree.chart.ui.RectangleEdge;

        horizontalAlignment := @parameter1: org.jfree.chart.ui.HorizontalAlignment;

        verticalAlignment := @parameter2: org.jfree.chart.ui.VerticalAlignment;

        padding := @parameter3: org.jfree.chart.ui.RectangleInsets;

        specialinvoke this.<org.jfree.chart.block.AbstractBlock: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(position, "position");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(horizontalAlignment, "horizontalAlignment");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(verticalAlignment, "verticalAlignment");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(padding, "padding");

        this.<org.jfree.chart.title.Title: boolean visible> = 1;

        this.<org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge position> = position;

        this.<org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment horizontalAlignment> = horizontalAlignment;

        this.<org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment verticalAlignment> = verticalAlignment;

        virtualinvoke this.<org.jfree.chart.title.Title: void setPadding(org.jfree.chart.ui.RectangleInsets)>(padding);

        $stack5 = new javax.swing.event.EventListenerList;

        specialinvoke $stack5.<javax.swing.event.EventListenerList: void <init>()>();

        this.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $stack5;

        this.<org.jfree.chart.title.Title: boolean notify> = 1;

        return;
    }

    public boolean isVisible()
    {
        org.jfree.chart.title.Title this;
        boolean $stack1;

        this := @this: org.jfree.chart.title.Title;

        $stack1 = this.<org.jfree.chart.title.Title: boolean visible>;

        return $stack1;
    }

    public void setVisible(boolean)
    {
        org.jfree.chart.title.Title this;
        boolean visible;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.Title;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.title.Title: boolean visible> = visible;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public org.jfree.chart.ui.RectangleEdge getPosition()
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.ui.RectangleEdge $stack1;

        this := @this: org.jfree.chart.title.Title;

        $stack1 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge position>;

        return $stack1;
    }

    public void setPosition(org.jfree.chart.ui.RectangleEdge)
    {
        org.jfree.chart.ui.RectangleEdge position, $stack2;
        org.jfree.chart.title.Title this;
        org.jfree.chart.event.TitleChangeEvent $stack3;

        this := @this: org.jfree.chart.title.Title;

        position := @parameter0: org.jfree.chart.ui.RectangleEdge;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(position, "position");

        $stack2 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge position>;

        if $stack2 == position goto label1;

        this.<org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge position> = position;

        $stack3 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack3);

     label1:
        return;
    }

    public org.jfree.chart.ui.HorizontalAlignment getHorizontalAlignment()
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.ui.HorizontalAlignment $stack1;

        this := @this: org.jfree.chart.title.Title;

        $stack1 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment horizontalAlignment>;

        return $stack1;
    }

    public void setHorizontalAlignment(org.jfree.chart.ui.HorizontalAlignment)
    {
        org.jfree.chart.ui.HorizontalAlignment alignment, $stack2;
        org.jfree.chart.title.Title this;
        org.jfree.chart.event.TitleChangeEvent $stack3;

        this := @this: org.jfree.chart.title.Title;

        alignment := @parameter0: org.jfree.chart.ui.HorizontalAlignment;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(alignment, "alignment");

        $stack2 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment horizontalAlignment>;

        if $stack2 == alignment goto label1;

        this.<org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment horizontalAlignment> = alignment;

        $stack3 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack3);

     label1:
        return;
    }

    public org.jfree.chart.ui.VerticalAlignment getVerticalAlignment()
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.ui.VerticalAlignment $stack1;

        this := @this: org.jfree.chart.title.Title;

        $stack1 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment verticalAlignment>;

        return $stack1;
    }

    public void setVerticalAlignment(org.jfree.chart.ui.VerticalAlignment)
    {
        org.jfree.chart.ui.VerticalAlignment alignment, $stack2;
        org.jfree.chart.title.Title this;
        org.jfree.chart.event.TitleChangeEvent $stack3;

        this := @this: org.jfree.chart.title.Title;

        alignment := @parameter0: org.jfree.chart.ui.VerticalAlignment;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(alignment, "alignment");

        $stack2 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment verticalAlignment>;

        if $stack2 == alignment goto label1;

        this.<org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment verticalAlignment> = alignment;

        $stack3 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack3);

     label1:
        return;
    }

    public boolean getNotify()
    {
        org.jfree.chart.title.Title this;
        boolean $stack1;

        this := @this: org.jfree.chart.title.Title;

        $stack1 = this.<org.jfree.chart.title.Title: boolean notify>;

        return $stack1;
    }

    public void setNotify(boolean)
    {
        org.jfree.chart.title.Title this;
        boolean flag;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.Title;

        flag := @parameter0: boolean;

        this.<org.jfree.chart.title.Title: boolean notify> = flag;

        if flag == 0 goto label1;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.Title: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

     label1:
        return;
    }

    public abstract void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D);

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.title.Title this, duplicate;
        java.lang.Object $stack2;
        javax.swing.event.EventListenerList $stack3;

        this := @this: org.jfree.chart.title.Title;

        $stack2 = specialinvoke this.<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>();

        duplicate = (org.jfree.chart.title.Title) $stack2;

        $stack3 = new javax.swing.event.EventListenerList;

        specialinvoke $stack3.<javax.swing.event.EventListenerList: void <init>()>();

        duplicate.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $stack3;

        return duplicate;
    }

    public void addChangeListener(org.jfree.chart.event.TitleChangeListener)
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.event.TitleChangeListener listener;
        javax.swing.event.EventListenerList $stack2;

        this := @this: org.jfree.chart.title.Title;

        listener := @parameter0: org.jfree.chart.event.TitleChangeListener;

        $stack2 = this.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>;

        virtualinvoke $stack2.<javax.swing.event.EventListenerList: void add(java.lang.Class,java.util.EventListener)>(class "Lorg/jfree/chart/event/TitleChangeListener;", listener);

        return;
    }

    public void removeChangeListener(org.jfree.chart.event.TitleChangeListener)
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.event.TitleChangeListener listener;
        javax.swing.event.EventListenerList $stack2;

        this := @this: org.jfree.chart.title.Title;

        listener := @parameter0: org.jfree.chart.event.TitleChangeListener;

        $stack2 = this.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>;

        virtualinvoke $stack2.<javax.swing.event.EventListenerList: void remove(java.lang.Class,java.util.EventListener)>(class "Lorg/jfree/chart/event/TitleChangeListener;", listener);

        return;
    }

    protected void notifyListeners(org.jfree.chart.event.TitleChangeEvent)
    {
        org.jfree.chart.title.Title this;
        boolean $stack4;
        javax.swing.event.EventListenerList $stack5;
        java.lang.Object[] listeners;
        int $stack7, $stack10, i;
        java.lang.Object $stack8, $stack11;
        org.jfree.chart.event.TitleChangeEvent event;
        org.jfree.chart.event.TitleChangeListener $stack12;

        this := @this: org.jfree.chart.title.Title;

        event := @parameter0: org.jfree.chart.event.TitleChangeEvent;

        $stack4 = this.<org.jfree.chart.title.Title: boolean notify>;

        if $stack4 == 0 goto label3;

        $stack5 = this.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList>;

        listeners = virtualinvoke $stack5.<javax.swing.event.EventListenerList: java.lang.Object[] getListenerList()>();

        $stack7 = lengthof listeners;

        i = $stack7 - 2;

     label1:
        if i < 0 goto label3;

        $stack8 = listeners[i];

        if $stack8 != class "Lorg/jfree/chart/event/TitleChangeListener;" goto label2;

        $stack10 = i + 1;

        $stack11 = listeners[$stack10];

        $stack12 = (org.jfree.chart.event.TitleChangeListener) $stack11;

        interfaceinvoke $stack12.<org.jfree.chart.event.TitleChangeListener: void titleChanged(org.jfree.chart.event.TitleChangeEvent)>(event);

     label2:
        i = i + -2;

        goto label1;

     label3:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.title.Title this, that;
        boolean $stack3, $stack4, $stack5, $stack12, $stack13, $stack14;
        org.jfree.chart.ui.RectangleEdge $stack6, $stack7;
        org.jfree.chart.ui.HorizontalAlignment $stack8, $stack9;
        org.jfree.chart.ui.VerticalAlignment $stack10, $stack11;

        this := @this: org.jfree.chart.title.Title;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.title.Title;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.title.Title) obj;

        $stack5 = this.<org.jfree.chart.title.Title: boolean visible>;

        $stack4 = that.<org.jfree.chart.title.Title: boolean visible>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge position>;

        $stack6 = that.<org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge position>;

        if $stack7 == $stack6 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment horizontalAlignment>;

        $stack8 = that.<org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment horizontalAlignment>;

        if $stack9 == $stack8 goto label5;

        return 0;

     label5:
        $stack11 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment verticalAlignment>;

        $stack10 = that.<org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment verticalAlignment>;

        if $stack11 == $stack10 goto label6;

        return 0;

     label6:
        $stack13 = this.<org.jfree.chart.title.Title: boolean notify>;

        $stack12 = that.<org.jfree.chart.title.Title: boolean notify>;

        if $stack13 == $stack12 goto label7;

        return 0;

     label7:
        $stack14 = specialinvoke this.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(obj);

        return $stack14;
    }

    public int hashCode()
    {
        org.jfree.chart.title.Title this;
        org.jfree.chart.ui.RectangleEdge $stack2;
        int $stack3, $stack4, $stack6, $stack7, $stack9, $stack10, result#2;
        org.jfree.chart.ui.HorizontalAlignment $stack5;
        org.jfree.chart.ui.VerticalAlignment $stack8;

        this := @this: org.jfree.chart.title.Title;

        $stack3 = 37 * 193;

        $stack2 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge position>;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack2);

        result#2 = $stack3 + $stack4;

        $stack6 = 37 * result#2;

        $stack5 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment horizontalAlignment>;

        $stack7 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack5);

        result#2 = $stack6 + $stack7;

        $stack9 = 37 * result#2;

        $stack8 = this.<org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment verticalAlignment>;

        $stack10 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack8);

        result#2 = $stack9 + $stack10;

        return result#2;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.title.Title this;

        this := @this: org.jfree.chart.title.Title;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.title.Title this;
        javax.swing.event.EventListenerList $stack2;

        this := @this: org.jfree.chart.title.Title;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = new javax.swing.event.EventListenerList;

        specialinvoke $stack2.<javax.swing.event.EventListenerList: void <init>()>();

        this.<org.jfree.chart.title.Title: javax.swing.event.EventListenerList listenerList> = $stack2;

        return;
    }

    static void <clinit>()
    {
        org.jfree.chart.ui.RectangleEdge $stack0;
        org.jfree.chart.ui.HorizontalAlignment $stack1;
        org.jfree.chart.ui.VerticalAlignment $stack2;
        org.jfree.chart.ui.RectangleInsets $stack3;

        <org.jfree.chart.title.Title: long serialVersionUID> = -6675162505277817221L;

        $stack0 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

        <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleEdge DEFAULT_POSITION> = $stack0;

        $stack1 = <org.jfree.chart.ui.HorizontalAlignment: org.jfree.chart.ui.HorizontalAlignment CENTER>;

        <org.jfree.chart.title.Title: org.jfree.chart.ui.HorizontalAlignment DEFAULT_HORIZONTAL_ALIGNMENT> = $stack1;

        $stack2 = <org.jfree.chart.ui.VerticalAlignment: org.jfree.chart.ui.VerticalAlignment CENTER>;

        <org.jfree.chart.title.Title: org.jfree.chart.ui.VerticalAlignment DEFAULT_VERTICAL_ALIGNMENT> = $stack2;

        $stack3 = new org.jfree.chart.ui.RectangleInsets;

        specialinvoke $stack3.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(1.0, 1.0, 1.0, 1.0);

        <org.jfree.chart.title.Title: org.jfree.chart.ui.RectangleInsets DEFAULT_PADDING> = $stack3;

        return;
    }
}
