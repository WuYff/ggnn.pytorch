public class org.jfree.data.json.impl.JSONObject extends java.util.HashMap implements java.util.Map, org.jfree.data.json.impl.JSONAware, org.jfree.data.json.impl.JSONStreamAware
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.jfree.data.json.impl.JSONObject this;

        this := @this: org.jfree.data.json.impl.JSONObject;

        specialinvoke this.<java.util.HashMap: void <init>()>();

        return;
    }

    public static void writeJSONString(java.util.Map, java.io.Writer) throws java.io.IOException
    {
        java.util.Map map;
        java.util.Set $stack5;
        java.util.Iterator iter;
        java.io.Writer out;
        boolean $stack7, first;
        java.lang.Object $stack8, $stack9, $stack12;
        java.util.Map$Entry entry;
        java.lang.String $stack10, $stack11;

        map := @parameter0: java.util.Map;

        out := @parameter1: java.io.Writer;

        if map != null goto label1;

        virtualinvoke out.<java.io.Writer: void write(java.lang.String)>("null");

        return;

     label1:
        first = 1;

        $stack5 = interfaceinvoke map.<java.util.Map: java.util.Set entrySet()>();

        iter = interfaceinvoke $stack5.<java.util.Set: java.util.Iterator iterator()>();

        virtualinvoke out.<java.io.Writer: void write(int)>(123);

     label2:
        $stack7 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label5;

        if first == 0 goto label3;

        first = 0;

        goto label4;

     label3:
        virtualinvoke out.<java.io.Writer: void write(int)>(44);

     label4:
        $stack8 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $stack8;

        virtualinvoke out.<java.io.Writer: void write(int)>(34);

        $stack9 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($stack9);

        $stack11 = staticinvoke <org.jfree.data.json.impl.JSONValue: java.lang.String escape(java.lang.String)>($stack10);

        virtualinvoke out.<java.io.Writer: void write(java.lang.String)>($stack11);

        virtualinvoke out.<java.io.Writer: void write(int)>(34);

        virtualinvoke out.<java.io.Writer: void write(int)>(58);

        $stack12 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.jfree.data.json.impl.JSONValue: void writeJSONString(java.lang.Object,java.io.Writer)>($stack12, out);

        goto label2;

     label5:
        virtualinvoke out.<java.io.Writer: void write(int)>(125);

        return;
    }

    public void writeJSONString(java.io.Writer) throws java.io.IOException
    {
        org.jfree.data.json.impl.JSONObject this;
        java.io.Writer out;

        this := @this: org.jfree.data.json.impl.JSONObject;

        out := @parameter0: java.io.Writer;

        staticinvoke <org.jfree.data.json.impl.JSONObject: void writeJSONString(java.util.Map,java.io.Writer)>(this, out);

        return;
    }

    public static java.lang.String toJSONString(java.util.Map)
    {
        java.util.Map map;
        java.lang.StringBuffer $stack5;
        java.util.Set $stack6;
        java.util.Iterator iter;
        boolean $stack9, first;
        java.lang.String $stack11, $stack15;
        java.lang.Object $stack13, $stack14, $stack16;
        java.util.Map$Entry entry;

        map := @parameter0: java.util.Map;

        if map != null goto label1;

        return "null";

     label1:
        $stack5 = new java.lang.StringBuffer;

        specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>();

        first = 1;

        $stack6 = interfaceinvoke map.<java.util.Map: java.util.Set entrySet()>();

        iter = interfaceinvoke $stack6.<java.util.Set: java.util.Iterator iterator()>();

        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

     label2:
        $stack9 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label5;

        if first == 0 goto label3;

        first = 0;

        goto label4;

     label3:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label4:
        $stack13 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $stack13;

        $stack14 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($stack14);

        $stack16 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        staticinvoke <org.jfree.data.json.impl.JSONObject: java.lang.String toJSONString(java.lang.String,java.lang.Object,java.lang.StringBuffer)>($stack15, $stack16, $stack5);

        goto label2;

     label5:
        virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $stack11 = virtualinvoke $stack5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $stack11;
    }

    public java.lang.String toJSONString()
    {
        org.jfree.data.json.impl.JSONObject this;
        java.lang.String $stack1;

        this := @this: org.jfree.data.json.impl.JSONObject;

        $stack1 = staticinvoke <org.jfree.data.json.impl.JSONObject: java.lang.String toJSONString(java.util.Map)>(this);

        return $stack1;
    }

    private static java.lang.String toJSONString(java.lang.String, java.lang.Object, java.lang.StringBuffer)
    {
        java.lang.StringBuffer sb, $stack4;
        java.lang.String key, $stack6, $stack8;
        java.lang.Object value;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.Object;

        sb := @parameter2: java.lang.StringBuffer;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        if key != null goto label1;

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        goto label2;

     label1:
        staticinvoke <org.jfree.data.json.impl.JSONValue: void escape(java.lang.String,java.lang.StringBuffer)>(key, sb);

     label2:
        $stack4 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $stack4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $stack6 = staticinvoke <org.jfree.data.json.impl.JSONValue: java.lang.String toJSONString(java.lang.Object)>(value);

        virtualinvoke sb.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke sb.<java.lang.StringBuffer: java.lang.String toString()>();

        return $stack8;
    }

    public java.lang.String toString()
    {
        org.jfree.data.json.impl.JSONObject this;
        java.lang.String $stack1;

        this := @this: org.jfree.data.json.impl.JSONObject;

        $stack1 = virtualinvoke this.<org.jfree.data.json.impl.JSONObject: java.lang.String toJSONString()>();

        return $stack1;
    }

    public static java.lang.String toString(java.lang.String, java.lang.Object)
    {
        java.lang.StringBuffer $stack3;
        java.lang.String key, $stack5;
        java.lang.Object value;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.Object;

        $stack3 = new java.lang.StringBuffer;

        specialinvoke $stack3.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <org.jfree.data.json.impl.JSONObject: java.lang.String toJSONString(java.lang.String,java.lang.Object,java.lang.StringBuffer)>(key, value, $stack3);

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $stack5;
    }

    public static void <clinit>()
    {
        <org.jfree.data.json.impl.JSONObject: long serialVersionUID> = -503443796854799292L;

        return;
    }
}
