public class org.jfree.chart.renderer.category.MinMaxCategoryRenderer extends org.jfree.chart.renderer.category.AbstractCategoryItemRenderer
{
    private static final long serialVersionUID;
    private boolean plotLines;
    private transient java.awt.Paint groupPaint;
    private transient java.awt.Stroke groupStroke;
    private transient javax.swing.Icon minIcon;
    private transient javax.swing.Icon maxIcon;
    private transient javax.swing.Icon objectIcon;
    private int lastCategory;
    private double min;
    private double max;

    public void <init>()
    {
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        java.awt.Color $stack1, $stack4, $stack7;
        java.awt.BasicStroke $stack2;
        java.awt.geom.Arc2D$Double $stack3, $stack6;
        javax.swing.Icon $stack5, $stack8, $stack10;
        java.awt.geom.Line2D$Double $stack9;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        specialinvoke this.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void <init>()>();

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines> = 0;

        $stack1 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint groupPaint> = $stack1;

        $stack2 = new java.awt.BasicStroke;

        specialinvoke $stack2.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke groupStroke> = $stack2;

        $stack3 = new java.awt.geom.Arc2D$Double;

        specialinvoke $stack3.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(-4.0, -4.0, 8.0, 8.0, 0.0, 360.0, 0);

        $stack4 = <java.awt.Color: java.awt.Color BLACK>;

        $stack5 = specialinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon getIcon(java.awt.Shape,java.awt.Paint,java.awt.Paint)>($stack3, null, $stack4);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon minIcon> = $stack5;

        $stack6 = new java.awt.geom.Arc2D$Double;

        specialinvoke $stack6.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(-4.0, -4.0, 8.0, 8.0, 0.0, 360.0, 0);

        $stack7 = <java.awt.Color: java.awt.Color BLACK>;

        $stack8 = specialinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon getIcon(java.awt.Shape,java.awt.Paint,java.awt.Paint)>($stack6, null, $stack7);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon maxIcon> = $stack8;

        $stack9 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack9.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(-4.0, 0.0, 4.0, 0.0);

        $stack10 = specialinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon getIcon(java.awt.Shape,boolean,boolean)>($stack9, 0, 1);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon objectIcon> = $stack10;

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory> = -1;

        return;
    }

    public boolean isDrawLines()
    {
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines>;

        return $stack1;
    }

    public void setDrawLines(boolean)
    {
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        boolean draw, $stack2;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        draw := @parameter0: boolean;

        $stack2 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines>;

        if $stack2 == draw goto label1;

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines> = draw;

        virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: void fireChangeEvent()>();

     label1:
        return;
    }

    public java.awt.Paint getGroupPaint()
    {
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint groupPaint>;

        return $stack1;
    }

    public void setGroupPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint groupPaint> = paint;

        virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Stroke getGroupStroke()
    {
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke groupStroke>;

        return $stack1;
    }

    public void setGroupStroke(java.awt.Stroke)
    {
        java.awt.Stroke stroke;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        stroke := @parameter0: java.awt.Stroke;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(stroke, "stroke");

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke groupStroke> = stroke;

        virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: void fireChangeEvent()>();

        return;
    }

    public javax.swing.Icon getObjectIcon()
    {
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        javax.swing.Icon $stack1;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon objectIcon>;

        return $stack1;
    }

    public void setObjectIcon(javax.swing.Icon)
    {
        javax.swing.Icon icon;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        icon := @parameter0: javax.swing.Icon;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(icon, "icon");

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon objectIcon> = icon;

        virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: void fireChangeEvent()>();

        return;
    }

    public javax.swing.Icon getMaxIcon()
    {
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        javax.swing.Icon $stack1;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon maxIcon>;

        return $stack1;
    }

    public void setMaxIcon(javax.swing.Icon)
    {
        javax.swing.Icon icon;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        icon := @parameter0: javax.swing.Icon;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(icon, "icon");

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon maxIcon> = icon;

        virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: void fireChangeEvent()>();

        return;
    }

    public javax.swing.Icon getMinIcon()
    {
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        javax.swing.Icon $stack1;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon minIcon>;

        return $stack1;
    }

    public void setMinIcon(javax.swing.Icon)
    {
        javax.swing.Icon icon;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        icon := @parameter0: javax.swing.Icon;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(icon, "icon");

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon minIcon> = icon;

        virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: void fireChangeEvent()>();

        return;
    }

    public void drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset, int, int, int)
    {
        org.jfree.data.category.CategoryDataset dataset;
        int row, column, $stack27, $stack40, $stack41, $stack43, $stack50, $stack53, $stack54, $stack72, $stack73, $stack85, $stack86, $stack88, $stack89, $stack92, $stack93, $stack95, $stack96, $stack105, $stack106, pass;
        java.lang.Number value, minY#6;
        org.jfree.chart.axis.CategoryAxis domainAxis;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.plot.CategoryPlot plot;
        org.jfree.chart.ui.RectangleEdge $stack28, $stack31, $stack55, $stack57, $stack78, $stack81;
        double x1, $stack30, y1, $stack34, $stack35, $stack44, $stack45, previous, x0, y0, $stack66, $stack67, $stack69, $stack70, $stack77, $stack80, maxY, $stack98, $stack102, minY;
        org.jfree.chart.axis.ValueAxis rangeAxis;
        java.awt.geom.Rectangle2D$Double $stack33;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack36, $stack59, $stack75;
        java.awt.Stroke $stack37, $stack60, $stack76;
        org.jfree.chart.plot.PlotOrientation orient, $stack39, $stack61, $stack83;
        javax.swing.Icon $stack42, $stack87, $stack90, $stack94, $stack97, $stack107;
        org.jfree.chart.renderer.category.CategoryItemRendererState state;
        java.awt.geom.Line2D$Double $stack62, $stack63, $stack84, $stack91, line;
        byte $stack68, $stack71;
        boolean $stack46;
        org.jfree.chart.entity.EntityCollection minY#16;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        state := @parameter1: org.jfree.chart.renderer.category.CategoryItemRendererState;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        plot := @parameter3: org.jfree.chart.plot.CategoryPlot;

        domainAxis := @parameter4: org.jfree.chart.axis.CategoryAxis;

        rangeAxis := @parameter5: org.jfree.chart.axis.ValueAxis;

        dataset := @parameter6: org.jfree.data.category.CategoryDataset;

        row := @parameter7: int;

        column := @parameter8: int;

        pass := @parameter9: int;

        value = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(row, column);

        if value == null goto label12;

        $stack27 = virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int getColumnCount()>();

        $stack28 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        x1 = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(column, $stack27, dataArea, $stack28);

        $stack30 = virtualinvoke value.<java.lang.Number: double doubleValue()>();

        $stack31 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        y1 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack30, dataArea, $stack31);

        $stack33 = new java.awt.geom.Rectangle2D$Double;

        $stack35 = x1 - 4.0;

        $stack34 = y1 - 4.0;

        specialinvoke $stack33.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($stack35, $stack34, 8.0, 8.0);

        $stack36 = virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint getItemPaint(int,int)>(row, column);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack36);

        $stack37 = virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke getItemStroke(int,int)>(row, column);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack37);

        orient = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack39 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orient != $stack39 goto label01;

        $stack107 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon objectIcon>;

        $stack106 = (int) x1;

        $stack105 = (int) y1;

        interfaceinvoke $stack107.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(null, g2, $stack106, $stack105);

        goto label02;

     label01:
        $stack42 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon objectIcon>;

        $stack41 = (int) y1;

        $stack40 = (int) x1;

        interfaceinvoke $stack42.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(null, g2, $stack41, $stack40);

     label02:
        $stack43 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory>;

        if $stack43 != column goto label07;

        $stack66 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double min>;

        $stack67 = virtualinvoke value.<java.lang.Number: double doubleValue()>();

        $stack68 = $stack66 cmpl $stack67;

        if $stack68 <= 0 goto label03;

        $stack102 = virtualinvoke value.<java.lang.Number: double doubleValue()>();

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double min> = $stack102;

     label03:
        $stack69 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double max>;

        $stack70 = virtualinvoke value.<java.lang.Number: double doubleValue()>();

        $stack71 = $stack69 cmpg $stack70;

        if $stack71 >= 0 goto label04;

        $stack98 = virtualinvoke value.<java.lang.Number: double doubleValue()>();

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double max> = $stack98;

     label04:
        $stack72 = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: int getRowCount()>();

        $stack73 = $stack72 - 1;

        if $stack73 != row goto label08;

        $stack75 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint groupPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack75);

        $stack76 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke groupStroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack76);

        $stack77 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double min>;

        $stack78 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        minY = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack77, dataArea, $stack78);

        $stack80 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double max>;

        $stack81 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        maxY = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack80, dataArea, $stack81);

        $stack83 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orient != $stack83 goto label05;

        $stack91 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack91.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(x1, minY, x1, maxY);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack91);

        $stack94 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon minIcon>;

        $stack93 = (int) x1;

        $stack92 = (int) minY;

        interfaceinvoke $stack94.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(null, g2, $stack93, $stack92);

        $stack97 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon maxIcon>;

        $stack96 = (int) x1;

        $stack95 = (int) maxY;

        interfaceinvoke $stack97.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(null, g2, $stack96, $stack95);

        goto label06;

     label05:
        $stack84 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack84.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(minY, x1, maxY, x1);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack84);

        $stack87 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon minIcon>;

        $stack86 = (int) minY;

        $stack85 = (int) x1;

        interfaceinvoke $stack87.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(null, g2, $stack86, $stack85);

        $stack90 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon maxIcon>;

        $stack89 = (int) maxY;

        $stack88 = (int) x1;

        interfaceinvoke $stack90.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(null, g2, $stack89, $stack88);

     label06:
        goto label08;

     label07:
        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int lastCategory> = column;

        $stack44 = virtualinvoke value.<java.lang.Number: double doubleValue()>();

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double min> = $stack44;

        $stack45 = virtualinvoke value.<java.lang.Number: double doubleValue()>();

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: double max> = $stack45;

     label08:
        $stack46 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines>;

        if $stack46 == 0 goto label11;

        if column == 0 goto label11;

        $stack50 = column - 1;

        minY#6 = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(row, $stack50);

        if minY#6 == null goto label11;

        previous = virtualinvoke minY#6.<java.lang.Number: double doubleValue()>();

        $stack53 = column - 1;

        $stack54 = virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: int getColumnCount()>();

        $stack55 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        x0 = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack53, $stack54, dataArea, $stack55);

        $stack57 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        y0 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(previous, dataArea, $stack57);

        $stack59 = virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint getItemPaint(int,int)>(row, column);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack59);

        $stack60 = virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke getItemStroke(int,int)>(row, column);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack60);

        $stack61 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orient != $stack61 goto label09;

        $stack63 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack63.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(x0, y0, x1, y1);

        line = $stack63;

        goto label10;

     label09:
        $stack62 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack62.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(y0, x0, y1, x1);

        line = $stack62;

     label10:
        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(line);

     label11:
        minY#16 = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

        if minY#16 == null goto label12;

        virtualinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: void addItemEntity(org.jfree.chart.entity.EntityCollection,org.jfree.data.category.CategoryDataset,int,int,java.awt.Shape)>(minY#16, dataset, row, column, $stack33);

     label12:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this, that;
        boolean $stack3, $stack4, $stack5, $stack8, $stack11, $stack12;
        java.awt.Paint $stack6, $stack7;
        java.awt.Stroke $stack9, $stack10;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.renderer.category.MinMaxCategoryRenderer) obj;

        $stack5 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines>;

        $stack4 = that.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: boolean plotLines>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint groupPaint>;

        $stack6 = that.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint groupPaint>;

        $stack8 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack7, $stack6);

        if $stack8 != 0 goto label4;

        return 0;

     label4:
        $stack10 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke groupStroke>;

        $stack9 = that.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke groupStroke>;

        $stack11 = virtualinvoke $stack10.<java.lang.Object: boolean equals(java.lang.Object)>($stack9);

        if $stack11 != 0 goto label5;

        return 0;

     label5:
        $stack12 = specialinvoke this.<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: boolean equals(java.lang.Object)>(obj);

        return $stack12;
    }

    private javax.swing.Icon getIcon(java.awt.Shape, java.awt.Paint, java.awt.Paint)
    {
        java.awt.Shape shape;
        java.awt.Rectangle $stack7, $stack8;
        int width, height;
        java.awt.geom.GeneralPath $stack9;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1 $stack10;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        java.awt.Paint fillPaint, outlinePaint;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        shape := @parameter0: java.awt.Shape;

        fillPaint := @parameter1: java.awt.Paint;

        outlinePaint := @parameter2: java.awt.Paint;

        $stack7 = interfaceinvoke shape.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        width = $stack7.<java.awt.Rectangle: int width>;

        $stack8 = interfaceinvoke shape.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        height = $stack8.<java.awt.Rectangle: int height>;

        $stack9 = new java.awt.geom.GeneralPath;

        specialinvoke $stack9.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(shape);

        $stack10 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1;

        specialinvoke $stack10.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$1: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,java.awt.Paint,java.awt.Paint,int,int)>(this, $stack9, fillPaint, outlinePaint, width, height);

        return $stack10;
    }

    private javax.swing.Icon getIcon(java.awt.Shape, boolean, boolean)
    {
        java.awt.Shape shape;
        java.awt.Rectangle $stack7, $stack8;
        int width, height;
        java.awt.geom.GeneralPath $stack9;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2 $stack10;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        boolean fill, outline;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        shape := @parameter0: java.awt.Shape;

        fill := @parameter1: boolean;

        outline := @parameter2: boolean;

        $stack7 = interfaceinvoke shape.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        width = $stack7.<java.awt.Rectangle: int width>;

        $stack8 = interfaceinvoke shape.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        height = $stack8.<java.awt.Rectangle: int height>;

        $stack9 = new java.awt.geom.GeneralPath;

        specialinvoke $stack9.<java.awt.geom.GeneralPath: void <init>(java.awt.Shape)>(shape);

        $stack10 = new org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2;

        specialinvoke $stack10.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2: void <init>(org.jfree.chart.renderer.category.MinMaxCategoryRenderer,java.awt.geom.GeneralPath,boolean,boolean,int,int)>(this, $stack9, fill, outline, width, height);

        return $stack10;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        java.awt.Stroke $stack2;
        java.awt.Paint $stack3;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke groupStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint groupPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.renderer.category.MinMaxCategoryRenderer this;
        java.awt.Stroke $stack2;
        java.awt.Paint $stack3;
        java.awt.geom.Arc2D$Double $stack4, $stack7;
        java.awt.Color $stack5, $stack8;
        javax.swing.Icon $stack6, $stack9, $stack11;
        java.awt.geom.Line2D$Double $stack10;

        this := @this: org.jfree.chart.renderer.category.MinMaxCategoryRenderer;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Stroke groupStroke> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: java.awt.Paint groupPaint> = $stack3;

        $stack4 = new java.awt.geom.Arc2D$Double;

        specialinvoke $stack4.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(-4.0, -4.0, 8.0, 8.0, 0.0, 360.0, 0);

        $stack5 = <java.awt.Color: java.awt.Color BLACK>;

        $stack6 = specialinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon getIcon(java.awt.Shape,java.awt.Paint,java.awt.Paint)>($stack4, null, $stack5);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon minIcon> = $stack6;

        $stack7 = new java.awt.geom.Arc2D$Double;

        specialinvoke $stack7.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(-4.0, -4.0, 8.0, 8.0, 0.0, 360.0, 0);

        $stack8 = <java.awt.Color: java.awt.Color BLACK>;

        $stack9 = specialinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon getIcon(java.awt.Shape,java.awt.Paint,java.awt.Paint)>($stack7, null, $stack8);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon maxIcon> = $stack9;

        $stack10 = new java.awt.geom.Line2D$Double;

        specialinvoke $stack10.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(-4.0, 0.0, 4.0, 0.0);

        $stack11 = specialinvoke this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon getIcon(java.awt.Shape,boolean,boolean)>($stack10, 0, 1);

        this.<org.jfree.chart.renderer.category.MinMaxCategoryRenderer: javax.swing.Icon objectIcon> = $stack11;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.renderer.category.MinMaxCategoryRenderer: long serialVersionUID> = 2935615937671064911L;

        return;
    }
}
