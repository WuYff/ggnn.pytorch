public class org.jfree.chart.plot.dial.DialCap extends org.jfree.chart.plot.dial.AbstractDialLayer implements org.jfree.chart.plot.dial.DialLayer, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    static final long serialVersionUID;
    private double radius;
    private transient java.awt.Paint fillPaint;
    private transient java.awt.Paint outlinePaint;
    private transient java.awt.Stroke outlineStroke;

    public void <init>()
    {
        org.jfree.chart.plot.dial.DialCap this;
        java.awt.Color $stack1, $stack2;
        java.awt.BasicStroke $stack3;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: void <init>()>();

        this.<org.jfree.chart.plot.dial.DialCap: double radius> = 0.05;

        $stack1 = <java.awt.Color: java.awt.Color WHITE>;

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint> = $stack1;

        $stack2 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint> = $stack2;

        $stack3 = new java.awt.BasicStroke;

        specialinvoke $stack3.<java.awt.BasicStroke: void <init>(float)>(2.0F);

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke> = $stack3;

        return;
    }

    public double getRadius()
    {
        org.jfree.chart.plot.dial.DialCap this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        $stack1 = this.<org.jfree.chart.plot.dial.DialCap: double radius>;

        return $stack1;
    }

    public void setRadius(double)
    {
        double radius;
        byte $stack3;
        org.jfree.chart.plot.dial.DialCap this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack4;
        java.lang.IllegalArgumentException $stack5;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        radius := @parameter0: double;

        $stack3 = radius cmpg 0.0;

        if $stack3 > 0 goto label1;

        $stack5 = new java.lang.IllegalArgumentException;

        specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires radius > 0.0.");

        throw $stack5;

     label1:
        this.<org.jfree.chart.plot.dial.DialCap: double radius> = radius;

        $stack4 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.DialCap: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack4);

        return;
    }

    public java.awt.Paint getFillPaint()
    {
        org.jfree.chart.plot.dial.DialCap this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        $stack1 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint>;

        return $stack1;
    }

    public void setFillPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.DialCap this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.DialCap: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Paint getOutlinePaint()
    {
        org.jfree.chart.plot.dial.DialCap this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        $stack1 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint>;

        return $stack1;
    }

    public void setOutlinePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.DialCap this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.DialCap: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Stroke getOutlineStroke()
    {
        org.jfree.chart.plot.dial.DialCap this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        $stack1 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke>;

        return $stack1;
    }

    public void setOutlineStroke(java.awt.Stroke)
    {
        java.awt.Stroke stroke;
        org.jfree.chart.plot.dial.DialCap this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        stroke := @parameter0: java.awt.Stroke;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(stroke, "stroke");

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke> = stroke;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.DialCap: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public boolean isClippedToWindow()
    {
        org.jfree.chart.plot.dial.DialCap this;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        return 1;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.dial.DialPlot, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D)
    {
        java.awt.Graphics2D g2;
        org.jfree.chart.plot.dial.DialCap this;
        java.awt.Paint $stack7, $stack16;
        java.awt.geom.Rectangle2D frame, f, view;
        double $stack8, $stack9, $stack12, $stack13, $stack14, $stack15;
        java.awt.geom.Ellipse2D$Double $stack11;
        java.awt.Stroke $stack17;
        org.jfree.chart.plot.dial.DialPlot plot;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.dial.DialPlot;

        frame := @parameter2: java.awt.geom.Rectangle2D;

        view := @parameter3: java.awt.geom.Rectangle2D;

        $stack7 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack7);

        $stack9 = this.<org.jfree.chart.plot.dial.DialCap: double radius>;

        $stack8 = this.<org.jfree.chart.plot.dial.DialCap: double radius>;

        f = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack9, $stack8);

        $stack11 = new java.awt.geom.Ellipse2D$Double;

        $stack12 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getX()>();

        $stack13 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getY()>();

        $stack14 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack15 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getHeight()>();

        specialinvoke $stack11.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($stack12, $stack13, $stack14, $stack15);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack11);

        $stack16 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack16);

        $stack17 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack17);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack11);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.plot.dial.DialCap this, that;
        boolean $stack3, $stack9, $stack12, $stack15, $stack16;
        double $stack4, $stack5;
        byte $stack6;
        java.awt.Paint $stack7, $stack8, $stack10, $stack11;
        java.awt.Stroke $stack13, $stack14;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.plot.dial.DialCap;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.plot.dial.DialCap) obj;

        $stack5 = this.<org.jfree.chart.plot.dial.DialCap: double radius>;

        $stack4 = that.<org.jfree.chart.plot.dial.DialCap: double radius>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint>;

        $stack7 = that.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint>;

        $stack9 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint>;

        $stack10 = that.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint>;

        $stack12 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack11, $stack10);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack14 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke>;

        $stack13 = that.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke>;

        $stack15 = virtualinvoke $stack14.<java.lang.Object: boolean equals(java.lang.Object)>($stack13);

        if $stack15 != 0 goto label6;

        return 0;

     label6:
        $stack16 = specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: boolean equals(java.lang.Object)>(obj);

        return $stack16;
    }

    public int hashCode()
    {
        org.jfree.chart.plot.dial.DialCap this;
        java.awt.Paint $stack2, $stack5;
        int $stack3, $stack4, $stack6, $stack7, $stack9, $stack10, result#2;
        java.awt.Stroke $stack8;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        $stack3 = 37 * 193;

        $stack2 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint>;

        $stack4 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack2);

        result#2 = $stack3 + $stack4;

        $stack6 = 37 * result#2;

        $stack5 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint>;

        $stack7 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack5);

        result#2 = $stack6 + $stack7;

        $stack9 = 37 * result#2;

        $stack8 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke>;

        $stack10 = virtualinvoke $stack8.<java.lang.Object: int hashCode()>();

        result#2 = $stack9 + $stack10;

        return result#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.plot.dial.DialCap this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        $stack1 = specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.plot.dial.DialCap this;
        java.awt.Paint $stack2, $stack3;
        java.awt.Stroke $stack4;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack4, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.plot.dial.DialCap this;
        java.awt.Paint $stack2, $stack3;
        java.awt.Stroke $stack4;

        this := @this: org.jfree.chart.plot.dial.DialCap;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint fillPaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Paint outlinePaint> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.DialCap: java.awt.Stroke outlineStroke> = $stack4;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.plot.dial.DialCap: long serialVersionUID> = -2929484264982524463L;

        return;
    }
}
