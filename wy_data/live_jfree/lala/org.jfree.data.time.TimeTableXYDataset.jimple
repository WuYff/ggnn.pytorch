public class org.jfree.data.time.TimeTableXYDataset extends org.jfree.data.xy.AbstractIntervalXYDataset implements java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, org.jfree.data.xy.IntervalXYDataset, org.jfree.data.DomainInfo, org.jfree.data.xy.TableXYDataset
{
    private org.jfree.data.DefaultKeyedValues2D values;
    private boolean domainIsPointsInTime;
    private org.jfree.data.time.TimePeriodAnchor xPosition;
    private java.util.Calendar workingCalendar;

    public void <init>()
    {
        org.jfree.data.time.TimeTableXYDataset this;
        java.util.TimeZone $stack1;
        java.util.Locale $stack2;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        $stack1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $stack2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke this.<org.jfree.data.time.TimeTableXYDataset: void <init>(java.util.TimeZone,java.util.Locale)>($stack1, $stack2);

        return;
    }

    public void <init>(java.util.TimeZone)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        java.util.TimeZone zone;
        java.util.Locale $stack2;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        zone := @parameter0: java.util.TimeZone;

        $stack2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke this.<org.jfree.data.time.TimeTableXYDataset: void <init>(java.util.TimeZone,java.util.Locale)>(zone, $stack2);

        return;
    }

    public void <init>(java.util.TimeZone, java.util.Locale)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        java.util.TimeZone zone;
        java.util.Locale locale;
        org.jfree.data.DefaultKeyedValues2D $stack3;
        java.util.Calendar $stack4;
        org.jfree.data.time.TimePeriodAnchor $stack5;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        zone := @parameter0: java.util.TimeZone;

        locale := @parameter1: java.util.Locale;

        specialinvoke this.<org.jfree.data.xy.AbstractIntervalXYDataset: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(zone, "zone");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(locale, "locale");

        $stack3 = new org.jfree.data.DefaultKeyedValues2D;

        specialinvoke $stack3.<org.jfree.data.DefaultKeyedValues2D: void <init>(boolean)>(1);

        this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> = $stack3;

        $stack4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>(zone, locale);

        this.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar> = $stack4;

        $stack5 = <org.jfree.data.time.TimePeriodAnchor: org.jfree.data.time.TimePeriodAnchor START>;

        this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition> = $stack5;

        return;
    }

    public boolean getDomainIsPointsInTime()
    {
        org.jfree.data.time.TimeTableXYDataset this;
        boolean $stack1;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        $stack1 = this.<org.jfree.data.time.TimeTableXYDataset: boolean domainIsPointsInTime>;

        return $stack1;
    }

    public void setDomainIsPointsInTime(boolean)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        boolean flag;
        org.jfree.data.general.DatasetChangeEvent $stack2;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        flag := @parameter0: boolean;

        this.<org.jfree.data.time.TimeTableXYDataset: boolean domainIsPointsInTime> = flag;

        $stack2 = new org.jfree.data.general.DatasetChangeEvent;

        specialinvoke $stack2.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(this, this);

        virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($stack2);

        return;
    }

    public org.jfree.data.time.TimePeriodAnchor getXPosition()
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.time.TimePeriodAnchor $stack1;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        $stack1 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>;

        return $stack1;
    }

    public void setXPosition(org.jfree.data.time.TimePeriodAnchor)
    {
        org.jfree.data.time.TimePeriodAnchor anchor;
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.general.DatasetChangeEvent $stack2;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        anchor := @parameter0: org.jfree.data.time.TimePeriodAnchor;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(anchor, "anchor");

        this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition> = anchor;

        $stack2 = new org.jfree.data.general.DatasetChangeEvent;

        specialinvoke $stack2.<org.jfree.data.general.DatasetChangeEvent: void <init>(java.lang.Object,org.jfree.data.general.Dataset)>(this, this);

        virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: void notifyListeners(org.jfree.data.general.DatasetChangeEvent)>($stack2);

        return;
    }

    public void add(org.jfree.data.time.TimePeriod, double, java.lang.Comparable)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.time.TimePeriod period;
        java.lang.Double $stack5;
        double y;
        java.lang.Comparable seriesName;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        period := @parameter0: org.jfree.data.time.TimePeriod;

        y := @parameter1: double;

        seriesName := @parameter2: java.lang.Comparable;

        $stack5 = new java.lang.Double;

        specialinvoke $stack5.<java.lang.Double: void <init>(double)>(y);

        virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: void add(org.jfree.data.time.TimePeriod,java.lang.Number,java.lang.Comparable,boolean)>(period, $stack5, seriesName, 1);

        return;
    }

    public void add(org.jfree.data.time.TimePeriod, java.lang.Number, java.lang.Comparable, boolean)
    {
        org.jfree.data.time.TimePeriod period;
        boolean $stack6, notify;
        org.jfree.data.time.TimeTableXYDataset this;
        java.lang.Number y;
        java.lang.Comparable seriesName;
        org.jfree.data.DefaultKeyedValues2D $stack7;
        org.jfree.data.time.RegularTimePeriod p;
        java.util.Calendar $stack8;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        period := @parameter0: org.jfree.data.time.TimePeriod;

        y := @parameter1: java.lang.Number;

        seriesName := @parameter2: java.lang.Comparable;

        notify := @parameter3: boolean;

        $stack6 = period instanceof org.jfree.data.time.RegularTimePeriod;

        if $stack6 == 0 goto label1;

        p = (org.jfree.data.time.RegularTimePeriod) period;

        $stack8 = this.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>;

        virtualinvoke p.<org.jfree.data.time.RegularTimePeriod: void peg(java.util.Calendar)>($stack8);

     label1:
        $stack7 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        virtualinvoke $stack7.<org.jfree.data.DefaultKeyedValues2D: void addValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>(y, period, seriesName);

        if notify == 0 goto label2;

        virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: void fireDatasetChanged()>();

     label2:
        return;
    }

    public void remove(org.jfree.data.time.TimePeriod, java.lang.Comparable)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.time.TimePeriod period;
        java.lang.Comparable seriesName;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        period := @parameter0: org.jfree.data.time.TimePeriod;

        seriesName := @parameter1: java.lang.Comparable;

        virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: void remove(org.jfree.data.time.TimePeriod,java.lang.Comparable,boolean)>(period, seriesName, 1);

        return;
    }

    public void remove(org.jfree.data.time.TimePeriod, java.lang.Comparable, boolean)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.time.TimePeriod period;
        java.lang.Comparable seriesName;
        org.jfree.data.DefaultKeyedValues2D $stack4;
        boolean notify;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        period := @parameter0: org.jfree.data.time.TimePeriod;

        seriesName := @parameter1: java.lang.Comparable;

        notify := @parameter2: boolean;

        $stack4 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        virtualinvoke $stack4.<org.jfree.data.DefaultKeyedValues2D: void removeValue(java.lang.Comparable,java.lang.Comparable)>(period, seriesName);

        if notify == 0 goto label1;

        virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: void fireDatasetChanged()>();

     label1:
        return;
    }

    public void clear()
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.DefaultKeyedValues2D $stack1, $stack3;
        int $stack2;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        $stack1 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack2 = virtualinvoke $stack1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>();

        if $stack2 <= 0 goto label1;

        $stack3 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        virtualinvoke $stack3.<org.jfree.data.DefaultKeyedValues2D: void clear()>();

        virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: void fireDatasetChanged()>();

     label1:
        return;
    }

    public org.jfree.data.time.TimePeriod getTimePeriod(int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int item;
        org.jfree.data.DefaultKeyedValues2D $stack2;
        java.lang.Comparable $stack3;
        org.jfree.data.time.TimePeriod $stack4;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        item := @parameter0: int;

        $stack2 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack3 = virtualinvoke $stack2.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(item);

        $stack4 = (org.jfree.data.time.TimePeriod) $stack3;

        return $stack4;
    }

    public int getItemCount()
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.DefaultKeyedValues2D $stack1;
        int $stack2;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        $stack1 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack2 = virtualinvoke $stack1.<org.jfree.data.DefaultKeyedValues2D: int getRowCount()>();

        return $stack2;
    }

    public int getItemCount(int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int $stack2, series;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        $stack2 = virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: int getItemCount()>();

        return $stack2;
    }

    public int getSeriesCount()
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.DefaultKeyedValues2D $stack1;
        int $stack2;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        $stack1 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack2 = virtualinvoke $stack1.<org.jfree.data.DefaultKeyedValues2D: int getColumnCount()>();

        return $stack2;
    }

    public java.lang.Comparable getSeriesKey(int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int series;
        org.jfree.data.DefaultKeyedValues2D $stack2;
        java.lang.Comparable $stack3;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        $stack2 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack3 = virtualinvoke $stack2.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getColumnKey(int)>(series);

        return $stack3;
    }

    public java.lang.Number getX(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.time.TimeTableXYDataset this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: double getXValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public double getXValue(int, int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int item, series;
        org.jfree.data.DefaultKeyedValues2D $stack4;
        java.lang.Comparable $stack5;
        org.jfree.data.time.TimePeriod period;
        long $stack6;
        double $stack7;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack5 = virtualinvoke $stack4.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(item);

        period = (org.jfree.data.time.TimePeriod) $stack5;

        $stack6 = specialinvoke this.<org.jfree.data.time.TimeTableXYDataset: long getXValue(org.jfree.data.time.TimePeriod)>(period);

        $stack7 = (double) $stack6;

        return $stack7;
    }

    public java.lang.Number getStartX(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.time.TimeTableXYDataset this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: double getStartXValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public double getStartXValue(int, int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int item, series;
        org.jfree.data.DefaultKeyedValues2D $stack4;
        java.lang.Comparable $stack5;
        org.jfree.data.time.TimePeriod period;
        java.util.Date $stack6;
        long $stack7;
        double $stack8;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack5 = virtualinvoke $stack4.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(item);

        period = (org.jfree.data.time.TimePeriod) $stack5;

        $stack6 = interfaceinvoke period.<org.jfree.data.time.TimePeriod: java.util.Date getStart()>();

        $stack7 = virtualinvoke $stack6.<java.util.Date: long getTime()>();

        $stack8 = (double) $stack7;

        return $stack8;
    }

    public java.lang.Number getEndX(int, int)
    {
        java.lang.Double $stack3;
        org.jfree.data.time.TimeTableXYDataset this;
        int series, item;
        double $stack4;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Double;

        $stack4 = virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: double getEndXValue(int,int)>(series, item);

        specialinvoke $stack3.<java.lang.Double: void <init>(double)>($stack4);

        return $stack3;
    }

    public double getEndXValue(int, int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int item, series;
        org.jfree.data.DefaultKeyedValues2D $stack4;
        java.lang.Comparable $stack5;
        org.jfree.data.time.TimePeriod period;
        java.util.Date $stack6;
        long $stack7;
        double $stack8;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack4 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack5 = virtualinvoke $stack4.<org.jfree.data.DefaultKeyedValues2D: java.lang.Comparable getRowKey(int)>(item);

        period = (org.jfree.data.time.TimePeriod) $stack5;

        $stack6 = interfaceinvoke period.<org.jfree.data.time.TimePeriod: java.util.Date getEnd()>();

        $stack7 = virtualinvoke $stack6.<java.util.Date: long getTime()>();

        $stack8 = (double) $stack7;

        return $stack8;
    }

    public java.lang.Number getY(int, int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int item, series;
        org.jfree.data.DefaultKeyedValues2D $stack3;
        java.lang.Number $stack4;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack4 = virtualinvoke $stack3.<org.jfree.data.DefaultKeyedValues2D: java.lang.Number getValue(int,int)>(item, series);

        return $stack4;
    }

    public java.lang.Number getStartY(int, int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int series, item;
        java.lang.Number $stack3;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: java.lang.Number getY(int,int)>(series, item);

        return $stack3;
    }

    public java.lang.Number getEndY(int, int)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        int series, item;
        java.lang.Number $stack3;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: java.lang.Number getY(int,int)>(series, item);

        return $stack3;
    }

    private long getXValue(org.jfree.data.time.TimePeriod)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.time.TimePeriodAnchor $stack8, $stack9, $stack10, $stack11, $stack12, $stack13;
        org.jfree.data.time.TimePeriod period;
        java.util.Date $stack14, $stack17, $stack19, $stack23;
        long t0, t1, $stack21, $stack22, result;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        period := @parameter0: org.jfree.data.time.TimePeriod;

        result = 0L;

        $stack9 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack8 = <org.jfree.data.time.TimePeriodAnchor: org.jfree.data.time.TimePeriodAnchor START>;

        if $stack9 != $stack8 goto label1;

        $stack23 = interfaceinvoke period.<org.jfree.data.time.TimePeriod: java.util.Date getStart()>();

        result = virtualinvoke $stack23.<java.util.Date: long getTime()>();

        goto label3;

     label1:
        $stack11 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack10 = <org.jfree.data.time.TimePeriodAnchor: org.jfree.data.time.TimePeriodAnchor MIDDLE>;

        if $stack11 != $stack10 goto label2;

        $stack17 = interfaceinvoke period.<org.jfree.data.time.TimePeriod: java.util.Date getStart()>();

        t0 = virtualinvoke $stack17.<java.util.Date: long getTime()>();

        $stack19 = interfaceinvoke period.<org.jfree.data.time.TimePeriod: java.util.Date getEnd()>();

        t1 = virtualinvoke $stack19.<java.util.Date: long getTime()>();

        $stack21 = t1 - t0;

        $stack22 = $stack21 / 2L;

        result = t0 + $stack22;

        goto label3;

     label2:
        $stack13 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack12 = <org.jfree.data.time.TimePeriodAnchor: org.jfree.data.time.TimePeriodAnchor END>;

        if $stack13 != $stack12 goto label3;

        $stack14 = interfaceinvoke period.<org.jfree.data.time.TimePeriod: java.util.Date getEnd()>();

        result = virtualinvoke $stack14.<java.util.Date: long getTime()>();

     label3:
        return result;
    }

    public double getDomainLowerBound(boolean)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        boolean includeInterval;
        org.jfree.data.Range r;
        double result;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        includeInterval := @parameter0: boolean;

        result = #NaN;

        r = virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>(includeInterval);

        if r == null goto label1;

        result = virtualinvoke r.<org.jfree.data.Range: double getLowerBound()>();

     label1:
        return result;
    }

    public double getDomainUpperBound(boolean)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        boolean includeInterval;
        org.jfree.data.Range r;
        double result;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        includeInterval := @parameter0: boolean;

        result = #NaN;

        r = virtualinvoke this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>(includeInterval);

        if r == null goto label1;

        result = virtualinvoke r.<org.jfree.data.Range: double getUpperBound()>();

     label1:
        return result;
    }

    public org.jfree.data.Range getDomainBounds(boolean)
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.DefaultKeyedValues2D $stack5;
        java.util.List keys;
        boolean $stack7, includeInterval, $stack17;
        java.lang.Object $stack8, $stack11;
        org.jfree.data.time.TimePeriod first, last;
        int $stack9, $stack10;
        org.jfree.data.Range $stack12, $stack18;
        long $stack13, $stack15, $stack20, $stack23;
        double $stack14, $stack16, $stack21, $stack24;
        java.util.Date $stack19, $stack22;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        includeInterval := @parameter0: boolean;

        $stack5 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        keys = virtualinvoke $stack5.<org.jfree.data.DefaultKeyedValues2D: java.util.List getRowKeys()>();

        $stack7 = interfaceinvoke keys.<java.util.List: boolean isEmpty()>();

        if $stack7 == 0 goto label1;

        return null;

     label1:
        $stack8 = interfaceinvoke keys.<java.util.List: java.lang.Object get(int)>(0);

        first = (org.jfree.data.time.TimePeriod) $stack8;

        $stack9 = interfaceinvoke keys.<java.util.List: int size()>();

        $stack10 = $stack9 - 1;

        $stack11 = interfaceinvoke keys.<java.util.List: java.lang.Object get(int)>($stack10);

        last = (org.jfree.data.time.TimePeriod) $stack11;

        if includeInterval == 0 goto label2;

        $stack17 = this.<org.jfree.data.time.TimeTableXYDataset: boolean domainIsPointsInTime>;

        if $stack17 == 0 goto label3;

     label2:
        $stack12 = new org.jfree.data.Range;

        $stack13 = specialinvoke this.<org.jfree.data.time.TimeTableXYDataset: long getXValue(org.jfree.data.time.TimePeriod)>(first);

        $stack14 = (double) $stack13;

        $stack15 = specialinvoke this.<org.jfree.data.time.TimeTableXYDataset: long getXValue(org.jfree.data.time.TimePeriod)>(last);

        $stack16 = (double) $stack15;

        specialinvoke $stack12.<org.jfree.data.Range: void <init>(double,double)>($stack14, $stack16);

        return $stack12;

     label3:
        $stack18 = new org.jfree.data.Range;

        $stack19 = interfaceinvoke first.<org.jfree.data.time.TimePeriod: java.util.Date getStart()>();

        $stack20 = virtualinvoke $stack19.<java.util.Date: long getTime()>();

        $stack21 = (double) $stack20;

        $stack22 = interfaceinvoke last.<org.jfree.data.time.TimePeriod: java.util.Date getEnd()>();

        $stack23 = virtualinvoke $stack22.<java.util.Date: long getTime()>();

        $stack24 = (double) $stack23;

        specialinvoke $stack18.<org.jfree.data.Range: void <init>(double,double)>($stack21, $stack24);

        return $stack18;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.data.time.TimeTableXYDataset this, that;
        boolean $stack3, $stack4, $stack5, $stack12, $stack15;
        org.jfree.data.time.TimePeriodAnchor $stack6, $stack7;
        java.util.Calendar $stack8, $stack10;
        java.util.TimeZone $stack9, $stack11;
        org.jfree.data.DefaultKeyedValues2D $stack13, $stack14;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.data.time.TimeTableXYDataset;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.data.time.TimeTableXYDataset) obj;

        $stack5 = this.<org.jfree.data.time.TimeTableXYDataset: boolean domainIsPointsInTime>;

        $stack4 = that.<org.jfree.data.time.TimeTableXYDataset: boolean domainIsPointsInTime>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack6 = that.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>;

        if $stack7 == $stack6 goto label4;

        return 0;

     label4:
        $stack8 = this.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>;

        $stack9 = virtualinvoke $stack8.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $stack10 = that.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>;

        $stack11 = virtualinvoke $stack10.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $stack12 = virtualinvoke $stack9.<java.lang.Object: boolean equals(java.lang.Object)>($stack11);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack14 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack13 = that.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack15 = virtualinvoke $stack14.<org.jfree.data.DefaultKeyedValues2D: boolean equals(java.lang.Object)>($stack13);

        if $stack15 != 0 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.time.TimeTableXYDataset this;
        org.jfree.data.DefaultKeyedValues2D $stack2;
        int $stack3, $stack4, $stack6, $stack8, $stack9, $stack11, $stack12, hash#2;
        boolean $stack5;
        org.jfree.data.time.TimePeriodAnchor $stack7;
        java.util.Calendar $stack10;
        byte $stack13;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        $stack3 = 19 * 7;

        $stack2 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack2);

        hash#2 = $stack3 + $stack4;

        $stack6 = 19 * hash#2;

        $stack5 = this.<org.jfree.data.time.TimeTableXYDataset: boolean domainIsPointsInTime>;

        if $stack5 == 0 goto label1;

        $stack13 = 1;

        goto label2;

     label1:
        $stack13 = 0;

     label2:
        hash#2 = $stack6 + $stack13;

        $stack8 = 19 * hash#2;

        $stack7 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.time.TimePeriodAnchor xPosition>;

        $stack9 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack7);

        hash#2 = $stack8 + $stack9;

        $stack11 = 19 * hash#2;

        $stack10 = this.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>;

        $stack12 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack10);

        hash#2 = $stack11 + $stack12;

        return hash#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.data.time.TimeTableXYDataset this, clone;
        java.lang.Object $stack2, $stack4, $stack7;
        org.jfree.data.DefaultKeyedValues2D $stack3, $stack5;
        java.util.Calendar $stack6, $stack8;

        this := @this: org.jfree.data.time.TimeTableXYDataset;

        $stack2 = specialinvoke this.<org.jfree.data.xy.AbstractIntervalXYDataset: java.lang.Object clone()>();

        clone = (org.jfree.data.time.TimeTableXYDataset) $stack2;

        $stack3 = this.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values>;

        $stack4 = virtualinvoke $stack3.<org.jfree.data.DefaultKeyedValues2D: java.lang.Object clone()>();

        $stack5 = (org.jfree.data.DefaultKeyedValues2D) $stack4;

        clone.<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.DefaultKeyedValues2D values> = $stack5;

        $stack6 = this.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar>;

        $stack7 = virtualinvoke $stack6.<java.util.Calendar: java.lang.Object clone()>();

        $stack8 = (java.util.Calendar) $stack7;

        clone.<org.jfree.data.time.TimeTableXYDataset: java.util.Calendar workingCalendar> = $stack8;

        return clone;
    }
}
