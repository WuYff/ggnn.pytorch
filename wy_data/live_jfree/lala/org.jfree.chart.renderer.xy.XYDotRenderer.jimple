public class org.jfree.chart.renderer.xy.XYDotRenderer extends org.jfree.chart.renderer.xy.AbstractXYItemRenderer implements org.jfree.chart.renderer.xy.XYItemRenderer, org.jfree.chart.util.PublicCloneable
{
    private static final long serialVersionUID;
    private int dotWidth;
    private int dotHeight;
    private transient java.awt.Shape legendShape;

    public void <init>()
    {
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        java.awt.geom.Rectangle2D$Double $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void <init>()>();

        this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotWidth> = 1;

        this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotHeight> = 1;

        $stack1 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack1.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(-3.0, -3.0, 6.0, 6.0);

        this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Shape legendShape> = $stack1;

        return;
    }

    public int getDotWidth()
    {
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        int $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotWidth>;

        return $stack1;
    }

    public void setDotWidth(int)
    {
        int w;
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        java.lang.IllegalArgumentException $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        w := @parameter0: int;

        if w >= 1 goto label1;

        $stack2 = new java.lang.IllegalArgumentException;

        specialinvoke $stack2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires w > 0.");

        throw $stack2;

     label1:
        this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotWidth> = w;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: void fireChangeEvent()>();

        return;
    }

    public int getDotHeight()
    {
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        int $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotHeight>;

        return $stack1;
    }

    public void setDotHeight(int)
    {
        int h;
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        java.lang.IllegalArgumentException $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        h := @parameter0: int;

        if h >= 1 goto label1;

        $stack2 = new java.lang.IllegalArgumentException;

        specialinvoke $stack2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Requires h > 0.");

        throw $stack2;

     label1:
        this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotHeight> = h;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: void fireChangeEvent()>();

        return;
    }

    public java.awt.Shape getLegendShape()
    {
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        java.awt.Shape $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        $stack1 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Shape legendShape>;

        return $stack1;
    }

    public void setLegendShape(java.awt.Shape)
    {
        java.awt.Shape shape;
        org.jfree.chart.renderer.xy.XYDotRenderer this;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        shape := @parameter0: java.awt.Shape;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(shape, "shape");

        this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Shape legendShape> = shape;

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: void fireChangeEvent()>();

        return;
    }

    public void drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.xy.XYItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.PlotRenderingInfo, org.jfree.chart.plot.XYPlot, org.jfree.chart.axis.ValueAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.xy.XYDataset, int, int, org.jfree.chart.plot.CrosshairState, int)
    {
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        int series, item, $stack32, $stack33, $stack35, $stack36, datasetIndex, $stack48, $stack49, $stack50, $stack51, $stack62, $stack63, $stack64, $stack65, pass;
        boolean $stack29, $stack38;
        org.jfree.data.xy.XYDataset dataset;
        double x, y, $stack34, adjx, $stack37, adjy, $stack41, transX, $stack42, transY;
        org.jfree.chart.plot.XYPlot plot;
        org.jfree.chart.ui.RectangleEdge xAxisLocation, yAxisLocation;
        org.jfree.chart.axis.ValueAxis domainAxis, rangeAxis;
        java.awt.geom.Rectangle2D dataArea;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack43;
        org.jfree.chart.plot.PlotOrientation orientation, $stack45, $stack46;
        org.jfree.chart.plot.CrosshairState crosshairState;
        org.jfree.chart.renderer.xy.XYItemRendererState state;
        org.jfree.chart.plot.PlotRenderingInfo info;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        state := @parameter1: org.jfree.chart.renderer.xy.XYItemRendererState;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        info := @parameter3: org.jfree.chart.plot.PlotRenderingInfo;

        plot := @parameter4: org.jfree.chart.plot.XYPlot;

        domainAxis := @parameter5: org.jfree.chart.axis.ValueAxis;

        rangeAxis := @parameter6: org.jfree.chart.axis.ValueAxis;

        dataset := @parameter7: org.jfree.data.xy.XYDataset;

        series := @parameter8: int;

        item := @parameter9: int;

        crosshairState := @parameter10: org.jfree.chart.plot.CrosshairState;

        pass := @parameter11: int;

        $stack29 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: boolean getItemVisible(int,int)>(series, item);

        if $stack29 != 0 goto label1;

        return;

     label1:
        x = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getXValue(int,int)>(series, item);

        y = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: double getYValue(int,int)>(series, item);

        $stack32 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotWidth>;

        $stack33 = $stack32 - 1;

        $stack34 = (double) $stack33;

        adjx = $stack34 / 2.0;

        $stack35 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotHeight>;

        $stack36 = $stack35 - 1;

        $stack37 = (double) $stack36;

        adjy = $stack37 / 2.0;

        $stack38 = staticinvoke <java.lang.Double: boolean isNaN(double)>(y);

        if $stack38 != 0 goto label4;

        xAxisLocation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        yAxisLocation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        $stack41 = virtualinvoke domainAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(x, dataArea, xAxisLocation);

        transX = $stack41 - adjx;

        $stack42 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(y, dataArea, yAxisLocation);

        transY = $stack42 - adjy;

        $stack43 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Paint getItemPaint(int,int)>(series, item);

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack43);

        orientation = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack45 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack45 goto label2;

        $stack65 = (int) transY;

        $stack64 = (int) transX;

        $stack63 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotHeight>;

        $stack62 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotWidth>;

        virtualinvoke g2.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($stack65, $stack64, $stack63, $stack62);

        goto label3;

     label2:
        $stack46 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack46 goto label3;

        $stack51 = (int) transX;

        $stack50 = (int) transY;

        $stack49 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotWidth>;

        $stack48 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotHeight>;

        virtualinvoke g2.<java.awt.Graphics2D: void fillRect(int,int,int,int)>($stack51, $stack50, $stack49, $stack48);

     label3:
        datasetIndex = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: int indexOf(org.jfree.data.xy.XYDataset)>(dataset);

        virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: void updateCrosshairValues(org.jfree.chart.plot.CrosshairState,double,double,int,double,double,org.jfree.chart.plot.PlotOrientation)>(crosshairState, x, y, datasetIndex, transX, transY, orientation);

     label4:
        return;
    }

    public org.jfree.chart.LegendItem getLegendItem(int, int)
    {
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        org.jfree.chart.plot.XYPlot plot;
        int datasetIndex, series;
        org.jfree.data.xy.XYDataset dataset;
        boolean $stack14;
        org.jfree.chart.labels.XYSeriesLabelGenerator $stack15, $stack17, $stack18, $stack35, $stack51;
        java.lang.String label, toolTipText, urlText;
        java.awt.Paint fillPaint, labelPaint;
        org.jfree.chart.LegendItem $stack20, result;
        java.awt.Shape $stack21;
        java.awt.Font $stack22;
        java.lang.Comparable $stack24;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        datasetIndex := @parameter0: int;

        series := @parameter1: int;

        plot = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.plot.XYPlot getPlot()>();

        if plot != null goto label1;

        return null;

     label1:
        dataset = virtualinvoke plot.<org.jfree.chart.plot.XYPlot: org.jfree.data.xy.XYDataset getDataset(int)>(datasetIndex);

        if dataset != null goto label2;

        return null;

     label2:
        result = null;

        $stack14 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: boolean getItemVisible(int,int)>(series, 0);

        if $stack14 == 0 goto label6;

        $stack15 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemLabelGenerator()>();

        label = interfaceinvoke $stack15.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

        toolTipText = null;

        $stack17 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>();

        if $stack17 == null goto label3;

        $stack51 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemToolTipGenerator()>();

        toolTipText = interfaceinvoke $stack51.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

     label3:
        urlText = null;

        $stack18 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>();

        if $stack18 == null goto label4;

        $stack35 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.labels.XYSeriesLabelGenerator getLegendItemURLGenerator()>();

        urlText = interfaceinvoke $stack35.<org.jfree.chart.labels.XYSeriesLabelGenerator: java.lang.String generateLabel(org.jfree.data.xy.XYDataset,int)>(dataset, series);

     label4:
        fillPaint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Paint lookupSeriesPaint(int)>(series);

        $stack20 = new org.jfree.chart.LegendItem;

        $stack21 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Shape getLegendShape()>();

        specialinvoke $stack20.<org.jfree.chart.LegendItem: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.awt.Shape,java.awt.Paint)>(label, label, toolTipText, urlText, $stack21, fillPaint);

        result = $stack20;

        $stack22 = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Font lookupLegendTextFont(int)>(series);

        virtualinvoke $stack20.<org.jfree.chart.LegendItem: void setLabelFont(java.awt.Font)>($stack22);

        labelPaint = virtualinvoke this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Paint lookupLegendTextPaint(int)>(series);

        if labelPaint == null goto label5;

        virtualinvoke $stack20.<org.jfree.chart.LegendItem: void setLabelPaint(java.awt.Paint)>(labelPaint);

     label5:
        $stack24 = interfaceinvoke dataset.<org.jfree.data.xy.XYDataset: java.lang.Comparable getSeriesKey(int)>(series);

        virtualinvoke $stack20.<org.jfree.chart.LegendItem: void setSeriesKey(java.lang.Comparable)>($stack24);

        virtualinvoke $stack20.<org.jfree.chart.LegendItem: void setSeriesIndex(int)>(series);

        virtualinvoke $stack20.<org.jfree.chart.LegendItem: void setDataset(org.jfree.data.general.Dataset)>(dataset);

        virtualinvoke $stack20.<org.jfree.chart.LegendItem: void setDatasetIndex(int)>(datasetIndex);

     label6:
        return result;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.xy.XYDotRenderer this, that;
        boolean $stack3, $stack10, $stack11;
        int $stack4, $stack5, $stack6, $stack7;
        java.awt.Shape $stack8, $stack9;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.renderer.xy.XYDotRenderer;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.renderer.xy.XYDotRenderer) obj;

        $stack5 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotWidth>;

        $stack4 = that.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotWidth>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotHeight>;

        $stack6 = that.<org.jfree.chart.renderer.xy.XYDotRenderer: int dotHeight>;

        if $stack7 == $stack6 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Shape legendShape>;

        $stack8 = that.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Shape legendShape>;

        $stack10 = staticinvoke <org.jfree.chart.util.ShapeUtils: boolean equal(java.awt.Shape,java.awt.Shape)>($stack9, $stack8);

        if $stack10 != 0 goto label5;

        return 0;

     label5:
        $stack11 = specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: boolean equals(java.lang.Object)>(obj);

        return $stack11;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        $stack1 = specialinvoke this.<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.lang.Object clone()>();

        return $stack1;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        java.awt.Shape $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Shape legendShape> = $stack2;

        return;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.renderer.xy.XYDotRenderer this;
        java.awt.Shape $stack2;

        this := @this: org.jfree.chart.renderer.xy.XYDotRenderer;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.renderer.xy.XYDotRenderer: java.awt.Shape legendShape>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.renderer.xy.XYDotRenderer: long serialVersionUID> = -2764344339073566425L;

        return;
    }
}
