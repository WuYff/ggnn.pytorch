public class org.jfree.chart.ui.FontChooserPanel extends javax.swing.JPanel
{
    public static final java.lang.String[] SIZES;
    private javax.swing.JList fontlist;
    private javax.swing.JList sizelist;
    private javax.swing.JCheckBox bold;
    private javax.swing.JCheckBox italic;
    protected static java.util.ResourceBundle localizationResources;

    public void <init>(java.awt.Font)
    {
        org.jfree.chart.ui.FontChooserPanel this;
        java.awt.GraphicsEnvironment g;
        java.lang.String[] fonts, $stack34;
        java.awt.BorderLayout $stack12, $stack14, $stack16, $stack28;
        javax.swing.JPanel $stack13, $stack15, $stack27, $stack39;
        javax.swing.border.Border $stack17, $stack24, $stack29, $stack37, $stack51;
        java.util.ResourceBundle $stack18, $stack30, $stack42, $stack45, $stack52;
        java.lang.String $stack19, $stack31, $stack43, $stack46, $stack53;
        javax.swing.border.TitledBorder $stack20, $stack32, $stack54;
        javax.swing.JList $stack21, $stack23, $stack33, $stack36;
        javax.swing.JScrollPane $stack22, $stack35;
        java.awt.GridLayout $stack40;
        javax.swing.JCheckBox $stack41, $stack44, $stack47, $stack49;
        java.awt.Font font;

        this := @this: org.jfree.chart.ui.FontChooserPanel;

        font := @parameter0: java.awt.Font;

        specialinvoke this.<javax.swing.JPanel: void <init>()>();

        g = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        fonts = virtualinvoke g.<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>();

        $stack12 = new java.awt.BorderLayout;

        specialinvoke $stack12.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke this.<org.jfree.chart.ui.FontChooserPanel: void setLayout(java.awt.LayoutManager)>($stack12);

        $stack13 = new javax.swing.JPanel;

        $stack14 = new java.awt.BorderLayout;

        specialinvoke $stack14.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $stack13.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($stack14);

        $stack15 = new javax.swing.JPanel;

        $stack16 = new java.awt.BorderLayout;

        specialinvoke $stack16.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $stack15.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($stack16);

        $stack17 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        $stack18 = <org.jfree.chart.ui.FontChooserPanel: java.util.ResourceBundle localizationResources>;

        $stack19 = virtualinvoke $stack18.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Font");

        $stack20 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($stack17, $stack19);

        virtualinvoke $stack15.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($stack20);

        $stack21 = new javax.swing.JList;

        specialinvoke $stack21.<javax.swing.JList: void <init>(java.lang.Object[])>(fonts);

        this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList fontlist> = $stack21;

        $stack22 = new javax.swing.JScrollPane;

        $stack23 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList fontlist>;

        specialinvoke $stack22.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($stack23);

        $stack24 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        virtualinvoke $stack22.<javax.swing.JScrollPane: void setBorder(javax.swing.border.Border)>($stack24);

        virtualinvoke $stack15.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack22);

        virtualinvoke this.<org.jfree.chart.ui.FontChooserPanel: java.awt.Component add(java.awt.Component)>($stack15);

        $stack27 = new javax.swing.JPanel;

        $stack28 = new java.awt.BorderLayout;

        specialinvoke $stack28.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $stack27.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($stack28);

        $stack29 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        $stack30 = <org.jfree.chart.ui.FontChooserPanel: java.util.ResourceBundle localizationResources>;

        $stack31 = virtualinvoke $stack30.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Size");

        $stack32 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($stack29, $stack31);

        virtualinvoke $stack27.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($stack32);

        $stack33 = new javax.swing.JList;

        $stack34 = <org.jfree.chart.ui.FontChooserPanel: java.lang.String[] SIZES>;

        specialinvoke $stack33.<javax.swing.JList: void <init>(java.lang.Object[])>($stack34);

        this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList sizelist> = $stack33;

        $stack35 = new javax.swing.JScrollPane;

        $stack36 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList sizelist>;

        specialinvoke $stack35.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($stack36);

        $stack37 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        virtualinvoke $stack35.<javax.swing.JScrollPane: void setBorder(javax.swing.border.Border)>($stack37);

        virtualinvoke $stack27.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack35);

        $stack39 = new javax.swing.JPanel;

        $stack40 = new java.awt.GridLayout;

        specialinvoke $stack40.<java.awt.GridLayout: void <init>(int,int)>(1, 2);

        specialinvoke $stack39.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($stack40);

        $stack41 = new javax.swing.JCheckBox;

        $stack42 = <org.jfree.chart.ui.FontChooserPanel: java.util.ResourceBundle localizationResources>;

        $stack43 = virtualinvoke $stack42.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Bold");

        specialinvoke $stack41.<javax.swing.JCheckBox: void <init>(java.lang.String)>($stack43);

        this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox bold> = $stack41;

        $stack44 = new javax.swing.JCheckBox;

        $stack45 = <org.jfree.chart.ui.FontChooserPanel: java.util.ResourceBundle localizationResources>;

        $stack46 = virtualinvoke $stack45.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Italic");

        specialinvoke $stack44.<javax.swing.JCheckBox: void <init>(java.lang.String)>($stack46);

        this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox italic> = $stack44;

        $stack47 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox bold>;

        virtualinvoke $stack39.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack47);

        $stack49 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox italic>;

        virtualinvoke $stack39.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack49);

        $stack51 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        $stack52 = <org.jfree.chart.ui.FontChooserPanel: java.util.ResourceBundle localizationResources>;

        $stack53 = virtualinvoke $stack52.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Attributes");

        $stack54 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($stack51, $stack53);

        virtualinvoke $stack39.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($stack54);

        virtualinvoke $stack13.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($stack27, "Center");

        virtualinvoke $stack13.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($stack39, "South");

        virtualinvoke this.<org.jfree.chart.ui.FontChooserPanel: void add(java.awt.Component,java.lang.Object)>($stack13, "East");

        virtualinvoke this.<org.jfree.chart.ui.FontChooserPanel: void setSelectedFont(java.awt.Font)>(font);

        return;
    }

    public java.awt.Font getSelectedFont()
    {
        java.awt.Font $stack1;
        org.jfree.chart.ui.FontChooserPanel this;
        java.lang.String $stack2;
        int $stack3, $stack4;

        this := @this: org.jfree.chart.ui.FontChooserPanel;

        $stack1 = new java.awt.Font;

        $stack2 = virtualinvoke this.<org.jfree.chart.ui.FontChooserPanel: java.lang.String getSelectedName()>();

        $stack3 = virtualinvoke this.<org.jfree.chart.ui.FontChooserPanel: int getSelectedStyle()>();

        $stack4 = virtualinvoke this.<org.jfree.chart.ui.FontChooserPanel: int getSelectedSize()>();

        specialinvoke $stack1.<java.awt.Font: void <init>(java.lang.String,int,int)>($stack2, $stack3, $stack4);

        return $stack1;
    }

    public java.lang.String getSelectedName()
    {
        org.jfree.chart.ui.FontChooserPanel this;
        javax.swing.JList $stack1;
        java.lang.Object $stack2;
        java.lang.String $stack3;

        this := @this: org.jfree.chart.ui.FontChooserPanel;

        $stack1 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList fontlist>;

        $stack2 = virtualinvoke $stack1.<javax.swing.JList: java.lang.Object getSelectedValue()>();

        $stack3 = (java.lang.String) $stack2;

        return $stack3;
    }

    public int getSelectedStyle()
    {
        org.jfree.chart.ui.FontChooserPanel this;
        javax.swing.JCheckBox $stack1, $stack3, $stack5, $stack7;
        boolean $stack2, $stack4, $stack6, $stack8;

        this := @this: org.jfree.chart.ui.FontChooserPanel;

        $stack1 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox bold>;

        $stack2 = virtualinvoke $stack1.<javax.swing.JCheckBox: boolean isSelected()>();

        if $stack2 == 0 goto label1;

        $stack7 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox italic>;

        $stack8 = virtualinvoke $stack7.<javax.swing.JCheckBox: boolean isSelected()>();

        if $stack8 == 0 goto label1;

        return 3;

     label1:
        $stack3 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox bold>;

        $stack4 = virtualinvoke $stack3.<javax.swing.JCheckBox: boolean isSelected()>();

        if $stack4 == 0 goto label2;

        return 1;

     label2:
        $stack5 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox italic>;

        $stack6 = virtualinvoke $stack5.<javax.swing.JCheckBox: boolean isSelected()>();

        if $stack6 == 0 goto label3;

        return 2;

     label3:
        return 0;
    }

    public int getSelectedSize()
    {
        org.jfree.chart.ui.FontChooserPanel this;
        javax.swing.JList $stack2;
        java.lang.Object $stack3;
        java.lang.String selected;
        int $stack4;

        this := @this: org.jfree.chart.ui.FontChooserPanel;

        $stack2 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList sizelist>;

        $stack3 = virtualinvoke $stack2.<javax.swing.JList: java.lang.Object getSelectedValue()>();

        selected = (java.lang.String) $stack3;

        if selected == null goto label1;

        $stack4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(selected);

        return $stack4;

     label1:
        return 10;
    }

    public void setSelectedFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.ui.FontChooserPanel this;
        javax.swing.JCheckBox $stack6, $stack8;
        boolean $stack7, $stack9, $stack22, $stack27;
        java.lang.String fontName, i#3;
        javax.swing.JList $stack11, $stack13, $stack17, $stack19, $stack25, $stack30;
        int $stack14, $stack15, i, $stack20;
        java.lang.Object $stack21, $stack26;
        java.lang.NullPointerException $stack35;
        javax.swing.ListModel model;

        this := @this: org.jfree.chart.ui.FontChooserPanel;

        font := @parameter0: java.awt.Font;

        if font != null goto label1;

        $stack35 = new java.lang.NullPointerException;

        specialinvoke $stack35.<java.lang.NullPointerException: void <init>()>();

        throw $stack35;

     label1:
        $stack6 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox bold>;

        $stack7 = virtualinvoke font.<java.awt.Font: boolean isBold()>();

        virtualinvoke $stack6.<javax.swing.JCheckBox: void setSelected(boolean)>($stack7);

        $stack8 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JCheckBox italic>;

        $stack9 = virtualinvoke font.<java.awt.Font: boolean isItalic()>();

        virtualinvoke $stack8.<javax.swing.JCheckBox: void setSelected(boolean)>($stack9);

        fontName = virtualinvoke font.<java.awt.Font: java.lang.String getName()>();

        $stack11 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList fontlist>;

        model = virtualinvoke $stack11.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $stack13 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList fontlist>;

        virtualinvoke $stack13.<javax.swing.JList: void clearSelection()>();

        i = 0;

     label2:
        $stack14 = interfaceinvoke model.<javax.swing.ListModel: int getSize()>();

        if i >= $stack14 goto label4;

        $stack26 = interfaceinvoke model.<javax.swing.ListModel: java.lang.Object getElementAt(int)>(i);

        $stack27 = virtualinvoke fontName.<java.lang.String: boolean equals(java.lang.Object)>($stack26);

        if $stack27 == 0 goto label3;

        $stack30 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList fontlist>;

        virtualinvoke $stack30.<javax.swing.JList: void setSelectedIndex(int)>(i);

        goto label4;

     label3:
        i = i + 1;

        goto label2;

     label4:
        $stack15 = virtualinvoke font.<java.awt.Font: int getSize()>();

        i#3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack15);

        $stack17 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList sizelist>;

        model = virtualinvoke $stack17.<javax.swing.JList: javax.swing.ListModel getModel()>();

        $stack19 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList sizelist>;

        virtualinvoke $stack19.<javax.swing.JList: void clearSelection()>();

        i = 0;

     label5:
        $stack20 = interfaceinvoke model.<javax.swing.ListModel: int getSize()>();

        if i >= $stack20 goto label7;

        $stack21 = interfaceinvoke model.<javax.swing.ListModel: java.lang.Object getElementAt(int)>(i);

        $stack22 = virtualinvoke i#3.<java.lang.String: boolean equals(java.lang.Object)>($stack21);

        if $stack22 == 0 goto label6;

        $stack25 = this.<org.jfree.chart.ui.FontChooserPanel: javax.swing.JList sizelist>;

        virtualinvoke $stack25.<javax.swing.JList: void setSelectedIndex(int)>(i);

        goto label7;

     label6:
        i = i + 1;

        goto label5;

     label7:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $stack0;
        java.util.ResourceBundle $stack1;

        $stack0 = newarray (java.lang.String)[14];

        $stack0[0] = "9";

        $stack0[1] = "10";

        $stack0[2] = "11";

        $stack0[3] = "12";

        $stack0[4] = "14";

        $stack0[5] = "16";

        $stack0[6] = "18";

        $stack0[7] = "20";

        $stack0[8] = "22";

        $stack0[9] = "24";

        $stack0[10] = "28";

        $stack0[11] = "36";

        $stack0[12] = "48";

        $stack0[13] = "72";

        <org.jfree.chart.ui.FontChooserPanel: java.lang.String[] SIZES> = $stack0;

        $stack1 = staticinvoke <org.jfree.chart.util.ResourceBundleWrapper: java.util.ResourceBundle getBundle(java.lang.String)>("org.jfree.chart.ui.LocalizationBundle");

        <org.jfree.chart.ui.FontChooserPanel: java.util.ResourceBundle localizationResources> = $stack1;

        return;
    }
}
