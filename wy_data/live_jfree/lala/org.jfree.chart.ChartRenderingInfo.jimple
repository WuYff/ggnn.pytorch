public class org.jfree.chart.ChartRenderingInfo extends java.lang.Object implements java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private transient java.awt.geom.Rectangle2D chartArea;
    private org.jfree.chart.plot.PlotRenderingInfo plotInfo;
    private org.jfree.chart.entity.EntityCollection entities;

    public void <init>()
    {
        org.jfree.chart.ChartRenderingInfo this;
        org.jfree.chart.entity.StandardEntityCollection $stack1;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        $stack1 = new org.jfree.chart.entity.StandardEntityCollection;

        specialinvoke $stack1.<org.jfree.chart.entity.StandardEntityCollection: void <init>()>();

        specialinvoke this.<org.jfree.chart.ChartRenderingInfo: void <init>(org.jfree.chart.entity.EntityCollection)>($stack1);

        return;
    }

    public void <init>(org.jfree.chart.entity.EntityCollection)
    {
        org.jfree.chart.ChartRenderingInfo this;
        java.awt.geom.Rectangle2D$Double $stack2;
        org.jfree.chart.plot.PlotRenderingInfo $stack3;
        org.jfree.chart.entity.EntityCollection entities;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        entities := @parameter0: org.jfree.chart.entity.EntityCollection;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack2.<java.awt.geom.Rectangle2D$Double: void <init>()>();

        this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea> = $stack2;

        $stack3 = new org.jfree.chart.plot.PlotRenderingInfo;

        specialinvoke $stack3.<org.jfree.chart.plot.PlotRenderingInfo: void <init>(org.jfree.chart.ChartRenderingInfo)>(this);

        this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo plotInfo> = $stack3;

        this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities> = entities;

        return;
    }

    public java.awt.geom.Rectangle2D getChartArea()
    {
        org.jfree.chart.ChartRenderingInfo this;
        java.awt.geom.Rectangle2D $stack1;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        $stack1 = this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        return $stack1;
    }

    public void setChartArea(java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.ChartRenderingInfo this;
        java.awt.geom.Rectangle2D area, $stack2;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        area := @parameter0: java.awt.geom.Rectangle2D;

        $stack2 = this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        virtualinvoke $stack2.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>(area);

        return;
    }

    public org.jfree.chart.entity.EntityCollection getEntityCollection()
    {
        org.jfree.chart.ChartRenderingInfo this;
        org.jfree.chart.entity.EntityCollection $stack1;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        $stack1 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities>;

        return $stack1;
    }

    public void setEntityCollection(org.jfree.chart.entity.EntityCollection)
    {
        org.jfree.chart.ChartRenderingInfo this;
        org.jfree.chart.entity.EntityCollection entities;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        entities := @parameter0: org.jfree.chart.entity.EntityCollection;

        this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities> = entities;

        return;
    }

    public void clear()
    {
        org.jfree.chart.ChartRenderingInfo this;
        java.awt.geom.Rectangle2D $stack1;
        org.jfree.chart.plot.PlotRenderingInfo $stack2;
        org.jfree.chart.entity.EntityCollection $stack3, $stack4;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        $stack1 = this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        virtualinvoke $stack1.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>(0.0, 0.0, 0.0, 0.0);

        $stack2 = new org.jfree.chart.plot.PlotRenderingInfo;

        specialinvoke $stack2.<org.jfree.chart.plot.PlotRenderingInfo: void <init>(org.jfree.chart.ChartRenderingInfo)>(this);

        this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo plotInfo> = $stack2;

        $stack3 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities>;

        if $stack3 == null goto label1;

        $stack4 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities>;

        interfaceinvoke $stack4.<org.jfree.chart.entity.EntityCollection: void clear()>();

     label1:
        return;
    }

    public org.jfree.chart.plot.PlotRenderingInfo getPlotInfo()
    {
        org.jfree.chart.ChartRenderingInfo this;
        org.jfree.chart.plot.PlotRenderingInfo $stack1;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        $stack1 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo plotInfo>;

        return $stack1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.ChartRenderingInfo this, that;
        boolean $stack3, $stack6, $stack9, $stack12;
        java.awt.geom.Rectangle2D $stack4, $stack5;
        org.jfree.chart.plot.PlotRenderingInfo $stack7, $stack8;
        org.jfree.chart.entity.EntityCollection $stack10, $stack11;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.ChartRenderingInfo;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.ChartRenderingInfo) obj;

        $stack5 = this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        $stack4 = that.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo plotInfo>;

        $stack7 = that.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo plotInfo>;

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities>;

        $stack10 = that.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities>;

        $stack12 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack11, $stack10);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.chart.ChartRenderingInfo this;
        java.awt.geom.Rectangle2D $stack2;
        int $stack3, $stack4, $stack6, $stack7, $stack9, $stack10, hash#2;
        org.jfree.chart.entity.EntityCollection $stack5;
        org.jfree.chart.plot.PlotRenderingInfo $stack8;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        $stack3 = 79 * 7;

        $stack2 = this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack2);

        hash#2 = $stack3 + $stack4;

        $stack6 = 79 * hash#2;

        $stack5 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities>;

        $stack7 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack5);

        hash#2 = $stack6 + $stack7;

        $stack9 = 79 * hash#2;

        $stack8 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.plot.PlotRenderingInfo plotInfo>;

        $stack10 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack8);

        hash#2 = $stack9 + $stack10;

        return hash#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.ChartRenderingInfo this, clone;
        java.lang.Object $stack3, $stack8, $stack12;
        java.awt.geom.Rectangle2D $stack4, $stack11, $stack13;
        org.jfree.chart.entity.EntityCollection $stack5, $stack7, $stack9;
        boolean $stack6;
        org.jfree.chart.util.PublicCloneable pc;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        $stack3 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        clone = (org.jfree.chart.ChartRenderingInfo) $stack3;

        $stack4 = this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        if $stack4 == null goto label1;

        $stack11 = this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        $stack12 = virtualinvoke $stack11.<java.awt.geom.Rectangle2D: java.lang.Object clone()>();

        $stack13 = (java.awt.geom.Rectangle2D) $stack12;

        clone.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea> = $stack13;

     label1:
        $stack5 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities>;

        $stack6 = $stack5 instanceof org.jfree.chart.util.PublicCloneable;

        if $stack6 == 0 goto label2;

        $stack7 = this.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities>;

        pc = (org.jfree.chart.util.PublicCloneable) $stack7;

        $stack8 = interfaceinvoke pc.<org.jfree.chart.util.PublicCloneable: java.lang.Object clone()>();

        $stack9 = (org.jfree.chart.entity.EntityCollection) $stack8;

        clone.<org.jfree.chart.ChartRenderingInfo: org.jfree.chart.entity.EntityCollection entities> = $stack9;

     label2:
        return clone;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.ChartRenderingInfo this;
        java.awt.geom.Rectangle2D $stack2;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.ChartRenderingInfo this;
        java.awt.Shape $stack2;
        java.awt.geom.Rectangle2D $stack3;

        this := @this: org.jfree.chart.ChartRenderingInfo;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        $stack3 = (java.awt.geom.Rectangle2D) $stack2;

        this.<org.jfree.chart.ChartRenderingInfo: java.awt.geom.Rectangle2D chartArea> = $stack3;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.ChartRenderingInfo: long serialVersionUID> = 2751952018173406822L;

        return;
    }
}
