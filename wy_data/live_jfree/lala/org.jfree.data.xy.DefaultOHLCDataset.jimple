public class org.jfree.data.xy.DefaultOHLCDataset extends org.jfree.data.xy.AbstractXYDataset implements org.jfree.data.xy.OHLCDataset, org.jfree.chart.util.PublicCloneable
{
    private java.lang.Comparable key;
    private org.jfree.data.xy.OHLCDataItem[] data;

    public void <init>(java.lang.Comparable, org.jfree.data.xy.OHLCDataItem[])
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        java.lang.Comparable key;
        org.jfree.data.xy.OHLCDataItem[] data;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        key := @parameter0: java.lang.Comparable;

        data := @parameter1: org.jfree.data.xy.OHLCDataItem[];

        specialinvoke this.<org.jfree.data.xy.AbstractXYDataset: void <init>()>();

        this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Comparable key> = key;

        this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data> = data;

        return;
    }

    public java.lang.Comparable getSeriesKey(int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        java.lang.Comparable $stack2;
        int series;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        $stack2 = this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Comparable key>;

        return $stack2;
    }

    public java.lang.Number getX(int, int)
    {
        java.lang.Long $stack3;
        org.jfree.data.xy.DefaultOHLCDataset this;
        int item, series;
        org.jfree.data.xy.OHLCDataItem[] $stack4;
        org.jfree.data.xy.OHLCDataItem $stack5;
        java.util.Date $stack6;
        long $stack7;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = new java.lang.Long;

        $stack4 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack5 = $stack4[item];

        $stack6 = virtualinvoke $stack5.<org.jfree.data.xy.OHLCDataItem: java.util.Date getDate()>();

        $stack7 = virtualinvoke $stack6.<java.util.Date: long getTime()>();

        specialinvoke $stack3.<java.lang.Long: void <init>(long)>($stack7);

        return $stack3;
    }

    public java.util.Date getXDate(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int item, series;
        org.jfree.data.xy.OHLCDataItem[] $stack3;
        org.jfree.data.xy.OHLCDataItem $stack4;
        java.util.Date $stack5;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack4 = $stack3[item];

        $stack5 = virtualinvoke $stack4.<org.jfree.data.xy.OHLCDataItem: java.util.Date getDate()>();

        return $stack5;
    }

    public java.lang.Number getY(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int series, item;
        java.lang.Number $stack3;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = virtualinvoke this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Number getClose(int,int)>(series, item);

        return $stack3;
    }

    public java.lang.Number getHigh(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int item, series;
        org.jfree.data.xy.OHLCDataItem[] $stack3;
        org.jfree.data.xy.OHLCDataItem $stack4;
        java.lang.Number $stack5;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack4 = $stack3[item];

        $stack5 = virtualinvoke $stack4.<org.jfree.data.xy.OHLCDataItem: java.lang.Number getHigh()>();

        return $stack5;
    }

    public double getHighValue(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int series, item;
        java.lang.Number high;
        double result;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        result = #NaN;

        high = virtualinvoke this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Number getHigh(int,int)>(series, item);

        if high == null goto label1;

        result = virtualinvoke high.<java.lang.Number: double doubleValue()>();

     label1:
        return result;
    }

    public java.lang.Number getLow(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int item, series;
        org.jfree.data.xy.OHLCDataItem[] $stack3;
        org.jfree.data.xy.OHLCDataItem $stack4;
        java.lang.Number $stack5;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack4 = $stack3[item];

        $stack5 = virtualinvoke $stack4.<org.jfree.data.xy.OHLCDataItem: java.lang.Number getLow()>();

        return $stack5;
    }

    public double getLowValue(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int series, item;
        java.lang.Number low;
        double result;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        result = #NaN;

        low = virtualinvoke this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Number getLow(int,int)>(series, item);

        if low == null goto label1;

        result = virtualinvoke low.<java.lang.Number: double doubleValue()>();

     label1:
        return result;
    }

    public java.lang.Number getOpen(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int item, series;
        org.jfree.data.xy.OHLCDataItem[] $stack3;
        org.jfree.data.xy.OHLCDataItem $stack4;
        java.lang.Number $stack5;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack4 = $stack3[item];

        $stack5 = virtualinvoke $stack4.<org.jfree.data.xy.OHLCDataItem: java.lang.Number getOpen()>();

        return $stack5;
    }

    public double getOpenValue(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int series, item;
        java.lang.Number open;
        double result;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        result = #NaN;

        open = virtualinvoke this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Number getOpen(int,int)>(series, item);

        if open == null goto label1;

        result = virtualinvoke open.<java.lang.Number: double doubleValue()>();

     label1:
        return result;
    }

    public java.lang.Number getClose(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int item, series;
        org.jfree.data.xy.OHLCDataItem[] $stack3;
        org.jfree.data.xy.OHLCDataItem $stack4;
        java.lang.Number $stack5;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack4 = $stack3[item];

        $stack5 = virtualinvoke $stack4.<org.jfree.data.xy.OHLCDataItem: java.lang.Number getClose()>();

        return $stack5;
    }

    public double getCloseValue(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int series, item;
        java.lang.Number close;
        double result;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        result = #NaN;

        close = virtualinvoke this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Number getClose(int,int)>(series, item);

        if close == null goto label1;

        result = virtualinvoke close.<java.lang.Number: double doubleValue()>();

     label1:
        return result;
    }

    public java.lang.Number getVolume(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int item, series;
        org.jfree.data.xy.OHLCDataItem[] $stack3;
        org.jfree.data.xy.OHLCDataItem $stack4;
        java.lang.Number $stack5;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        $stack3 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack4 = $stack3[item];

        $stack5 = virtualinvoke $stack4.<org.jfree.data.xy.OHLCDataItem: java.lang.Number getVolume()>();

        return $stack5;
    }

    public double getVolumeValue(int, int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        int series, item;
        java.lang.Number volume;
        double result;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        item := @parameter1: int;

        result = #NaN;

        volume = virtualinvoke this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Number getVolume(int,int)>(series, item);

        if volume == null goto label1;

        result = virtualinvoke volume.<java.lang.Number: double doubleValue()>();

     label1:
        return result;
    }

    public int getSeriesCount()
    {
        org.jfree.data.xy.DefaultOHLCDataset this;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        return 1;
    }

    public int getItemCount(int)
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        org.jfree.data.xy.OHLCDataItem[] $stack2;
        int $stack3, series;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        series := @parameter0: int;

        $stack2 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack3 = lengthof $stack2;

        return $stack3;
    }

    public void sortDataByDate()
    {
        org.jfree.data.xy.DefaultOHLCDataset this;
        org.jfree.data.xy.OHLCDataItem[] $stack1;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        $stack1 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($stack1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.jfree.data.xy.DefaultOHLCDataset this, that;
        java.lang.Object obj;
        boolean $stack3, $stack6, $stack9;
        java.lang.Comparable $stack4, $stack5;
        org.jfree.data.xy.OHLCDataItem[] $stack7, $stack8;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.data.xy.DefaultOHLCDataset;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.data.xy.DefaultOHLCDataset) obj;

        $stack5 = this.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Comparable key>;

        $stack4 = that.<org.jfree.data.xy.DefaultOHLCDataset: java.lang.Comparable key>;

        $stack6 = virtualinvoke $stack5.<java.lang.Object: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack7 = that.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack9 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.data.xy.DefaultOHLCDataset this, clone;
        java.lang.Object $stack2;
        org.jfree.data.xy.OHLCDataItem[] $stack3, $stack5, $stack6, $stack8, $stack9;
        int $stack4, $stack7;

        this := @this: org.jfree.data.xy.DefaultOHLCDataset;

        $stack2 = specialinvoke this.<org.jfree.data.xy.AbstractXYDataset: java.lang.Object clone()>();

        clone = (org.jfree.data.xy.DefaultOHLCDataset) $stack2;

        $stack3 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack4 = lengthof $stack3;

        $stack5 = newarray (org.jfree.data.xy.OHLCDataItem)[$stack4];

        clone.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data> = $stack5;

        $stack9 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack8 = clone.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack6 = this.<org.jfree.data.xy.DefaultOHLCDataset: org.jfree.data.xy.OHLCDataItem[] data>;

        $stack7 = lengthof $stack6;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack9, 0, $stack8, 0, $stack7);

        return clone;
    }
}
