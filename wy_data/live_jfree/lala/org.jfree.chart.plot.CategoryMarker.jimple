public class org.jfree.chart.plot.CategoryMarker extends org.jfree.chart.plot.Marker implements java.lang.Cloneable, java.io.Serializable
{
    private java.lang.Comparable key;
    private boolean drawAsLine;

    public void <init>(java.lang.Comparable)
    {
        org.jfree.chart.plot.CategoryMarker this;
        java.lang.Comparable key;
        java.awt.BasicStroke $stack2;
        java.awt.Color $stack3;

        this := @this: org.jfree.chart.plot.CategoryMarker;

        key := @parameter0: java.lang.Comparable;

        $stack3 = <java.awt.Color: java.awt.Color GRAY>;

        $stack2 = new java.awt.BasicStroke;

        specialinvoke $stack2.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        specialinvoke this.<org.jfree.chart.plot.CategoryMarker: void <init>(java.lang.Comparable,java.awt.Paint,java.awt.Stroke)>(key, $stack3, $stack2);

        return;
    }

    public void <init>(java.lang.Comparable, java.awt.Paint, java.awt.Stroke)
    {
        org.jfree.chart.plot.CategoryMarker this;
        java.lang.Comparable key;
        java.awt.Paint paint;
        java.awt.Stroke stroke;

        this := @this: org.jfree.chart.plot.CategoryMarker;

        key := @parameter0: java.lang.Comparable;

        paint := @parameter1: java.awt.Paint;

        stroke := @parameter2: java.awt.Stroke;

        specialinvoke this.<org.jfree.chart.plot.CategoryMarker: void <init>(java.lang.Comparable,java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)>(key, paint, stroke, paint, stroke, 1.0F);

        return;
    }

    public void <init>(java.lang.Comparable, java.awt.Paint, java.awt.Stroke, java.awt.Paint, java.awt.Stroke, float)
    {
        org.jfree.chart.plot.CategoryMarker this;
        java.awt.Paint paint, outlinePaint;
        java.awt.Stroke stroke, outlineStroke;
        float alpha;
        java.lang.Comparable key;
        org.jfree.chart.ui.LengthAdjustmentType $stack7;

        this := @this: org.jfree.chart.plot.CategoryMarker;

        key := @parameter0: java.lang.Comparable;

        paint := @parameter1: java.awt.Paint;

        stroke := @parameter2: java.awt.Stroke;

        outlinePaint := @parameter3: java.awt.Paint;

        outlineStroke := @parameter4: java.awt.Stroke;

        alpha := @parameter5: float;

        specialinvoke this.<org.jfree.chart.plot.Marker: void <init>(java.awt.Paint,java.awt.Stroke,java.awt.Paint,java.awt.Stroke,float)>(paint, stroke, outlinePaint, outlineStroke, alpha);

        this.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine> = 0;

        this.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key> = key;

        $stack7 = <org.jfree.chart.ui.LengthAdjustmentType: org.jfree.chart.ui.LengthAdjustmentType EXPAND>;

        virtualinvoke this.<org.jfree.chart.plot.CategoryMarker: void setLabelOffsetType(org.jfree.chart.ui.LengthAdjustmentType)>($stack7);

        return;
    }

    public java.lang.Comparable getKey()
    {
        org.jfree.chart.plot.CategoryMarker this;
        java.lang.Comparable $stack1;

        this := @this: org.jfree.chart.plot.CategoryMarker;

        $stack1 = this.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key>;

        return $stack1;
    }

    public void setKey(java.lang.Comparable)
    {
        java.lang.Comparable key;
        org.jfree.chart.plot.CategoryMarker this;
        org.jfree.chart.event.MarkerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.CategoryMarker;

        key := @parameter0: java.lang.Comparable;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(key, "key");

        this.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key> = key;

        $stack2 = new org.jfree.chart.event.MarkerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(this);

        virtualinvoke this.<org.jfree.chart.plot.CategoryMarker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($stack2);

        return;
    }

    public boolean getDrawAsLine()
    {
        org.jfree.chart.plot.CategoryMarker this;
        boolean $stack1;

        this := @this: org.jfree.chart.plot.CategoryMarker;

        $stack1 = this.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine>;

        return $stack1;
    }

    public void setDrawAsLine(boolean)
    {
        org.jfree.chart.plot.CategoryMarker this;
        boolean drawAsLine;
        org.jfree.chart.event.MarkerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.CategoryMarker;

        drawAsLine := @parameter0: boolean;

        this.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine> = drawAsLine;

        $stack2 = new org.jfree.chart.event.MarkerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.MarkerChangeEvent: void <init>(org.jfree.chart.plot.Marker)>(this);

        virtualinvoke this.<org.jfree.chart.plot.CategoryMarker: void notifyListeners(org.jfree.chart.event.MarkerChangeEvent)>($stack2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack3, $stack4, $stack7, $stack8, $stack9;
        org.jfree.chart.plot.CategoryMarker this, that;
        java.lang.Comparable $stack5, $stack6;

        this := @this: org.jfree.chart.plot.CategoryMarker;

        obj := @parameter0: java.lang.Object;

        if obj != null goto label1;

        return 0;

     label1:
        $stack3 = obj instanceof org.jfree.chart.plot.CategoryMarker;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        $stack4 = specialinvoke this.<org.jfree.chart.plot.Marker: boolean equals(java.lang.Object)>(obj);

        if $stack4 != 0 goto label3;

        return 0;

     label3:
        that = (org.jfree.chart.plot.CategoryMarker) obj;

        $stack6 = this.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key>;

        $stack5 = that.<org.jfree.chart.plot.CategoryMarker: java.lang.Comparable key>;

        $stack7 = virtualinvoke $stack6.<java.lang.Object: boolean equals(java.lang.Object)>($stack5);

        if $stack7 != 0 goto label4;

        return 0;

     label4:
        $stack9 = this.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine>;

        $stack8 = that.<org.jfree.chart.plot.CategoryMarker: boolean drawAsLine>;

        if $stack9 == $stack8 goto label5;

        return 0;

     label5:
        return 1;
    }
}
