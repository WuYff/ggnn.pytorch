public class org.jfree.data.xy.XYDataItem extends java.lang.Object implements java.lang.Cloneable, java.lang.Comparable, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.Number x;
    private java.lang.Number y;

    public void <init>(java.lang.Number, java.lang.Number)
    {
        org.jfree.data.xy.XYDataItem this;
        java.lang.Number x, y;

        this := @this: org.jfree.data.xy.XYDataItem;

        x := @parameter0: java.lang.Number;

        y := @parameter1: java.lang.Number;

        specialinvoke this.<java.lang.Object: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(x, "x");

        this.<org.jfree.data.xy.XYDataItem: java.lang.Number x> = x;

        this.<org.jfree.data.xy.XYDataItem: java.lang.Number y> = y;

        return;
    }

    public void <init>(double, double)
    {
        org.jfree.data.xy.XYDataItem this;
        double x, y;
        java.lang.Double $stack5, $stack6;

        this := @this: org.jfree.data.xy.XYDataItem;

        x := @parameter0: double;

        y := @parameter1: double;

        $stack5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(x);

        $stack6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(y);

        specialinvoke this.<org.jfree.data.xy.XYDataItem: void <init>(java.lang.Number,java.lang.Number)>($stack5, $stack6);

        return;
    }

    public java.lang.Number getX()
    {
        org.jfree.data.xy.XYDataItem this;
        java.lang.Number $stack1;

        this := @this: org.jfree.data.xy.XYDataItem;

        $stack1 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number x>;

        return $stack1;
    }

    public double getXValue()
    {
        org.jfree.data.xy.XYDataItem this;
        java.lang.Number $stack1;
        double $stack2;

        this := @this: org.jfree.data.xy.XYDataItem;

        $stack1 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number x>;

        $stack2 = virtualinvoke $stack1.<java.lang.Number: double doubleValue()>();

        return $stack2;
    }

    public java.lang.Number getY()
    {
        org.jfree.data.xy.XYDataItem this;
        java.lang.Number $stack1;

        this := @this: org.jfree.data.xy.XYDataItem;

        $stack1 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number y>;

        return $stack1;
    }

    public double getYValue()
    {
        org.jfree.data.xy.XYDataItem this;
        java.lang.Number $stack3, $stack4;
        double result;

        this := @this: org.jfree.data.xy.XYDataItem;

        result = #NaN;

        $stack3 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number y>;

        if $stack3 == null goto label1;

        $stack4 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number y>;

        result = virtualinvoke $stack4.<java.lang.Number: double doubleValue()>();

     label1:
        return result;
    }

    public void setY(double)
    {
        org.jfree.data.xy.XYDataItem this;
        double y;
        java.lang.Double $stack3;

        this := @this: org.jfree.data.xy.XYDataItem;

        y := @parameter0: double;

        $stack3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(y);

        virtualinvoke this.<org.jfree.data.xy.XYDataItem: void setY(java.lang.Number)>($stack3);

        return;
    }

    public void setY(java.lang.Number)
    {
        org.jfree.data.xy.XYDataItem this;
        java.lang.Number y;

        this := @this: org.jfree.data.xy.XYDataItem;

        y := @parameter0: java.lang.Number;

        this.<org.jfree.data.xy.XYDataItem: java.lang.Number y> = y;

        return;
    }

    public int compareTo(org.jfree.data.xy.XYDataItem)
    {
        org.jfree.data.xy.XYDataItem this, other;
        java.lang.Number $stack5, $stack7;
        double $stack6, $stack8, compare;
        byte $stack9, $stack10, result;

        this := @this: org.jfree.data.xy.XYDataItem;

        other := @parameter0: org.jfree.data.xy.XYDataItem;

        $stack5 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number x>;

        $stack6 = virtualinvoke $stack5.<java.lang.Number: double doubleValue()>();

        $stack7 = virtualinvoke other.<org.jfree.data.xy.XYDataItem: java.lang.Number getX()>();

        $stack8 = virtualinvoke $stack7.<java.lang.Number: double doubleValue()>();

        compare = $stack6 - $stack8;

        $stack9 = compare cmpl 0.0;

        if $stack9 <= 0 goto label1;

        result = 1;

        goto label3;

     label1:
        $stack10 = compare cmpg 0.0;

        if $stack10 >= 0 goto label2;

        result = -1;

        goto label3;

     label2:
        result = 0;

     label3:
        return result;
    }

    public java.lang.Object clone()
    {
        org.jfree.data.xy.XYDataItem this;
        java.lang.CloneNotSupportedException $stack4;
        java.lang.Object clone;

        this := @this: org.jfree.data.xy.XYDataItem;

        clone = null;

     label1:
        clone = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

     label2:
        goto label4;

     label3:
        $stack4 := @caughtexception;

        virtualinvoke $stack4.<java.lang.CloneNotSupportedException: void printStackTrace()>();

     label4:
        return clone;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.data.xy.XYDataItem this, that;
        boolean $stack3, $stack6, $stack9;
        java.lang.Number $stack4, $stack5, $stack7, $stack8;

        this := @this: org.jfree.data.xy.XYDataItem;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.data.xy.XYDataItem;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.data.xy.XYDataItem) obj;

        $stack5 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number x>;

        $stack4 = that.<org.jfree.data.xy.XYDataItem: java.lang.Number x>;

        $stack6 = virtualinvoke $stack5.<java.lang.Object: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number y>;

        $stack7 = that.<org.jfree.data.xy.XYDataItem: java.lang.Number y>;

        $stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        org.jfree.data.xy.XYDataItem this;
        java.lang.Number $stack2, $stack4, $stack6;
        int $stack5, result, $stack7;

        this := @this: org.jfree.data.xy.XYDataItem;

        $stack2 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number x>;

        result = virtualinvoke $stack2.<java.lang.Object: int hashCode()>();

        $stack5 = 29 * result;

        $stack4 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number y>;

        if $stack4 == null goto label1;

        $stack6 = this.<org.jfree.data.xy.XYDataItem: java.lang.Number y>;

        $stack7 = virtualinvoke $stack6.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $stack7 = 0;

     label2:
        result = $stack5 + $stack7;

        return result;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack1, $stack2, $stack4, $stack5, $stack7, $stack8;
        org.jfree.data.xy.XYDataItem this;
        double $stack3, $stack6;
        java.lang.String $stack9;

        this := @this: org.jfree.data.xy.XYDataItem;

        $stack1 = new java.lang.StringBuilder;

        specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack3 = virtualinvoke this.<org.jfree.data.xy.XYDataItem: double getXValue()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $stack6 = virtualinvoke this.<org.jfree.data.xy.XYDataItem: double getYValue()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack9;
    }

    public volatile int compareTo(java.lang.Object)
    {
        org.jfree.data.xy.XYDataItem this, $stack2;
        java.lang.Object l1;
        int $stack3;

        this := @this: org.jfree.data.xy.XYDataItem;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.jfree.data.xy.XYDataItem) l1;

        $stack3 = virtualinvoke this.<org.jfree.data.xy.XYDataItem: int compareTo(org.jfree.data.xy.XYDataItem)>($stack2);

        return $stack3;
    }

    public static void <clinit>()
    {
        <org.jfree.data.xy.XYDataItem: long serialVersionUID> = 2751513470325494890L;

        return;
    }
}
