public class org.jfree.chart.plot.dial.DialPointer$Pointer extends org.jfree.chart.plot.dial.DialPointer
{
    static final long serialVersionUID;
    private double widthRadius;
    private transient java.awt.Paint fillPaint;
    private transient java.awt.Paint outlinePaint;

    public void <init>()
    {
        org.jfree.chart.plot.dial.DialPointer$Pointer this;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        specialinvoke this.<org.jfree.chart.plot.dial.DialPointer$Pointer: void <init>(int)>(0);

        return;
    }

    public void <init>(int)
    {
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        int datasetIndex;
        java.awt.Color $stack2, $stack3;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        datasetIndex := @parameter0: int;

        specialinvoke this.<org.jfree.chart.plot.dial.DialPointer: void <init>(int)>(datasetIndex);

        this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double widthRadius> = 0.05;

        $stack2 = <java.awt.Color: java.awt.Color GRAY>;

        this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint> = $stack2;

        $stack3 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint> = $stack3;

        return;
    }

    public double getWidthRadius()
    {
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        $stack1 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double widthRadius>;

        return $stack1;
    }

    public void setWidthRadius(double)
    {
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        double radius;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        radius := @parameter0: double;

        this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double widthRadius> = radius;

        $stack3 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.DialPointer$Pointer: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack3);

        return;
    }

    public java.awt.Paint getFillPaint()
    {
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        $stack1 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint>;

        return $stack1;
    }

    public void setFillPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.DialPointer$Pointer: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Paint getOutlinePaint()
    {
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        $stack1 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint>;

        return $stack1;
    }

    public void setOutlinePaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.DialPointer$Pointer: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.dial.DialPlot, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D)
    {
        java.awt.Graphics2D g2;
        java.awt.Color $stack21;
        java.awt.BasicStroke $stack22;
        java.awt.geom.Rectangle2D frame, lengthRect, widthRect, view;
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        double $stack23, $stack24, $stack26, $stack27, value, angle, $stack37, $stack41, $stack44, $stack46, $stack48, $stack50, $stack52, $stack54, $stack56, $stack58, $stack63, $stack64, $stack65, $stack66;
        org.jfree.chart.plot.dial.DialPlot plot;
        int $stack29, $stack31;
        org.jfree.chart.plot.dial.DialScale scale;
        java.awt.geom.Arc2D$Double $stack34, $stack36, $stack40;
        java.awt.geom.Point2D pt1, pt2, pt3, pt4;
        java.awt.geom.GeneralPath $stack43;
        float $stack45, $stack47, $stack49, $stack51, $stack53, $stack55, $stack57, $stack59;
        java.awt.Paint $stack60, $stack61;
        java.awt.geom.Line2D$Double $stack62;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.dial.DialPlot;

        frame := @parameter2: java.awt.geom.Rectangle2D;

        view := @parameter3: java.awt.geom.Rectangle2D;

        $stack21 = <java.awt.Color: java.awt.Color BLUE>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack21);

        $stack22 = new java.awt.BasicStroke;

        specialinvoke $stack22.<java.awt.BasicStroke: void <init>(float)>(1.0F);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack22);

        $stack24 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double radius>;

        $stack23 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double radius>;

        lengthRect = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack24, $stack23);

        $stack27 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double widthRadius>;

        $stack26 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double widthRadius>;

        widthRect = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack27, $stack26);

        $stack29 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: int datasetIndex>;

        value = virtualinvoke plot.<org.jfree.chart.plot.dial.DialPlot: double getValue(int)>($stack29);

        $stack31 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: int datasetIndex>;

        scale = virtualinvoke plot.<org.jfree.chart.plot.dial.DialPlot: org.jfree.chart.plot.dial.DialScale getScaleForDataset(int)>($stack31);

        angle = interfaceinvoke scale.<org.jfree.chart.plot.dial.DialScale: double valueToAngle(double)>(value);

        $stack34 = new java.awt.geom.Arc2D$Double;

        specialinvoke $stack34.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(lengthRect, angle, 0.0, 0);

        pt1 = virtualinvoke $stack34.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>();

        $stack36 = new java.awt.geom.Arc2D$Double;

        $stack37 = angle - 90.0;

        specialinvoke $stack36.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(widthRect, $stack37, 180.0, 0);

        pt2 = virtualinvoke $stack36.<java.awt.geom.Arc2D: java.awt.geom.Point2D getStartPoint()>();

        pt3 = virtualinvoke $stack36.<java.awt.geom.Arc2D: java.awt.geom.Point2D getEndPoint()>();

        $stack40 = new java.awt.geom.Arc2D$Double;

        $stack41 = angle - 180.0;

        specialinvoke $stack40.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(widthRect, $stack41, 0.0, 0);

        pt4 = virtualinvoke $stack40.<java.awt.geom.Arc2D: java.awt.geom.Point2D getStartPoint()>();

        $stack43 = new java.awt.geom.GeneralPath;

        specialinvoke $stack43.<java.awt.geom.GeneralPath: void <init>()>();

        $stack44 = virtualinvoke pt1.<java.awt.geom.Point2D: double getX()>();

        $stack45 = (float) $stack44;

        $stack46 = virtualinvoke pt1.<java.awt.geom.Point2D: double getY()>();

        $stack47 = (float) $stack46;

        virtualinvoke $stack43.<java.awt.geom.GeneralPath: void moveTo(float,float)>($stack45, $stack47);

        $stack48 = virtualinvoke pt2.<java.awt.geom.Point2D: double getX()>();

        $stack49 = (float) $stack48;

        $stack50 = virtualinvoke pt2.<java.awt.geom.Point2D: double getY()>();

        $stack51 = (float) $stack50;

        virtualinvoke $stack43.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack49, $stack51);

        $stack52 = virtualinvoke pt4.<java.awt.geom.Point2D: double getX()>();

        $stack53 = (float) $stack52;

        $stack54 = virtualinvoke pt4.<java.awt.geom.Point2D: double getY()>();

        $stack55 = (float) $stack54;

        virtualinvoke $stack43.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack53, $stack55);

        $stack56 = virtualinvoke pt3.<java.awt.geom.Point2D: double getX()>();

        $stack57 = (float) $stack56;

        $stack58 = virtualinvoke pt3.<java.awt.geom.Point2D: double getY()>();

        $stack59 = (float) $stack58;

        virtualinvoke $stack43.<java.awt.geom.GeneralPath: void lineTo(float,float)>($stack57, $stack59);

        virtualinvoke $stack43.<java.awt.geom.GeneralPath: void closePath()>();

        $stack60 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack60);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack43);

        $stack61 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack61);

        $stack62 = new java.awt.geom.Line2D$Double;

        $stack63 = virtualinvoke frame.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $stack64 = virtualinvoke frame.<java.awt.geom.Rectangle2D: double getCenterY()>();

        $stack65 = virtualinvoke pt1.<java.awt.geom.Point2D: double getX()>();

        $stack66 = virtualinvoke pt1.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $stack62.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($stack63, $stack64, $stack65, $stack66);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack62);

        virtualinvoke $stack62.<java.awt.geom.Line2D: void setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(pt2, pt3);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack62);

        virtualinvoke $stack62.<java.awt.geom.Line2D: void setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(pt3, pt1);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack62);

        virtualinvoke $stack62.<java.awt.geom.Line2D: void setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(pt2, pt1);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack62);

        virtualinvoke $stack62.<java.awt.geom.Line2D: void setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(pt2, pt4);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack62);

        virtualinvoke $stack62.<java.awt.geom.Line2D: void setLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(pt3, pt4);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack62);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.plot.dial.DialPointer$Pointer this, that;
        boolean $stack3, $stack9, $stack12, $stack13;
        double $stack4, $stack5;
        byte $stack6;
        java.awt.Paint $stack7, $stack8, $stack10, $stack11;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.plot.dial.DialPointer$Pointer;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.plot.dial.DialPointer$Pointer) obj;

        $stack5 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double widthRadius>;

        $stack4 = that.<org.jfree.chart.plot.dial.DialPointer$Pointer: double widthRadius>;

        $stack6 = $stack5 cmpl $stack4;

        if $stack6 == 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint>;

        $stack7 = that.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint>;

        $stack9 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint>;

        $stack10 = that.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint>;

        $stack12 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack11, $stack10);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack13 = specialinvoke this.<org.jfree.chart.plot.dial.DialPointer: boolean equals(java.lang.Object)>(obj);

        return $stack13;
    }

    public int hashCode()
    {
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        double $stack3;
        java.awt.Paint $stack5, $stack7;
        int result;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        result = specialinvoke this.<org.jfree.chart.plot.dial.DialPointer: int hashCode()>();

        $stack3 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: double widthRadius>;

        result = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,double)>(result, $stack3);

        $stack5 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint>;

        result = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,java.awt.Paint)>(result, $stack5);

        $stack7 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint>;

        result = staticinvoke <org.jfree.chart.HashUtils: int hashCode(int,java.awt.Paint)>(result, $stack7);

        return result;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        java.awt.Paint $stack2, $stack3;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.plot.dial.DialPointer$Pointer this;
        java.awt.Paint $stack2, $stack3;

        this := @this: org.jfree.chart.plot.dial.DialPointer$Pointer;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint fillPaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.DialPointer$Pointer: java.awt.Paint outlinePaint> = $stack3;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.plot.dial.DialPointer$Pointer: long serialVersionUID> = -4180500011963176960L;

        return;
    }
}
