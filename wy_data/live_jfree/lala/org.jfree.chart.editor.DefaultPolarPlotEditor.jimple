public class org.jfree.chart.editor.DefaultPolarPlotEditor extends org.jfree.chart.editor.DefaultPlotEditor implements java.awt.event.FocusListener
{
    private javax.swing.JTextField manualTickUnit;
    private javax.swing.JTextField angleOffset;
    private double manualTickUnitValue;
    private double angleOffsetValue;

    public void <init>(org.jfree.chart.plot.PolarPlot)
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        org.jfree.chart.plot.PolarPlot plot;
        double $stack2, $stack3, $stack7, $stack8;
        javax.swing.JTextField $stack4, $stack9;
        java.lang.String $stack5, $stack10;
        org.jfree.chart.axis.TickUnit $stack6;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        plot := @parameter0: org.jfree.chart.plot.PolarPlot;

        specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: void <init>(org.jfree.chart.plot.Plot)>(plot);

        $stack2 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: double getAngleOffset()>();

        this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double angleOffsetValue> = $stack2;

        $stack4 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset>;

        $stack3 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double angleOffsetValue>;

        $stack5 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($stack3);

        virtualinvoke $stack4.<javax.swing.JTextField: void setText(java.lang.String)>($stack5);

        $stack6 = virtualinvoke plot.<org.jfree.chart.plot.PolarPlot: org.jfree.chart.axis.TickUnit getAngleTickUnit()>();

        $stack7 = virtualinvoke $stack6.<org.jfree.chart.axis.TickUnit: double getSize()>();

        this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double manualTickUnitValue> = $stack7;

        $stack9 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit>;

        $stack8 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double manualTickUnitValue>;

        $stack10 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($stack8);

        virtualinvoke $stack9.<javax.swing.JTextField: void setText(java.lang.String)>($stack10);

        return;
    }

    protected javax.swing.JTabbedPane createPlotTabs(org.jfree.chart.plot.Plot)
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        org.jfree.chart.plot.Plot plot;
        javax.swing.JTabbedPane tabs;
        java.util.ResourceBundle $stack4;
        java.lang.String $stack5;
        javax.swing.JPanel $stack7;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        plot := @parameter0: org.jfree.chart.plot.Plot;

        tabs = specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: javax.swing.JTabbedPane createPlotTabs(org.jfree.chart.plot.Plot)>(plot);

        $stack4 = <org.jfree.chart.editor.DefaultPolarPlotEditor: java.util.ResourceBundle localizationResources>;

        $stack5 = virtualinvoke $stack4.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("General1");

        $stack7 = specialinvoke this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JPanel createPlotPanel()>();

        virtualinvoke tabs.<javax.swing.JTabbedPane: void insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)>($stack5, null, $stack7, null, 0);

        virtualinvoke tabs.<javax.swing.JTabbedPane: void setSelectedIndex(int)>(0);

        return tabs;
    }

    private javax.swing.JPanel createPlotPanel()
    {
        javax.swing.JPanel $stack2, $stack17, $stack31;
        org.jfree.chart.ui.LCBLayout $stack3;
        javax.swing.border.Border $stack4;
        javax.swing.JLabel $stack5, $stack19;
        java.util.ResourceBundle $stack6, $stack20;
        java.lang.String $stack7, $stack11, $stack21, $stack25;
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        javax.swing.JTextField $stack9, $stack12, $stack13, $stack14, $stack15, $stack23, $stack26, $stack27, $stack28, $stack29;
        double $stack10, $stack24;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        $stack2 = new javax.swing.JPanel;

        $stack3 = new org.jfree.chart.ui.LCBLayout;

        specialinvoke $stack3.<org.jfree.chart.ui.LCBLayout: void <init>(int)>(3);

        specialinvoke $stack2.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($stack3);

        $stack4 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(4, 4, 4, 4);

        virtualinvoke $stack2.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($stack4);

        $stack5 = new javax.swing.JLabel;

        $stack6 = <org.jfree.chart.editor.DefaultPolarPlotEditor: java.util.ResourceBundle localizationResources>;

        $stack7 = virtualinvoke $stack6.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("AngleOffset");

        specialinvoke $stack5.<javax.swing.JLabel: void <init>(java.lang.String)>($stack7);

        virtualinvoke $stack2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack5);

        $stack9 = new javax.swing.JTextField;

        $stack10 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double angleOffsetValue>;

        $stack11 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($stack10);

        specialinvoke $stack9.<javax.swing.JTextField: void <init>(java.lang.String)>($stack11);

        this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset> = $stack9;

        $stack12 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset>;

        virtualinvoke $stack12.<javax.swing.JTextField: void setActionCommand(java.lang.String)>("AngleOffsetValue");

        $stack13 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset>;

        virtualinvoke $stack13.<javax.swing.JTextField: void addActionListener(java.awt.event.ActionListener)>(this);

        $stack14 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset>;

        virtualinvoke $stack14.<javax.swing.JTextField: void addFocusListener(java.awt.event.FocusListener)>(this);

        $stack15 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset>;

        virtualinvoke $stack2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack15);

        $stack17 = new javax.swing.JPanel;

        specialinvoke $stack17.<javax.swing.JPanel: void <init>()>();

        virtualinvoke $stack2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack17);

        $stack19 = new javax.swing.JLabel;

        $stack20 = <org.jfree.chart.editor.DefaultPolarPlotEditor: java.util.ResourceBundle localizationResources>;

        $stack21 = virtualinvoke $stack20.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("Manual_TickUnit_value");

        specialinvoke $stack19.<javax.swing.JLabel: void <init>(java.lang.String)>($stack21);

        virtualinvoke $stack2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack19);

        $stack23 = new javax.swing.JTextField;

        $stack24 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double manualTickUnitValue>;

        $stack25 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($stack24);

        specialinvoke $stack23.<javax.swing.JTextField: void <init>(java.lang.String)>($stack25);

        this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit> = $stack23;

        $stack26 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit>;

        virtualinvoke $stack26.<javax.swing.JTextField: void setActionCommand(java.lang.String)>("TickUnitValue");

        $stack27 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit>;

        virtualinvoke $stack27.<javax.swing.JTextField: void addActionListener(java.awt.event.ActionListener)>(this);

        $stack28 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit>;

        virtualinvoke $stack28.<javax.swing.JTextField: void addFocusListener(java.awt.event.FocusListener)>(this);

        $stack29 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit>;

        virtualinvoke $stack2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack29);

        $stack31 = new javax.swing.JPanel;

        specialinvoke $stack31.<javax.swing.JPanel: void <init>()>();

        virtualinvoke $stack2.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack31);

        return $stack2;
    }

    public void focusGained(java.awt.event.FocusEvent)
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        java.awt.event.FocusEvent event;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        event := @parameter0: java.awt.event.FocusEvent;

        return;
    }

    public void focusLost(java.awt.event.FocusEvent)
    {
        java.awt.event.FocusEvent event;
        java.lang.Object $stack2, $stack4;
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        javax.swing.JTextField $stack3, $stack5;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        event := @parameter0: java.awt.event.FocusEvent;

        $stack2 = virtualinvoke event.<java.awt.event.FocusEvent: java.lang.Object getSource()>();

        $stack3 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset>;

        if $stack2 != $stack3 goto label1;

        virtualinvoke this.<org.jfree.chart.editor.DefaultPolarPlotEditor: void validateAngleOffset()>();

        goto label2;

     label1:
        $stack4 = virtualinvoke event.<java.awt.event.FocusEvent: java.lang.Object getSource()>();

        $stack5 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit>;

        if $stack4 != $stack5 goto label2;

        virtualinvoke this.<org.jfree.chart.editor.DefaultPolarPlotEditor: void validateTickUnit()>();

     label2:
        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        java.awt.event.ActionEvent event;
        java.lang.String command;
        boolean $stack4, $stack5;
        org.jfree.chart.editor.DefaultPolarPlotEditor this;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        event := @parameter0: java.awt.event.ActionEvent;

        command = virtualinvoke event.<java.awt.event.ActionEvent: java.lang.String getActionCommand()>();

        $stack4 = virtualinvoke command.<java.lang.String: boolean equals(java.lang.Object)>("AngleOffsetValue");

        if $stack4 == 0 goto label1;

        virtualinvoke this.<org.jfree.chart.editor.DefaultPolarPlotEditor: void validateAngleOffset()>();

        goto label2;

     label1:
        $stack5 = virtualinvoke command.<java.lang.String: boolean equals(java.lang.Object)>("TickUnitValue");

        if $stack5 == 0 goto label2;

        virtualinvoke this.<org.jfree.chart.editor.DefaultPolarPlotEditor: void validateTickUnit()>();

     label2:
        return;
    }

    public void validateAngleOffset()
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        javax.swing.JTextField $stack4, $stack8;
        java.lang.String $stack5, $stack9;
        double $stack7, newOffset;
        java.lang.NumberFormatException $stack10;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

     label1:
        $stack4 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset>;

        $stack5 = virtualinvoke $stack4.<javax.swing.JTextField: java.lang.String getText()>();

        newOffset = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($stack5);

     label2:
        goto label4;

     label3:
        $stack10 := @caughtexception;

        newOffset = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double angleOffsetValue>;

     label4:
        this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double angleOffsetValue> = newOffset;

        $stack8 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField angleOffset>;

        $stack7 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double angleOffsetValue>;

        $stack9 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($stack7);

        virtualinvoke $stack8.<javax.swing.JTextField: void setText(java.lang.String)>($stack9);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void validateTickUnit()
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        javax.swing.JTextField $stack4, $stack9;
        java.lang.String $stack5, $stack10;
        byte $stack7, $stack11;
        java.lang.NumberFormatException $stack14;
        double newTickUnit, $stack8;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

     label1:
        $stack4 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit>;

        $stack5 = virtualinvoke $stack4.<javax.swing.JTextField: java.lang.String getText()>();

        newTickUnit = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($stack5);

     label2:
        goto label4;

     label3:
        $stack14 := @caughtexception;

        newTickUnit = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double manualTickUnitValue>;

     label4:
        $stack7 = newTickUnit cmpl 0.0;

        if $stack7 <= 0 goto label5;

        $stack11 = newTickUnit cmpg 360.0;

        if $stack11 >= 0 goto label5;

        this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double manualTickUnitValue> = newTickUnit;

     label5:
        $stack9 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: javax.swing.JTextField manualTickUnit>;

        $stack8 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double manualTickUnitValue>;

        $stack10 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($stack8);

        virtualinvoke $stack9.<javax.swing.JTextField: void setText(java.lang.String)>($stack10);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void updatePlotProperties(org.jfree.chart.plot.Plot)
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        org.jfree.chart.plot.Plot plot;
        org.jfree.chart.plot.PolarPlot pp;
        org.jfree.chart.axis.NumberTickUnit $stack3;
        double $stack4, $stack5;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        plot := @parameter0: org.jfree.chart.plot.Plot;

        specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: void updatePlotProperties(org.jfree.chart.plot.Plot)>(plot);

        pp = (org.jfree.chart.plot.PolarPlot) plot;

        $stack3 = new org.jfree.chart.axis.NumberTickUnit;

        $stack4 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double manualTickUnitValue>;

        specialinvoke $stack3.<org.jfree.chart.axis.NumberTickUnit: void <init>(double)>($stack4);

        virtualinvoke pp.<org.jfree.chart.plot.PolarPlot: void setAngleTickUnit(org.jfree.chart.axis.TickUnit)>($stack3);

        $stack5 = this.<org.jfree.chart.editor.DefaultPolarPlotEditor: double angleOffsetValue>;

        virtualinvoke pp.<org.jfree.chart.plot.PolarPlot: void setAngleOffset(double)>($stack5);

        return;
    }

    public volatile org.jfree.chart.editor.DefaultAxisEditor getRangeAxisPropertyEditPanel()
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        org.jfree.chart.editor.DefaultAxisEditor $stack1;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        $stack1 = specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: org.jfree.chart.editor.DefaultAxisEditor getRangeAxisPropertyEditPanel()>();

        return $stack1;
    }

    public volatile org.jfree.chart.editor.DefaultAxisEditor getDomainAxisPropertyEditPanel()
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        org.jfree.chart.editor.DefaultAxisEditor $stack1;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        $stack1 = specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: org.jfree.chart.editor.DefaultAxisEditor getDomainAxisPropertyEditPanel()>();

        return $stack1;
    }

    public volatile java.awt.Paint getOutlinePaint()
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        $stack1 = specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: java.awt.Paint getOutlinePaint()>();

        return $stack1;
    }

    public volatile java.awt.Stroke getOutlineStroke()
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        $stack1 = specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: java.awt.Stroke getOutlineStroke()>();

        return $stack1;
    }

    public volatile java.awt.Paint getBackgroundPaint()
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        $stack1 = specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: java.awt.Paint getBackgroundPaint()>();

        return $stack1;
    }

    public volatile org.jfree.chart.ui.RectangleInsets getPlotInsets()
    {
        org.jfree.chart.editor.DefaultPolarPlotEditor this;
        org.jfree.chart.ui.RectangleInsets $stack1;

        this := @this: org.jfree.chart.editor.DefaultPolarPlotEditor;

        $stack1 = specialinvoke this.<org.jfree.chart.editor.DefaultPlotEditor: org.jfree.chart.ui.RectangleInsets getPlotInsets()>();

        return $stack1;
    }
}
