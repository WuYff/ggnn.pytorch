public class org.jfree.chart.title.LegendGraphic extends org.jfree.chart.block.AbstractBlock implements org.jfree.chart.block.Block, org.jfree.chart.util.PublicCloneable
{
    static final long serialVersionUID;
    private boolean shapeVisible;
    private transient java.awt.Shape shape;
    private org.jfree.chart.ui.RectangleAnchor shapeLocation;
    private org.jfree.chart.ui.RectangleAnchor shapeAnchor;
    private boolean shapeFilled;
    private transient java.awt.Paint fillPaint;
    private org.jfree.chart.ui.GradientPaintTransformer fillPaintTransformer;
    private boolean shapeOutlineVisible;
    private transient java.awt.Paint outlinePaint;
    private transient java.awt.Stroke outlineStroke;
    private boolean lineVisible;
    private transient java.awt.Shape line;
    private transient java.awt.Stroke lineStroke;
    private transient java.awt.Paint linePaint;
    static final boolean $assertionsDisabled;

    public void <init>(java.awt.Shape, java.awt.Paint)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Shape shape;
        java.awt.Paint fillPaint;
        org.jfree.chart.ui.RectangleAnchor $stack3, $stack4;
        org.jfree.chart.ui.StandardGradientPaintTransformer $stack5;

        this := @this: org.jfree.chart.title.LegendGraphic;

        shape := @parameter0: java.awt.Shape;

        fillPaint := @parameter1: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.block.AbstractBlock: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(shape, "shape");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(fillPaint, "fillPaint");

        this.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = 1;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> = shape;

        $stack3 = <org.jfree.chart.ui.RectangleAnchor: org.jfree.chart.ui.RectangleAnchor CENTER>;

        this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeAnchor> = $stack3;

        $stack4 = <org.jfree.chart.ui.RectangleAnchor: org.jfree.chart.ui.RectangleAnchor CENTER>;

        this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeLocation> = $stack4;

        this.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = 1;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint> = fillPaint;

        $stack5 = new org.jfree.chart.ui.StandardGradientPaintTransformer;

        specialinvoke $stack5.<org.jfree.chart.ui.StandardGradientPaintTransformer: void <init>()>();

        this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.GradientPaintTransformer fillPaintTransformer> = $stack5;

        virtualinvoke this.<org.jfree.chart.title.LegendGraphic: void setPadding(double,double,double,double)>(2.0, 2.0, 2.0, 2.0);

        return;
    }

    public boolean isShapeVisible()
    {
        org.jfree.chart.title.LegendGraphic this;
        boolean $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>;

        return $stack1;
    }

    public void setShapeVisible(boolean)
    {
        org.jfree.chart.title.LegendGraphic this;
        boolean visible;

        this := @this: org.jfree.chart.title.LegendGraphic;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible> = visible;

        return;
    }

    public java.awt.Shape getShape()
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Shape $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>;

        return $stack1;
    }

    public void setShape(java.awt.Shape)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Shape shape;

        this := @this: org.jfree.chart.title.LegendGraphic;

        shape := @parameter0: java.awt.Shape;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> = shape;

        return;
    }

    public boolean isShapeFilled()
    {
        org.jfree.chart.title.LegendGraphic this;
        boolean $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled>;

        return $stack1;
    }

    public void setShapeFilled(boolean)
    {
        org.jfree.chart.title.LegendGraphic this;
        boolean filled;

        this := @this: org.jfree.chart.title.LegendGraphic;

        filled := @parameter0: boolean;

        this.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled> = filled;

        return;
    }

    public java.awt.Paint getFillPaint()
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>;

        return $stack1;
    }

    public void setFillPaint(java.awt.Paint)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.title.LegendGraphic;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint> = paint;

        return;
    }

    public org.jfree.chart.ui.GradientPaintTransformer getFillPaintTransformer()
    {
        org.jfree.chart.title.LegendGraphic this;
        org.jfree.chart.ui.GradientPaintTransformer $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.GradientPaintTransformer fillPaintTransformer>;

        return $stack1;
    }

    public void setFillPaintTransformer(org.jfree.chart.ui.GradientPaintTransformer)
    {
        org.jfree.chart.ui.GradientPaintTransformer transformer;
        org.jfree.chart.title.LegendGraphic this;

        this := @this: org.jfree.chart.title.LegendGraphic;

        transformer := @parameter0: org.jfree.chart.ui.GradientPaintTransformer;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(transformer, "transformer");

        this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.GradientPaintTransformer fillPaintTransformer> = transformer;

        return;
    }

    public boolean isShapeOutlineVisible()
    {
        org.jfree.chart.title.LegendGraphic this;
        boolean $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible>;

        return $stack1;
    }

    public void setShapeOutlineVisible(boolean)
    {
        org.jfree.chart.title.LegendGraphic this;
        boolean visible;

        this := @this: org.jfree.chart.title.LegendGraphic;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible> = visible;

        return;
    }

    public java.awt.Paint getOutlinePaint()
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint>;

        return $stack1;
    }

    public void setOutlinePaint(java.awt.Paint)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.title.LegendGraphic;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = paint;

        return;
    }

    public java.awt.Stroke getOutlineStroke()
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke>;

        return $stack1;
    }

    public void setOutlineStroke(java.awt.Stroke)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Stroke stroke;

        this := @this: org.jfree.chart.title.LegendGraphic;

        stroke := @parameter0: java.awt.Stroke;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = stroke;

        return;
    }

    public org.jfree.chart.ui.RectangleAnchor getShapeAnchor()
    {
        org.jfree.chart.title.LegendGraphic this;
        org.jfree.chart.ui.RectangleAnchor $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeAnchor>;

        return $stack1;
    }

    public void setShapeAnchor(org.jfree.chart.ui.RectangleAnchor)
    {
        org.jfree.chart.ui.RectangleAnchor anchor;
        org.jfree.chart.title.LegendGraphic this;

        this := @this: org.jfree.chart.title.LegendGraphic;

        anchor := @parameter0: org.jfree.chart.ui.RectangleAnchor;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(anchor, "anchor");

        this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeAnchor> = anchor;

        return;
    }

    public org.jfree.chart.ui.RectangleAnchor getShapeLocation()
    {
        org.jfree.chart.title.LegendGraphic this;
        org.jfree.chart.ui.RectangleAnchor $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeLocation>;

        return $stack1;
    }

    public void setShapeLocation(org.jfree.chart.ui.RectangleAnchor)
    {
        org.jfree.chart.ui.RectangleAnchor location;
        org.jfree.chart.title.LegendGraphic this;

        this := @this: org.jfree.chart.title.LegendGraphic;

        location := @parameter0: org.jfree.chart.ui.RectangleAnchor;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(location, "location");

        this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeLocation> = location;

        return;
    }

    public boolean isLineVisible()
    {
        org.jfree.chart.title.LegendGraphic this;
        boolean $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>;

        return $stack1;
    }

    public void setLineVisible(boolean)
    {
        org.jfree.chart.title.LegendGraphic this;
        boolean visible;

        this := @this: org.jfree.chart.title.LegendGraphic;

        visible := @parameter0: boolean;

        this.<org.jfree.chart.title.LegendGraphic: boolean lineVisible> = visible;

        return;
    }

    public java.awt.Shape getLine()
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Shape $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>;

        return $stack1;
    }

    public void setLine(java.awt.Shape)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Shape line;

        this := @this: org.jfree.chart.title.LegendGraphic;

        line := @parameter0: java.awt.Shape;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = line;

        return;
    }

    public java.awt.Paint getLinePaint()
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint>;

        return $stack1;
    }

    public void setLinePaint(java.awt.Paint)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.title.LegendGraphic;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = paint;

        return;
    }

    public java.awt.Stroke getLineStroke()
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack1 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke>;

        return $stack1;
    }

    public void setLineStroke(java.awt.Stroke)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Stroke stroke;

        this := @this: org.jfree.chart.title.LegendGraphic;

        stroke := @parameter0: java.awt.Stroke;

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = stroke;

        return;
    }

    public org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.title.LegendGraphic this;
        org.jfree.chart.block.RectangleConstraint constraint, contentConstraint;
        org.jfree.chart.block.LengthConstraintType w, h, $stack10, $stack11, $stack12, $stack24, $stack25, $stack26, $stack32, $stack33, $stack34, $stack38, $stack39, $stack40;
        org.jfree.chart.ui.Size2D $stack14, $stack27, contentSize;
        double $stack15, $stack16, $stack17, $stack18, $stack28, $stack29;
        java.lang.AssertionError $stack23;
        java.lang.RuntimeException $stack30, $stack31, $stack35, $stack36, $stack37, $stack41, $stack42;
        java.awt.Graphics2D g2;
        boolean $stack13;

        this := @this: org.jfree.chart.title.LegendGraphic;

        g2 := @parameter0: java.awt.Graphics2D;

        constraint := @parameter1: org.jfree.chart.block.RectangleConstraint;

        contentConstraint = virtualinvoke this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(constraint);

        w = virtualinvoke contentConstraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getWidthConstraintType()>();

        h = virtualinvoke contentConstraint.<org.jfree.chart.block.RectangleConstraint: org.jfree.chart.block.LengthConstraintType getHeightConstraintType()>();

        contentSize = null;

        $stack10 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if w != $stack10 goto label03;

        $stack38 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack38 goto label01;

        contentSize = virtualinvoke this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.Size2D arrangeNN(java.awt.Graphics2D)>(g2);

        goto label09;

     label01:
        $stack39 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack39 goto label02;

        $stack42 = new java.lang.RuntimeException;

        specialinvoke $stack42.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack42;

     label02:
        $stack40 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack40 goto label09;

        $stack41 = new java.lang.RuntimeException;

        specialinvoke $stack41.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack41;

     label03:
        $stack11 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if w != $stack11 goto label06;

        $stack32 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack32 goto label04;

        $stack37 = new java.lang.RuntimeException;

        specialinvoke $stack37.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack37;

     label04:
        $stack33 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack33 goto label05;

        $stack36 = new java.lang.RuntimeException;

        specialinvoke $stack36.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack36;

     label05:
        $stack34 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack34 goto label09;

        $stack35 = new java.lang.RuntimeException;

        specialinvoke $stack35.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack35;

     label06:
        $stack12 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if w != $stack12 goto label09;

        $stack24 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType NONE>;

        if h != $stack24 goto label07;

        $stack31 = new java.lang.RuntimeException;

        specialinvoke $stack31.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack31;

     label07:
        $stack25 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType RANGE>;

        if h != $stack25 goto label08;

        $stack30 = new java.lang.RuntimeException;

        specialinvoke $stack30.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not yet implemented.");

        throw $stack30;

     label08:
        $stack26 = <org.jfree.chart.block.LengthConstraintType: org.jfree.chart.block.LengthConstraintType FIXED>;

        if h != $stack26 goto label09;

        $stack27 = new org.jfree.chart.ui.Size2D;

        $stack28 = virtualinvoke contentConstraint.<org.jfree.chart.block.RectangleConstraint: double getWidth()>();

        $stack29 = virtualinvoke contentConstraint.<org.jfree.chart.block.RectangleConstraint: double getHeight()>();

        specialinvoke $stack27.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack28, $stack29);

        contentSize = $stack27;

     label09:
        $stack13 = <org.jfree.chart.title.LegendGraphic: boolean $assertionsDisabled>;

        if $stack13 != 0 goto label10;

        if contentSize != null goto label10;

        $stack23 = new java.lang.AssertionError;

        specialinvoke $stack23.<java.lang.AssertionError: void <init>()>();

        throw $stack23;

     label10:
        $stack14 = new org.jfree.chart.ui.Size2D;

        $stack15 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getWidth()>();

        $stack16 = virtualinvoke this.<org.jfree.chart.title.LegendGraphic: double calculateTotalWidth(double)>($stack15);

        $stack17 = virtualinvoke contentSize.<org.jfree.chart.ui.Size2D: double getHeight()>();

        $stack18 = virtualinvoke this.<org.jfree.chart.title.LegendGraphic: double calculateTotalHeight(double)>($stack17);

        specialinvoke $stack14.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack16, $stack18);

        return $stack14;
    }

    protected org.jfree.chart.ui.Size2D arrangeNN(java.awt.Graphics2D)
    {
        java.awt.geom.Rectangle2D$Double $stack3;
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Shape $stack4, $stack5, $stack9, $stack14;
        org.jfree.chart.ui.Size2D $stack6;
        double $stack7, $stack8;
        java.awt.geom.Rectangle2D $stack10, $stack15, contentSize;
        java.awt.Graphics2D g2;

        this := @this: org.jfree.chart.title.LegendGraphic;

        g2 := @parameter0: java.awt.Graphics2D;

        $stack3 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack3.<java.awt.geom.Rectangle2D$Double: void <init>()>();

        contentSize = $stack3;

        $stack4 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>;

        if $stack4 == null goto label1;

        $stack14 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>;

        $stack15 = interfaceinvoke $stack14.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        virtualinvoke $stack3.<java.awt.geom.Rectangle2D: void setRect(java.awt.geom.Rectangle2D)>($stack15);

     label1:
        $stack5 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>;

        if $stack5 == null goto label2;

        $stack9 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>;

        $stack10 = interfaceinvoke $stack9.<java.awt.Shape: java.awt.geom.Rectangle2D getBounds2D()>();

        contentSize = virtualinvoke $stack3.<java.awt.geom.Rectangle2D: java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)>($stack10);

     label2:
        $stack6 = new org.jfree.chart.ui.Size2D;

        $stack7 = virtualinvoke contentSize.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack8 = virtualinvoke contentSize.<java.awt.geom.Rectangle2D: double getHeight()>();

        specialinvoke $stack6.<org.jfree.chart.ui.Size2D: void <init>(double,double)>($stack7, $stack8);

        return $stack6;
    }

    public void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Graphics2D g2;
        boolean $stack10, $stack11, $stack19, $stack23, $stack20;
        org.jfree.chart.ui.RectangleAnchor $stack12, $stack15, $stack32, $stack35;
        java.awt.Shape $stack14, $stack34, aLine;
        double $stack16, $stack17, $stack36, $stack37;
        java.awt.Paint $stack21, $stack25, $stack39, p;
        java.awt.Stroke $stack22, $stack40;
        java.awt.GradientPaint gp;
        org.jfree.chart.ui.GradientPaintTransformer $stack26;
        java.awt.geom.Rectangle2D area, area#2;
        java.awt.geom.Point2D location;

        this := @this: org.jfree.chart.title.LegendGraphic;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        area#2 = virtualinvoke this.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(area);

        virtualinvoke this.<org.jfree.chart.title.LegendGraphic: void drawBorder(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area#2);

        area#2 = virtualinvoke this.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimBorder(java.awt.geom.Rectangle2D)>(area#2);

        area#2 = virtualinvoke this.<org.jfree.chart.title.LegendGraphic: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(area#2);

        $stack10 = this.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>;

        if $stack10 == 0 goto label1;

        $stack32 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeLocation>;

        location = virtualinvoke $stack32.<org.jfree.chart.ui.RectangleAnchor: java.awt.geom.Point2D getAnchorPoint(java.awt.geom.Rectangle2D)>(area#2);

        $stack34 = virtualinvoke this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape getLine()>();

        $stack35 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeAnchor>;

        $stack36 = virtualinvoke location.<java.awt.geom.Point2D: double getX()>();

        $stack37 = virtualinvoke location.<java.awt.geom.Point2D: double getY()>();

        aLine = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape createTranslatedShape(java.awt.Shape,org.jfree.chart.ui.RectangleAnchor,double,double)>($stack34, $stack35, $stack36, $stack37);

        $stack39 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack39);

        $stack40 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack40);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(aLine);

     label1:
        $stack11 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>;

        if $stack11 == 0 goto label4;

        $stack12 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeLocation>;

        location = virtualinvoke $stack12.<org.jfree.chart.ui.RectangleAnchor: java.awt.geom.Point2D getAnchorPoint(java.awt.geom.Rectangle2D)>(area#2);

        $stack14 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>;

        $stack15 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeAnchor>;

        $stack16 = virtualinvoke location.<java.awt.geom.Point2D: double getX()>();

        $stack17 = virtualinvoke location.<java.awt.geom.Point2D: double getY()>();

        aLine = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape createTranslatedShape(java.awt.Shape,org.jfree.chart.ui.RectangleAnchor,double,double)>($stack14, $stack15, $stack16, $stack17);

        $stack19 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled>;

        if $stack19 == 0 goto label3;

        p = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>;

        $stack23 = p instanceof java.awt.GradientPaint;

        if $stack23 == 0 goto label2;

        $stack25 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>;

        gp = (java.awt.GradientPaint) $stack25;

        $stack26 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.GradientPaintTransformer fillPaintTransformer>;

        p = interfaceinvoke $stack26.<org.jfree.chart.ui.GradientPaintTransformer: java.awt.GradientPaint transform(java.awt.GradientPaint,java.awt.Shape)>(gp, aLine);

     label2:
        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(p);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(aLine);

     label3:
        $stack20 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible>;

        if $stack20 == 0 goto label4;

        $stack21 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack21);

        $stack22 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack22);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(aLine);

     label4:
        return;
    }

    public java.lang.Object draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.lang.Object)
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D area;
        java.lang.Object params;

        this := @this: org.jfree.chart.title.LegendGraphic;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        params := @parameter2: java.lang.Object;

        virtualinvoke this.<org.jfree.chart.title.LegendGraphic: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, area);

        return null;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack3, $stack4, $stack5, $stack8, $stack9, $stack10, $stack13, $stack16, $stack17, $stack18, $stack21, $stack24, $stack29, $stack30, $stack33, $stack36, $stack39, $stack40;
        org.jfree.chart.title.LegendGraphic that, this;
        java.awt.Shape $stack6, $stack7, $stack31, $stack32;
        java.awt.Paint $stack11, $stack12, $stack19, $stack20, $stack34, $stack35;
        org.jfree.chart.ui.GradientPaintTransformer $stack14, $stack15;
        java.awt.Stroke $stack22, $stack23, $stack37, $stack38;
        org.jfree.chart.ui.RectangleAnchor $stack25, $stack26, $stack27, $stack28;

        this := @this: org.jfree.chart.title.LegendGraphic;

        obj := @parameter0: java.lang.Object;

        $stack3 = obj instanceof org.jfree.chart.title.LegendGraphic;

        if $stack3 != 0 goto label01;

        return 0;

     label01:
        that = (org.jfree.chart.title.LegendGraphic) obj;

        $stack5 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>;

        $stack4 = that.<org.jfree.chart.title.LegendGraphic: boolean shapeVisible>;

        if $stack5 == $stack4 goto label02;

        return 0;

     label02:
        $stack7 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>;

        $stack6 = that.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>;

        $stack8 = staticinvoke <org.jfree.chart.util.ShapeUtils: boolean equal(java.awt.Shape,java.awt.Shape)>($stack7, $stack6);

        if $stack8 != 0 goto label03;

        return 0;

     label03:
        $stack10 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled>;

        $stack9 = that.<org.jfree.chart.title.LegendGraphic: boolean shapeFilled>;

        if $stack10 == $stack9 goto label04;

        return 0;

     label04:
        $stack12 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>;

        $stack11 = that.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>;

        $stack13 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack12, $stack11);

        if $stack13 != 0 goto label05;

        return 0;

     label05:
        $stack15 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.GradientPaintTransformer fillPaintTransformer>;

        $stack14 = that.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.GradientPaintTransformer fillPaintTransformer>;

        $stack16 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack15, $stack14);

        if $stack16 != 0 goto label06;

        return 0;

     label06:
        $stack18 = this.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible>;

        $stack17 = that.<org.jfree.chart.title.LegendGraphic: boolean shapeOutlineVisible>;

        if $stack18 == $stack17 goto label07;

        return 0;

     label07:
        $stack20 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint>;

        $stack19 = that.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint>;

        $stack21 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack20, $stack19);

        if $stack21 != 0 goto label08;

        return 0;

     label08:
        $stack23 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke>;

        $stack22 = that.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke>;

        $stack24 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack23, $stack22);

        if $stack24 != 0 goto label09;

        return 0;

     label09:
        $stack26 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeAnchor>;

        $stack25 = that.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeAnchor>;

        if $stack26 == $stack25 goto label10;

        return 0;

     label10:
        $stack28 = this.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeLocation>;

        $stack27 = that.<org.jfree.chart.title.LegendGraphic: org.jfree.chart.ui.RectangleAnchor shapeLocation>;

        if $stack28 == $stack27 goto label11;

        return 0;

     label11:
        $stack30 = this.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>;

        $stack29 = that.<org.jfree.chart.title.LegendGraphic: boolean lineVisible>;

        if $stack30 == $stack29 goto label12;

        return 0;

     label12:
        $stack32 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>;

        $stack31 = that.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>;

        $stack33 = staticinvoke <org.jfree.chart.util.ShapeUtils: boolean equal(java.awt.Shape,java.awt.Shape)>($stack32, $stack31);

        if $stack33 != 0 goto label13;

        return 0;

     label13:
        $stack35 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint>;

        $stack34 = that.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint>;

        $stack36 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack35, $stack34);

        if $stack36 != 0 goto label14;

        return 0;

     label14:
        $stack38 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke>;

        $stack37 = that.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke>;

        $stack39 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack38, $stack37);

        if $stack39 != 0 goto label15;

        return 0;

     label15:
        $stack40 = specialinvoke this.<org.jfree.chart.block.AbstractBlock: boolean equals(java.lang.Object)>(obj);

        return $stack40;
    }

    public int hashCode()
    {
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Paint $stack2;
        int $stack3, $stack4, result#2;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack3 = 37 * 193;

        $stack2 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>($stack2);

        result#2 = $stack3 + $stack4;

        return result#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.title.LegendGraphic this, clone;
        java.lang.Object $stack2;
        java.awt.Shape $stack3, $stack4, $stack5, $stack6;

        this := @this: org.jfree.chart.title.LegendGraphic;

        $stack2 = specialinvoke this.<org.jfree.chart.block.AbstractBlock: java.lang.Object clone()>();

        clone = (org.jfree.chart.title.LegendGraphic) $stack2;

        $stack3 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>;

        $stack4 = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape clone(java.awt.Shape)>($stack3);

        clone.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> = $stack4;

        $stack5 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>;

        $stack6 = staticinvoke <org.jfree.chart.util.ShapeUtils: java.awt.Shape clone(java.awt.Shape)>($stack5);

        clone.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = $stack6;

        return clone;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Shape $stack2, $stack6;
        java.awt.Paint $stack3, $stack4, $stack7;
        java.awt.Stroke $stack5, $stack8;

        this := @this: org.jfree.chart.title.LegendGraphic;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack4, stream);

        $stack5 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack5, stream);

        $stack6 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeShape(java.awt.Shape,java.io.ObjectOutputStream)>($stack6, stream);

        $stack7 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack7, stream);

        $stack8 = this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack8, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.title.LegendGraphic this;
        java.awt.Shape $stack2, $stack6;
        java.awt.Paint $stack3, $stack4, $stack7;
        java.awt.Stroke $stack5, $stack8;

        this := @this: org.jfree.chart.title.LegendGraphic;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape shape> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint fillPaint> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint outlinePaint> = $stack4;

        $stack5 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke outlineStroke> = $stack5;

        $stack6 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Shape readShape(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Shape line> = $stack6;

        $stack7 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Paint linePaint> = $stack7;

        $stack8 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendGraphic: java.awt.Stroke lineStroke> = $stack8;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack2;

        <org.jfree.chart.title.LegendGraphic: long serialVersionUID> = -1338791523854985009L;

        $stack0 = class "Lorg/jfree/chart/title/LegendGraphic;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        <org.jfree.chart.title.LegendGraphic: boolean $assertionsDisabled> = $stack2;

        return;
    }
}
