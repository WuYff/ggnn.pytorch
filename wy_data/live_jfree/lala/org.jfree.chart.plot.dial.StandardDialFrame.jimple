public class org.jfree.chart.plot.dial.StandardDialFrame extends org.jfree.chart.plot.dial.AbstractDialLayer implements org.jfree.chart.plot.dial.DialFrame, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    static final long serialVersionUID;
    private double radius;
    private transient java.awt.Paint backgroundPaint;
    private transient java.awt.Paint foregroundPaint;
    private transient java.awt.Stroke stroke;

    public void <init>()
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;
        java.awt.Color $stack1, $stack2;
        java.awt.BasicStroke $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: void <init>()>();

        $stack1 = <java.awt.Color: java.awt.Color GRAY>;

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint> = $stack1;

        $stack2 = <java.awt.Color: java.awt.Color BLACK>;

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint> = $stack2;

        $stack3 = new java.awt.BasicStroke;

        specialinvoke $stack3.<java.awt.BasicStroke: void <init>(float)>(2.0F);

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke> = $stack3;

        this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius> = 0.95;

        return;
    }

    public double getRadius()
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius>;

        return $stack1;
    }

    public void setRadius(double)
    {
        double radius;
        byte $stack3;
        org.jfree.chart.plot.dial.StandardDialFrame this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack4;
        java.lang.IllegalArgumentException $stack5;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        radius := @parameter0: double;

        $stack3 = radius cmpg 0.0;

        if $stack3 > 0 goto label1;

        $stack5 = new java.lang.IllegalArgumentException;

        specialinvoke $stack5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The \'radius\' must be positive.");

        throw $stack5;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius> = radius;

        $stack4 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack4.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialFrame: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack4);

        return;
    }

    public java.awt.Paint getBackgroundPaint()
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint>;

        return $stack1;
    }

    public void setBackgroundPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.StandardDialFrame this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialFrame: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Paint getForegroundPaint()
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint>;

        return $stack1;
    }

    public void setForegroundPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.StandardDialFrame this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialFrame: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Stroke getStroke()
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;
        java.awt.Stroke $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke>;

        return $stack1;
    }

    public void setStroke(java.awt.Stroke)
    {
        java.awt.Stroke stroke;
        org.jfree.chart.plot.dial.StandardDialFrame this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        stroke := @parameter0: java.awt.Stroke;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(stroke, "stroke");

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke> = stroke;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialFrame: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public java.awt.Shape getWindow(java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D frame, f;
        org.jfree.chart.plot.dial.StandardDialFrame this;
        double $stack3, $stack4, $stack7, $stack8, $stack9, $stack10;
        java.awt.geom.Ellipse2D$Double $stack6;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        frame := @parameter0: java.awt.geom.Rectangle2D;

        $stack4 = this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius>;

        $stack3 = this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius>;

        f = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack4, $stack3);

        $stack6 = new java.awt.geom.Ellipse2D$Double;

        $stack7 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getX()>();

        $stack8 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getY()>();

        $stack9 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack10 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getHeight()>();

        specialinvoke $stack6.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($stack7, $stack8, $stack9, $stack10);

        return $stack6;
    }

    public boolean isClippedToWindow()
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        return 0;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.dial.DialPlot, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;
        java.awt.geom.Rectangle2D frame, f, view;
        java.awt.Shape window;
        double $stack11, $stack12, $stack13, $stack14, $stack17, $stack18, $stack19, $stack20;
        java.awt.geom.Ellipse2D$Double $stack16;
        java.awt.geom.Area $stack21, $stack22;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack23, $stack25;
        java.awt.Stroke $stack24;
        org.jfree.chart.plot.dial.DialPlot plot;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.dial.DialPlot;

        frame := @parameter2: java.awt.geom.Rectangle2D;

        view := @parameter3: java.awt.geom.Rectangle2D;

        window = virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Shape getWindow(java.awt.geom.Rectangle2D)>(frame);

        $stack11 = this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius>;

        $stack14 = $stack11 + 0.02;

        $stack12 = this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius>;

        $stack13 = $stack12 + 0.02;

        f = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack14, $stack13);

        $stack16 = new java.awt.geom.Ellipse2D$Double;

        $stack17 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getX()>();

        $stack18 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getY()>();

        $stack19 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getWidth()>();

        $stack20 = virtualinvoke f.<java.awt.geom.Rectangle2D: double getHeight()>();

        specialinvoke $stack16.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>($stack17, $stack18, $stack19, $stack20);

        $stack21 = new java.awt.geom.Area;

        specialinvoke $stack21.<java.awt.geom.Area: void <init>(java.awt.Shape)>($stack16);

        $stack22 = new java.awt.geom.Area;

        specialinvoke $stack22.<java.awt.geom.Area: void <init>(java.awt.Shape)>(window);

        virtualinvoke $stack21.<java.awt.geom.Area: void subtract(java.awt.geom.Area)>($stack22);

        $stack23 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack23);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack21);

        $stack24 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke>;

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack24);

        $stack25 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack25);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>(window);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack16);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.plot.dial.StandardDialFrame this, that;
        boolean $stack3, $stack6, $stack9, $stack15, $stack16;
        java.awt.Paint $stack4, $stack5, $stack7, $stack8;
        double $stack10, $stack11;
        byte $stack12;
        java.awt.Stroke $stack13, $stack14;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.plot.dial.StandardDialFrame;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.plot.dial.StandardDialFrame) obj;

        $stack5 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint>;

        $stack4 = that.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint>;

        $stack6 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack5, $stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint>;

        $stack7 = that.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint>;

        $stack9 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack11 = this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius>;

        $stack10 = that.<org.jfree.chart.plot.dial.StandardDialFrame: double radius>;

        $stack12 = $stack11 cmpl $stack10;

        if $stack12 == 0 goto label5;

        return 0;

     label5:
        $stack14 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke>;

        $stack13 = that.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke>;

        $stack15 = virtualinvoke $stack14.<java.lang.Object: boolean equals(java.lang.Object)>($stack13);

        if $stack15 != 0 goto label6;

        return 0;

     label6:
        $stack16 = specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: boolean equals(java.lang.Object)>(obj);

        return $stack16;
    }

    public int hashCode()
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;
        double $stack4;
        long temp, $stack6, $stack7;
        int $stack8, $stack9, $stack11, $stack12, $stack14, $stack15, $stack17, $stack18, result#2;
        java.awt.Paint $stack10, $stack13;
        java.awt.Stroke $stack16;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        $stack4 = this.<org.jfree.chart.plot.dial.StandardDialFrame: double radius>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack4);

        $stack9 = 37 * 193;

        $stack6 = temp >>> 32;

        $stack7 = temp ^ $stack6;

        $stack8 = (int) $stack7;

        result#2 = $stack9 + $stack8;

        $stack11 = 37 * result#2;

        $stack10 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint>;

        $stack12 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack10);

        result#2 = $stack11 + $stack12;

        $stack14 = 37 * result#2;

        $stack13 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint>;

        $stack15 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack13);

        result#2 = $stack14 + $stack15;

        $stack17 = 37 * result#2;

        $stack16 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke>;

        $stack18 = virtualinvoke $stack16.<java.lang.Object: int hashCode()>();

        result#2 = $stack17 + $stack18;

        return result#2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.plot.dial.StandardDialFrame this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        $stack1 = specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.plot.dial.StandardDialFrame this;
        java.awt.Paint $stack2, $stack3;
        java.awt.Stroke $stack4;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        $stack4 = this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writeStroke(java.awt.Stroke,java.io.ObjectOutputStream)>($stack4, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.plot.dial.StandardDialFrame this;
        java.awt.Paint $stack2, $stack3;
        java.awt.Stroke $stack4;

        this := @this: org.jfree.chart.plot.dial.StandardDialFrame;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint backgroundPaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Paint foregroundPaint> = $stack3;

        $stack4 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Stroke readStroke(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialFrame: java.awt.Stroke stroke> = $stack4;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.plot.dial.StandardDialFrame: long serialVersionUID> = 1016585407507121596L;

        return;
    }
}
