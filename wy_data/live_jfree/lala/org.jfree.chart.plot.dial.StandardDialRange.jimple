public class org.jfree.chart.plot.dial.StandardDialRange extends org.jfree.chart.plot.dial.AbstractDialLayer implements org.jfree.chart.plot.dial.DialLayer, java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    static final long serialVersionUID;
    private int scaleIndex;
    private double lowerBound;
    private double upperBound;
    private transient java.awt.Paint paint;
    private double innerRadius;
    private double outerRadius;

    public void <init>()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        java.awt.Color $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack1 = <java.awt.Color: java.awt.Color WHITE>;

        specialinvoke this.<org.jfree.chart.plot.dial.StandardDialRange: void <init>(double,double,java.awt.Paint)>(0.0, 100.0, $stack1);

        return;
    }

    public void <init>(double, double, java.awt.Paint)
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        java.awt.Paint paint;
        double lower, upper;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        lower := @parameter0: double;

        upper := @parameter1: double;

        paint := @parameter2: java.awt.Paint;

        specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.StandardDialRange: int scaleIndex> = 0;

        this.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound> = lower;

        this.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound> = upper;

        this.<org.jfree.chart.plot.dial.StandardDialRange: double innerRadius> = 0.48;

        this.<org.jfree.chart.plot.dial.StandardDialRange: double outerRadius> = 0.52;

        this.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint> = paint;

        return;
    }

    public int getScaleIndex()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        int $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialRange: int scaleIndex>;

        return $stack1;
    }

    public void setScaleIndex(int)
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        int index;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        index := @parameter0: int;

        this.<org.jfree.chart.plot.dial.StandardDialRange: int scaleIndex> = index;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialRange: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public double getLowerBound()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound>;

        return $stack1;
    }

    public void setLowerBound(double)
    {
        double bound, $stack3;
        org.jfree.chart.plot.dial.StandardDialRange this;
        byte $stack4;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack5;
        java.lang.IllegalArgumentException $stack6;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        bound := @parameter0: double;

        $stack3 = this.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound>;

        $stack4 = bound cmpl $stack3;

        if $stack4 < 0 goto label1;

        $stack6 = new java.lang.IllegalArgumentException;

        specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lower bound must be less than upper bound.");

        throw $stack6;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound> = bound;

        $stack5 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack5.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialRange: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack5);

        return;
    }

    public double getUpperBound()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound>;

        return $stack1;
    }

    public void setUpperBound(double)
    {
        double bound, $stack3;
        org.jfree.chart.plot.dial.StandardDialRange this;
        byte $stack4;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack5;
        java.lang.IllegalArgumentException $stack6;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        bound := @parameter0: double;

        $stack3 = this.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound>;

        $stack4 = bound cmpg $stack3;

        if $stack4 > 0 goto label1;

        $stack6 = new java.lang.IllegalArgumentException;

        specialinvoke $stack6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lower bound must be less than upper bound.");

        throw $stack6;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound> = bound;

        $stack5 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack5.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialRange: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack5);

        return;
    }

    public void setBounds(double, double)
    {
        double lower, upper;
        byte $stack5;
        org.jfree.chart.plot.dial.StandardDialRange this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack6;
        java.lang.IllegalArgumentException $stack7;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        lower := @parameter0: double;

        upper := @parameter1: double;

        $stack5 = lower cmpl upper;

        if $stack5 < 0 goto label1;

        $stack7 = new java.lang.IllegalArgumentException;

        specialinvoke $stack7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Lower must be less than upper.");

        throw $stack7;

     label1:
        this.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound> = lower;

        this.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound> = upper;

        $stack6 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack6.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialRange: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack6);

        return;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint>;

        return $stack1;
    }

    public void setPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.plot.dial.StandardDialRange this;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint> = paint;

        $stack2 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialRange: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack2);

        return;
    }

    public double getInnerRadius()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialRange: double innerRadius>;

        return $stack1;
    }

    public void setInnerRadius(double)
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        double radius;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        radius := @parameter0: double;

        this.<org.jfree.chart.plot.dial.StandardDialRange: double innerRadius> = radius;

        $stack3 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialRange: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack3);

        return;
    }

    public double getOuterRadius()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        double $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack1 = this.<org.jfree.chart.plot.dial.StandardDialRange: double outerRadius>;

        return $stack1;
    }

    public void setOuterRadius(double)
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        double radius;
        org.jfree.chart.plot.dial.DialLayerChangeEvent $stack3;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        radius := @parameter0: double;

        this.<org.jfree.chart.plot.dial.StandardDialRange: double outerRadius> = radius;

        $stack3 = new org.jfree.chart.plot.dial.DialLayerChangeEvent;

        specialinvoke $stack3.<org.jfree.chart.plot.dial.DialLayerChangeEvent: void <init>(org.jfree.chart.plot.dial.DialLayer)>(this);

        virtualinvoke this.<org.jfree.chart.plot.dial.StandardDialRange: void notifyListeners(org.jfree.chart.plot.dial.DialLayerChangeEvent)>($stack3);

        return;
    }

    public boolean isClippedToWindow()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        return 1;
    }

    public void draw(java.awt.Graphics2D, org.jfree.chart.plot.dial.DialPlot, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D)
    {
        java.awt.geom.Rectangle2D frame, arcRectInner, arcRectOuter, view;
        org.jfree.chart.plot.dial.StandardDialRange this;
        double $stack14, $stack15, $stack17, $stack18, $stack22, angleMin, $stack24, angleMax, $stack27, $stack29;
        org.jfree.chart.plot.dial.DialPlot plot;
        int $stack20, $stack35;
        org.jfree.chart.plot.dial.DialScale scale;
        java.awt.geom.Arc2D$Double $stack26, $stack28;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack30;
        java.awt.BasicStroke $stack31;
        java.lang.RuntimeException $stack32;
        java.lang.StringBuilder $stack33, $stack34, $stack36;
        java.lang.String $stack37;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        g2 := @parameter0: java.awt.Graphics2D;

        plot := @parameter1: org.jfree.chart.plot.dial.DialPlot;

        frame := @parameter2: java.awt.geom.Rectangle2D;

        view := @parameter3: java.awt.geom.Rectangle2D;

        $stack15 = this.<org.jfree.chart.plot.dial.StandardDialRange: double innerRadius>;

        $stack14 = this.<org.jfree.chart.plot.dial.StandardDialRange: double innerRadius>;

        arcRectInner = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack15, $stack14);

        $stack18 = this.<org.jfree.chart.plot.dial.StandardDialRange: double outerRadius>;

        $stack17 = this.<org.jfree.chart.plot.dial.StandardDialRange: double outerRadius>;

        arcRectOuter = staticinvoke <org.jfree.chart.plot.dial.DialPlot: java.awt.geom.Rectangle2D rectangleByRadius(java.awt.geom.Rectangle2D,double,double)>(frame, $stack18, $stack17);

        $stack20 = this.<org.jfree.chart.plot.dial.StandardDialRange: int scaleIndex>;

        scale = virtualinvoke plot.<org.jfree.chart.plot.dial.DialPlot: org.jfree.chart.plot.dial.DialScale getScale(int)>($stack20);

        if scale != null goto label1;

        $stack32 = new java.lang.RuntimeException;

        $stack33 = new java.lang.StringBuilder;

        specialinvoke $stack33.<java.lang.StringBuilder: void <init>()>();

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No scale for scaleIndex = ");

        $stack35 = this.<org.jfree.chart.plot.dial.StandardDialRange: int scaleIndex>;

        $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack32.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack37);

        throw $stack32;

     label1:
        $stack22 = this.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound>;

        angleMin = interfaceinvoke scale.<org.jfree.chart.plot.dial.DialScale: double valueToAngle(double)>($stack22);

        $stack24 = this.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound>;

        angleMax = interfaceinvoke scale.<org.jfree.chart.plot.dial.DialScale: double valueToAngle(double)>($stack24);

        $stack26 = new java.awt.geom.Arc2D$Double;

        $stack27 = angleMax - angleMin;

        specialinvoke $stack26.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(arcRectInner, angleMin, $stack27, 0);

        $stack28 = new java.awt.geom.Arc2D$Double;

        $stack29 = angleMin - angleMax;

        specialinvoke $stack28.<java.awt.geom.Arc2D$Double: void <init>(java.awt.geom.Rectangle2D,double,double,int)>(arcRectOuter, angleMax, $stack29, 0);

        $stack30 = this.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack30);

        $stack31 = new java.awt.BasicStroke;

        specialinvoke $stack31.<java.awt.BasicStroke: void <init>(float)>(2.0F);

        virtualinvoke g2.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($stack31);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack26);

        virtualinvoke g2.<java.awt.Graphics2D: void draw(java.awt.Shape)>($stack28);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.plot.dial.StandardDialRange this, that;
        boolean $stack3, $stack14, $stack21;
        int $stack4, $stack5;
        double $stack6, $stack7, $stack9, $stack10, $stack15, $stack16, $stack18, $stack19;
        byte $stack8, $stack11, $stack17, $stack20;
        java.awt.Paint $stack12, $stack13;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.plot.dial.StandardDialRange;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.plot.dial.StandardDialRange) obj;

        $stack5 = this.<org.jfree.chart.plot.dial.StandardDialRange: int scaleIndex>;

        $stack4 = that.<org.jfree.chart.plot.dial.StandardDialRange: int scaleIndex>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack7 = this.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound>;

        $stack6 = that.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound>;

        $stack8 = $stack7 cmpl $stack6;

        if $stack8 == 0 goto label4;

        return 0;

     label4:
        $stack10 = this.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound>;

        $stack9 = that.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound>;

        $stack11 = $stack10 cmpl $stack9;

        if $stack11 == 0 goto label5;

        return 0;

     label5:
        $stack13 = this.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint>;

        $stack12 = that.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint>;

        $stack14 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack13, $stack12);

        if $stack14 != 0 goto label6;

        return 0;

     label6:
        $stack16 = this.<org.jfree.chart.plot.dial.StandardDialRange: double innerRadius>;

        $stack15 = that.<org.jfree.chart.plot.dial.StandardDialRange: double innerRadius>;

        $stack17 = $stack16 cmpl $stack15;

        if $stack17 == 0 goto label7;

        return 0;

     label7:
        $stack19 = this.<org.jfree.chart.plot.dial.StandardDialRange: double outerRadius>;

        $stack18 = that.<org.jfree.chart.plot.dial.StandardDialRange: double outerRadius>;

        $stack20 = $stack19 cmpl $stack18;

        if $stack20 == 0 goto label8;

        return 0;

     label8:
        $stack21 = specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: boolean equals(java.lang.Object)>(obj);

        return $stack21;
    }

    public int hashCode()
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        double $stack4, $stack10, $stack16, $stack22;
        long $stack6, $stack7, $stack12, $stack13, $stack18, $stack19, $stack24, $stack25, temp;
        int $stack8, $stack9, $stack14, $stack15, $stack20, $stack21, $stack26, $stack27, $stack29, $stack30, result#3;
        java.awt.Paint $stack28;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack4 = this.<org.jfree.chart.plot.dial.StandardDialRange: double lowerBound>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack4);

        $stack9 = 37 * 193;

        $stack6 = temp >>> 32;

        $stack7 = temp ^ $stack6;

        $stack8 = (int) $stack7;

        result#3 = $stack9 + $stack8;

        $stack10 = this.<org.jfree.chart.plot.dial.StandardDialRange: double upperBound>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack10);

        $stack15 = 37 * result#3;

        $stack12 = temp >>> 32;

        $stack13 = temp ^ $stack12;

        $stack14 = (int) $stack13;

        result#3 = $stack15 + $stack14;

        $stack16 = this.<org.jfree.chart.plot.dial.StandardDialRange: double innerRadius>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack16);

        $stack21 = 37 * result#3;

        $stack18 = temp >>> 32;

        $stack19 = temp ^ $stack18;

        $stack20 = (int) $stack19;

        result#3 = $stack21 + $stack20;

        $stack22 = this.<org.jfree.chart.plot.dial.StandardDialRange: double outerRadius>;

        temp = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($stack22);

        $stack27 = 37 * result#3;

        $stack24 = temp >>> 32;

        $stack25 = temp ^ $stack24;

        $stack26 = (int) $stack25;

        result#3 = $stack27 + $stack26;

        $stack29 = 37 * result#3;

        $stack28 = this.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint>;

        $stack30 = staticinvoke <org.jfree.chart.HashUtils: int hashCodeForPaint(java.awt.Paint)>($stack28);

        result#3 = $stack29 + $stack30;

        return result#3;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.jfree.chart.plot.dial.StandardDialRange this;
        java.lang.Object $stack1;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        $stack1 = specialinvoke this.<org.jfree.chart.plot.dial.AbstractDialLayer: java.lang.Object clone()>();

        return $stack1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.plot.dial.StandardDialRange this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.plot.dial.StandardDialRange this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.plot.dial.StandardDialRange;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.plot.dial.StandardDialRange: java.awt.Paint paint> = $stack2;

        return;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.plot.dial.StandardDialRange: long serialVersionUID> = 345515648249364904L;

        return;
    }
}
