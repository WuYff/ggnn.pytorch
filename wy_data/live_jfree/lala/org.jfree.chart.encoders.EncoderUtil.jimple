public class org.jfree.chart.encoders.EncoderUtil extends java.lang.Object
{

    public void <init>()
    {
        org.jfree.chart.encoders.EncoderUtil this;

        this := @this: org.jfree.chart.encoders.EncoderUtil;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] encode(java.awt.image.BufferedImage, java.lang.String) throws java.io.IOException
    {
        java.lang.String format;
        org.jfree.chart.encoders.ImageEncoder imageEncoder;
        java.awt.image.BufferedImage image;
        byte[] $stack4;

        image := @parameter0: java.awt.image.BufferedImage;

        format := @parameter1: java.lang.String;

        imageEncoder = staticinvoke <org.jfree.chart.encoders.ImageEncoderFactory: org.jfree.chart.encoders.ImageEncoder newInstance(java.lang.String)>(format);

        $stack4 = interfaceinvoke imageEncoder.<org.jfree.chart.encoders.ImageEncoder: byte[] encode(java.awt.image.BufferedImage)>(image);

        return $stack4;
    }

    public static byte[] encode(java.awt.image.BufferedImage, java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.String format;
        boolean encodeAlpha;
        org.jfree.chart.encoders.ImageEncoder imageEncoder;
        java.awt.image.BufferedImage image;
        byte[] $stack5;

        image := @parameter0: java.awt.image.BufferedImage;

        format := @parameter1: java.lang.String;

        encodeAlpha := @parameter2: boolean;

        imageEncoder = staticinvoke <org.jfree.chart.encoders.ImageEncoderFactory: org.jfree.chart.encoders.ImageEncoder newInstance(java.lang.String,boolean)>(format, encodeAlpha);

        $stack5 = interfaceinvoke imageEncoder.<org.jfree.chart.encoders.ImageEncoder: byte[] encode(java.awt.image.BufferedImage)>(image);

        return $stack5;
    }

    public static byte[] encode(java.awt.image.BufferedImage, java.lang.String, float) throws java.io.IOException
    {
        java.lang.String format;
        float quality;
        org.jfree.chart.encoders.ImageEncoder imageEncoder;
        java.awt.image.BufferedImage image;
        byte[] $stack5;

        image := @parameter0: java.awt.image.BufferedImage;

        format := @parameter1: java.lang.String;

        quality := @parameter2: float;

        imageEncoder = staticinvoke <org.jfree.chart.encoders.ImageEncoderFactory: org.jfree.chart.encoders.ImageEncoder newInstance(java.lang.String,float)>(format, quality);

        $stack5 = interfaceinvoke imageEncoder.<org.jfree.chart.encoders.ImageEncoder: byte[] encode(java.awt.image.BufferedImage)>(image);

        return $stack5;
    }

    public static byte[] encode(java.awt.image.BufferedImage, java.lang.String, float, boolean) throws java.io.IOException
    {
        java.lang.String format;
        float quality;
        boolean encodeAlpha;
        org.jfree.chart.encoders.ImageEncoder imageEncoder;
        java.awt.image.BufferedImage image;
        byte[] $stack6;

        image := @parameter0: java.awt.image.BufferedImage;

        format := @parameter1: java.lang.String;

        quality := @parameter2: float;

        encodeAlpha := @parameter3: boolean;

        imageEncoder = staticinvoke <org.jfree.chart.encoders.ImageEncoderFactory: org.jfree.chart.encoders.ImageEncoder newInstance(java.lang.String,float,boolean)>(format, quality, encodeAlpha);

        $stack6 = interfaceinvoke imageEncoder.<org.jfree.chart.encoders.ImageEncoder: byte[] encode(java.awt.image.BufferedImage)>(image);

        return $stack6;
    }

    public static void writeBufferedImage(java.awt.image.BufferedImage, java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.lang.String format;
        org.jfree.chart.encoders.ImageEncoder imageEncoder;
        java.awt.image.BufferedImage image;
        java.io.OutputStream outputStream;

        image := @parameter0: java.awt.image.BufferedImage;

        format := @parameter1: java.lang.String;

        outputStream := @parameter2: java.io.OutputStream;

        imageEncoder = staticinvoke <org.jfree.chart.encoders.ImageEncoderFactory: org.jfree.chart.encoders.ImageEncoder newInstance(java.lang.String)>(format);

        interfaceinvoke imageEncoder.<org.jfree.chart.encoders.ImageEncoder: void encode(java.awt.image.BufferedImage,java.io.OutputStream)>(image, outputStream);

        return;
    }

    public static void writeBufferedImage(java.awt.image.BufferedImage, java.lang.String, java.io.OutputStream, float) throws java.io.IOException
    {
        java.lang.String format;
        float quality;
        org.jfree.chart.encoders.ImageEncoder imageEncoder;
        java.awt.image.BufferedImage image;
        java.io.OutputStream outputStream;

        image := @parameter0: java.awt.image.BufferedImage;

        format := @parameter1: java.lang.String;

        outputStream := @parameter2: java.io.OutputStream;

        quality := @parameter3: float;

        imageEncoder = staticinvoke <org.jfree.chart.encoders.ImageEncoderFactory: org.jfree.chart.encoders.ImageEncoder newInstance(java.lang.String,float)>(format, quality);

        interfaceinvoke imageEncoder.<org.jfree.chart.encoders.ImageEncoder: void encode(java.awt.image.BufferedImage,java.io.OutputStream)>(image, outputStream);

        return;
    }

    public static void writeBufferedImage(java.awt.image.BufferedImage, java.lang.String, java.io.OutputStream, boolean) throws java.io.IOException
    {
        java.lang.String format;
        boolean encodeAlpha;
        org.jfree.chart.encoders.ImageEncoder imageEncoder;
        java.awt.image.BufferedImage image;
        java.io.OutputStream outputStream;

        image := @parameter0: java.awt.image.BufferedImage;

        format := @parameter1: java.lang.String;

        outputStream := @parameter2: java.io.OutputStream;

        encodeAlpha := @parameter3: boolean;

        imageEncoder = staticinvoke <org.jfree.chart.encoders.ImageEncoderFactory: org.jfree.chart.encoders.ImageEncoder newInstance(java.lang.String,boolean)>(format, encodeAlpha);

        interfaceinvoke imageEncoder.<org.jfree.chart.encoders.ImageEncoder: void encode(java.awt.image.BufferedImage,java.io.OutputStream)>(image, outputStream);

        return;
    }

    public static void writeBufferedImage(java.awt.image.BufferedImage, java.lang.String, java.io.OutputStream, float, boolean) throws java.io.IOException
    {
        java.lang.String format;
        float quality;
        boolean encodeAlpha;
        org.jfree.chart.encoders.ImageEncoder imageEncoder;
        java.awt.image.BufferedImage image;
        java.io.OutputStream outputStream;

        image := @parameter0: java.awt.image.BufferedImage;

        format := @parameter1: java.lang.String;

        outputStream := @parameter2: java.io.OutputStream;

        quality := @parameter3: float;

        encodeAlpha := @parameter4: boolean;

        imageEncoder = staticinvoke <org.jfree.chart.encoders.ImageEncoderFactory: org.jfree.chart.encoders.ImageEncoder newInstance(java.lang.String,float,boolean)>(format, quality, encodeAlpha);

        interfaceinvoke imageEncoder.<org.jfree.chart.encoders.ImageEncoder: void encode(java.awt.image.BufferedImage,java.io.OutputStream)>(image, outputStream);

        return;
    }
}
