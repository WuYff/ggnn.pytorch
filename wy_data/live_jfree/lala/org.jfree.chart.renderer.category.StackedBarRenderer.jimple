public class org.jfree.chart.renderer.category.StackedBarRenderer extends org.jfree.chart.renderer.category.BarRenderer implements java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    static final long serialVersionUID;
    private boolean renderAsPercentages;

    public void <init>()
    {
        org.jfree.chart.renderer.category.StackedBarRenderer this;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        specialinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        org.jfree.chart.renderer.category.StackedBarRenderer this;
        boolean renderAsPercentages;
        org.jfree.chart.labels.ItemLabelPosition $stack3;
        org.jfree.chart.ui.TextAnchor $stack4;
        org.jfree.chart.labels.ItemLabelAnchor $stack5;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        renderAsPercentages := @parameter0: boolean;

        specialinvoke this.<org.jfree.chart.renderer.category.BarRenderer: void <init>()>();

        this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean renderAsPercentages> = renderAsPercentages;

        $stack3 = new org.jfree.chart.labels.ItemLabelPosition;

        $stack5 = <org.jfree.chart.labels.ItemLabelAnchor: org.jfree.chart.labels.ItemLabelAnchor CENTER>;

        $stack4 = <org.jfree.chart.ui.TextAnchor: org.jfree.chart.ui.TextAnchor CENTER>;

        specialinvoke $stack3.<org.jfree.chart.labels.ItemLabelPosition: void <init>(org.jfree.chart.labels.ItemLabelAnchor,org.jfree.chart.ui.TextAnchor)>($stack5, $stack4);

        virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: void setDefaultPositiveItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)>($stack3);

        virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: void setDefaultNegativeItemLabelPosition(org.jfree.chart.labels.ItemLabelPosition)>($stack3);

        virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: void setPositiveItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)>(null);

        virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: void setNegativeItemLabelPositionFallback(org.jfree.chart.labels.ItemLabelPosition)>(null);

        return;
    }

    public boolean getRenderAsPercentages()
    {
        org.jfree.chart.renderer.category.StackedBarRenderer this;
        boolean $stack1;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        $stack1 = this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean renderAsPercentages>;

        return $stack1;
    }

    public void setRenderAsPercentages(boolean)
    {
        org.jfree.chart.renderer.category.StackedBarRenderer this;
        boolean asPercentages;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        asPercentages := @parameter0: boolean;

        this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean renderAsPercentages> = asPercentages;

        virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: void fireChangeEvent()>();

        return;
    }

    public int getPassCount()
    {
        org.jfree.chart.renderer.category.StackedBarRenderer this;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        return 3;
    }

    public org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)
    {
        org.jfree.data.category.CategoryDataset dataset;
        org.jfree.chart.renderer.category.StackedBarRenderer this;
        boolean $stack2;
        double $stack3;
        org.jfree.data.Range $stack4, $stack5;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        dataset := @parameter0: org.jfree.data.category.CategoryDataset;

        if dataset != null goto label1;

        return null;

     label1:
        $stack2 = this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean renderAsPercentages>;

        if $stack2 == 0 goto label2;

        $stack5 = new org.jfree.data.Range;

        specialinvoke $stack5.<org.jfree.data.Range: void <init>(double,double)>(0.0, 1.0);

        return $stack5;

     label2:
        $stack3 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: double getBase()>();

        $stack4 = staticinvoke <org.jfree.data.general.DatasetUtils: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>(dataset, $stack3);

        return $stack4;
    }

    protected void calculateBarWidth(org.jfree.chart.plot.CategoryPlot, java.awt.geom.Rectangle2D, int, org.jfree.chart.renderer.category.CategoryItemRendererState)
    {
        org.jfree.chart.plot.CategoryPlot plot;
        int rendererIndex, columns;
        org.jfree.chart.axis.CategoryAxis xAxis;
        org.jfree.data.category.CategoryDataset data;
        org.jfree.chart.plot.PlotOrientation orientation, $stack20, $stack21;
        org.jfree.chart.renderer.category.StackedBarRenderer this;
        double maxWidth, $stack25, $stack26, $stack27, $stack28, $stack29, used, $stack30, $stack31, $stack32, $stack33, space, $stack22, categoryMargin;
        org.jfree.chart.renderer.category.CategoryItemRendererState state;
        java.awt.geom.Rectangle2D dataArea;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        plot := @parameter0: org.jfree.chart.plot.CategoryPlot;

        dataArea := @parameter1: java.awt.geom.Rectangle2D;

        rendererIndex := @parameter2: int;

        state := @parameter3: org.jfree.chart.renderer.category.CategoryItemRendererState;

        xAxis = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.axis.CategoryAxis getDomainAxisForDataset(int)>(rendererIndex);

        data = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.data.category.CategoryDataset getDataset(int)>(rendererIndex);

        if data == null goto label5;

        orientation = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        space = 0.0;

        $stack20 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack20 goto label1;

        space = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getHeight()>();

        goto label2;

     label1:
        $stack21 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation VERTICAL>;

        if orientation != $stack21 goto label2;

        space = virtualinvoke dataArea.<java.awt.geom.Rectangle2D: double getWidth()>();

     label2:
        $stack22 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: double getMaximumBarWidth()>();

        maxWidth = space * $stack22;

        columns = interfaceinvoke data.<org.jfree.data.category.CategoryDataset: int getColumnCount()>();

        categoryMargin = 0.0;

        if columns <= 1 goto label3;

        categoryMargin = virtualinvoke xAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryMargin()>();

     label3:
        $stack25 = virtualinvoke xAxis.<org.jfree.chart.axis.CategoryAxis: double getLowerMargin()>();

        $stack26 = 1.0 - $stack25;

        $stack27 = virtualinvoke xAxis.<org.jfree.chart.axis.CategoryAxis: double getUpperMargin()>();

        $stack28 = $stack26 - $stack27;

        $stack29 = $stack28 - categoryMargin;

        used = space * $stack29;

        if columns <= 0 goto label4;

        $stack31 = (double) columns;

        $stack32 = used / $stack31;

        $stack33 = staticinvoke <java.lang.Math: double min(double,double)>($stack32, maxWidth);

        virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: void setBarWidth(double)>($stack33);

        goto label5;

     label4:
        $stack30 = staticinvoke <java.lang.Math: double min(double,double)>(used, maxWidth);

        virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: void setBarWidth(double)>($stack30);

     label5:
        return;
    }

    public void drawItem(java.awt.Graphics2D, org.jfree.chart.renderer.category.CategoryItemRendererState, java.awt.geom.Rectangle2D, org.jfree.chart.plot.CategoryPlot, org.jfree.chart.axis.CategoryAxis, org.jfree.chart.axis.ValueAxis, org.jfree.data.category.CategoryDataset, int, int, int)
    {
        org.jfree.chart.renderer.category.StackedBarRenderer this;
        int row, column, $stack42, pass, i;
        boolean $stack37, $stack40, positive, inverted, $stack64, $stack77, $stack119, $stack121, $stack113, $stack81, $stack73;
        org.jfree.data.category.CategoryDataset dataset;
        java.lang.Number dataValue, v;
        org.jfree.chart.plot.CategoryPlot plot;
        org.jfree.chart.plot.PlotOrientation orientation, $stack50, $stack60;
        org.jfree.chart.axis.CategoryAxis domainAxis;
        java.awt.geom.Rectangle2D dataArea;
        org.jfree.chart.ui.RectangleEdge $stack43, location, barBase;
        double $stack44, $stack45, $stack46, barW0, $stack53, barL0, $stack56, $stack57, $stack58, barLength, $stack62, $stack79, $stack90, $stack94, $stack97, value, total, positiveBase, negativeBase, d, i#25;
        org.jfree.chart.renderer.category.CategoryItemRendererState state;
        byte $stack48, $stack65, $stack80, $stack91, $stack122;
        org.jfree.chart.axis.ValueAxis rangeAxis;
        java.awt.geom.Rectangle2D$Double $stack61, $stack72, $stack93, bar;
        java.awt.Graphics2D g2;
        org.jfree.chart.renderer.category.BarPainter $stack75, $stack78;
        int[] $stack125;
        org.jfree.chart.entity.EntityCollection pegToBase#48;
        org.jfree.chart.labels.CategoryItemLabelGenerator pegToBase#49;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        g2 := @parameter0: java.awt.Graphics2D;

        state := @parameter1: org.jfree.chart.renderer.category.CategoryItemRendererState;

        dataArea := @parameter2: java.awt.geom.Rectangle2D;

        plot := @parameter3: org.jfree.chart.plot.CategoryPlot;

        domainAxis := @parameter4: org.jfree.chart.axis.CategoryAxis;

        rangeAxis := @parameter5: org.jfree.chart.axis.ValueAxis;

        dataset := @parameter6: org.jfree.data.category.CategoryDataset;

        row := @parameter7: int;

        column := @parameter8: int;

        pass := @parameter9: int;

        $stack37 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean isSeriesVisible(int)>(row);

        if $stack37 != 0 goto label01;

        return;

     label01:
        dataValue = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(row, column);

        if dataValue != null goto label02;

        return;

     label02:
        value = virtualinvoke dataValue.<java.lang.Number: double doubleValue()>();

        total = 0.0;

        $stack40 = this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean renderAsPercentages>;

        if $stack40 == 0 goto label03;

        $stack125 = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: int[] getVisibleSeriesArray()>();

        total = staticinvoke <org.jfree.data.DataUtils: double calculateColumnTotal(org.jfree.data.Values2D,int,int[])>(dataset, column, $stack125);

        value = value / total;

     label03:
        orientation = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.plot.PlotOrientation getOrientation()>();

        $stack42 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: int getColumnCount()>();

        $stack43 = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getDomainAxisEdge()>();

        $stack44 = virtualinvoke domainAxis.<org.jfree.chart.axis.CategoryAxis: double getCategoryMiddle(int,int,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(column, $stack42, dataArea, $stack43);

        $stack45 = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: double getBarWidth()>();

        $stack46 = $stack45 / 2.0;

        barW0 = $stack44 - $stack46;

        positiveBase = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: double getBase()>();

        negativeBase = positiveBase;

        i = 0;

     label04:
        if i >= row goto label08;

        v = interfaceinvoke dataset.<org.jfree.data.category.CategoryDataset: java.lang.Number getValue(int,int)>(i, column);

        if v == null goto label07;

        $stack119 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean isSeriesVisible(int)>(i);

        if $stack119 == 0 goto label07;

        d = virtualinvoke v.<java.lang.Number: double doubleValue()>();

        $stack121 = this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean renderAsPercentages>;

        if $stack121 == 0 goto label05;

        d = d / total;

     label05:
        $stack122 = d cmpl 0.0;

        if $stack122 <= 0 goto label06;

        positiveBase = positiveBase + d;

        goto label07;

     label06:
        negativeBase = negativeBase + d;

     label07:
        i = i + 1;

        goto label04;

     label08:
        $stack48 = value cmpl 0.0;

        if $stack48 <= 0 goto label09;

        $stack113 = 1;

        goto label10;

     label09:
        $stack113 = 0;

     label10:
        positive = $stack113;

        inverted = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: boolean isInverted()>();

        $stack50 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack50 goto label14;

        if $stack113 == 0 goto label11;

        if inverted != 0 goto label12;

     label11:
        if positive != 0 goto label13;

        if inverted != 0 goto label13;

     label12:
        barBase = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge RIGHT>;

        goto label18;

     label13:
        barBase = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        goto label18;

     label14:
        if $stack113 == 0 goto label15;

        if inverted == 0 goto label16;

     label15:
        if positive != 0 goto label17;

        if inverted == 0 goto label17;

     label16:
        barBase = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge BOTTOM>;

        goto label18;

     label17:
        barBase = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge TOP>;

     label18:
        location = virtualinvoke plot.<org.jfree.chart.plot.CategoryPlot: org.jfree.chart.ui.RectangleEdge getRangeAxisEdge()>();

        if positive == 0 goto label19;

        i#25 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(positiveBase, dataArea, location);

        $stack97 = positiveBase + value;

        d = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack97, dataArea, location);

        goto label20;

     label19:
        i#25 = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>(negativeBase, dataArea, location);

        $stack53 = negativeBase + value;

        d = virtualinvoke rangeAxis.<org.jfree.chart.axis.ValueAxis: double valueToJava2D(double,java.awt.geom.Rectangle2D,org.jfree.chart.ui.RectangleEdge)>($stack53, dataArea, location);

     label20:
        barL0 = staticinvoke <java.lang.Math: double min(double,double)>(i#25, d);

        $stack56 = d - i#25;

        $stack57 = staticinvoke <java.lang.Math: double abs(double)>($stack56);

        $stack58 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: double getMinimumBarLength()>();

        barLength = staticinvoke <java.lang.Math: double max(double,double)>($stack57, $stack58);

        $stack60 = <org.jfree.chart.plot.PlotOrientation: org.jfree.chart.plot.PlotOrientation HORIZONTAL>;

        if orientation != $stack60 goto label21;

        $stack93 = new java.awt.geom.Rectangle2D$Double;

        $stack94 = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: double getBarWidth()>();

        specialinvoke $stack93.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(barL0, barW0, barLength, $stack94);

        bar = $stack93;

        goto label22;

     label21:
        $stack61 = new java.awt.geom.Rectangle2D$Double;

        $stack62 = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: double getBarWidth()>();

        specialinvoke $stack61.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(barW0, barL0, $stack62, barLength);

        bar = $stack61;

     label22:
        if pass != 0 goto label27;

        $stack77 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean getShadowsVisible()>();

        if $stack77 == 0 goto label32;

        if positive == 0 goto label23;

        $stack90 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: double getBase()>();

        $stack91 = positiveBase cmpl $stack90;

        if $stack91 == 0 goto label24;

     label23:
        if positive != 0 goto label25;

        $stack79 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: double getBase()>();

        $stack80 = negativeBase cmpl $stack79;

        if $stack80 != 0 goto label25;

     label24:
        $stack81 = 1;

        goto label26;

     label25:
        $stack81 = 0;

     label26:
        $stack78 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.chart.renderer.category.BarPainter getBarPainter()>();

        interfaceinvoke $stack78.<org.jfree.chart.renderer.category.BarPainter: void paintBarShadow(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,java.awt.geom.RectangularShape,org.jfree.chart.ui.RectangleEdge,boolean)>(g2, this, row, column, bar, barBase, $stack81);

        goto label32;

     label27:
        if pass != 1 goto label29;

        $stack75 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.chart.renderer.category.BarPainter getBarPainter()>();

        interfaceinvoke $stack75.<org.jfree.chart.renderer.category.BarPainter: void paintBar(java.awt.Graphics2D,org.jfree.chart.renderer.category.BarRenderer,int,int,java.awt.geom.RectangularShape,org.jfree.chart.ui.RectangleEdge)>(g2, this, row, column, bar, barBase);

        pegToBase#48 = virtualinvoke state.<org.jfree.chart.renderer.category.CategoryItemRendererState: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

        if pegToBase#48 == null goto label28;

        virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: void addItemEntity(org.jfree.chart.entity.EntityCollection,org.jfree.data.category.CategoryDataset,int,int,java.awt.Shape)>(pegToBase#48, dataset, row, column, bar);

     label28:
        goto label32;

     label29:
        if pass != 2 goto label32;

        pegToBase#49 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.chart.labels.CategoryItemLabelGenerator getItemLabelGenerator(int,int)>(row, column);

        if pegToBase#49 == null goto label32;

        $stack64 = virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean isItemLabelVisible(int,int)>(row, column);

        if $stack64 == 0 goto label32;

        $stack72 = bar;

        $stack65 = value cmpg 0.0;

        if $stack65 >= 0 goto label30;

        $stack73 = 1;

        goto label31;

     label30:
        $stack73 = 0;

     label31:
        virtualinvoke this.<org.jfree.chart.renderer.category.StackedBarRenderer: void drawItemLabel(java.awt.Graphics2D,org.jfree.data.category.CategoryDataset,int,int,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.labels.CategoryItemLabelGenerator,java.awt.geom.Rectangle2D,boolean)>(g2, dataset, row, column, plot, pegToBase#49, $stack72, $stack73);

     label32:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.renderer.category.StackedBarRenderer this, that;
        boolean $stack3, $stack4, $stack5, $stack6;

        this := @this: org.jfree.chart.renderer.category.StackedBarRenderer;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.renderer.category.StackedBarRenderer;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.renderer.category.StackedBarRenderer) obj;

        $stack5 = this.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean renderAsPercentages>;

        $stack4 = that.<org.jfree.chart.renderer.category.StackedBarRenderer: boolean renderAsPercentages>;

        if $stack5 == $stack4 goto label3;

        return 0;

     label3:
        $stack6 = specialinvoke this.<org.jfree.chart.renderer.category.BarRenderer: boolean equals(java.lang.Object)>(obj);

        return $stack6;
    }

    public static void <clinit>()
    {
        <org.jfree.chart.renderer.category.StackedBarRenderer: long serialVersionUID> = 6402943811500067531L;

        return;
    }
}
