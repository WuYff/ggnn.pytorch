public class org.jfree.chart.title.LegendTitle extends org.jfree.chart.title.Title implements java.lang.Cloneable, org.jfree.chart.util.PublicCloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final java.awt.Font DEFAULT_ITEM_FONT;
    public static final java.awt.Paint DEFAULT_ITEM_PAINT;
    private org.jfree.chart.LegendItemSource[] sources;
    private transient java.awt.Paint backgroundPaint;
    private org.jfree.chart.ui.RectangleEdge legendItemGraphicEdge;
    private org.jfree.chart.ui.RectangleAnchor legendItemGraphicAnchor;
    private org.jfree.chart.ui.RectangleAnchor legendItemGraphicLocation;
    private org.jfree.chart.ui.RectangleInsets legendItemGraphicPadding;
    private java.awt.Font itemFont;
    private transient java.awt.Paint itemPaint;
    private org.jfree.chart.ui.RectangleInsets itemLabelPadding;
    private org.jfree.chart.block.BlockContainer items;
    private org.jfree.chart.block.Arrangement hLayout;
    private org.jfree.chart.block.Arrangement vLayout;
    private org.jfree.chart.block.BlockContainer wrapper;
    private org.jfree.chart.util.SortOrder sortOrder;

    public void <init>(org.jfree.chart.LegendItemSource)
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.LegendItemSource source;
        org.jfree.chart.block.FlowArrangement $stack2;
        org.jfree.chart.block.ColumnArrangement $stack3;

        this := @this: org.jfree.chart.title.LegendTitle;

        source := @parameter0: org.jfree.chart.LegendItemSource;

        $stack2 = new org.jfree.chart.block.FlowArrangement;

        specialinvoke $stack2.<org.jfree.chart.block.FlowArrangement: void <init>()>();

        $stack3 = new org.jfree.chart.block.ColumnArrangement;

        specialinvoke $stack3.<org.jfree.chart.block.ColumnArrangement: void <init>()>();

        specialinvoke this.<org.jfree.chart.title.LegendTitle: void <init>(org.jfree.chart.LegendItemSource,org.jfree.chart.block.Arrangement,org.jfree.chart.block.Arrangement)>(source, $stack2, $stack3);

        return;
    }

    public void <init>(org.jfree.chart.LegendItemSource, org.jfree.chart.block.Arrangement, org.jfree.chart.block.Arrangement)
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.LegendItemSource[] $stack4;
        org.jfree.chart.LegendItemSource source;
        org.jfree.chart.block.BlockContainer $stack5;
        org.jfree.chart.block.Arrangement hLayout, vLayout;
        org.jfree.chart.ui.RectangleEdge $stack6;
        org.jfree.chart.ui.RectangleAnchor $stack7, $stack8;
        org.jfree.chart.ui.RectangleInsets $stack9, $stack12;
        java.awt.Font $stack10;
        java.awt.Paint $stack11;
        org.jfree.chart.util.SortOrder $stack13;

        this := @this: org.jfree.chart.title.LegendTitle;

        source := @parameter0: org.jfree.chart.LegendItemSource;

        hLayout := @parameter1: org.jfree.chart.block.Arrangement;

        vLayout := @parameter2: org.jfree.chart.block.Arrangement;

        specialinvoke this.<org.jfree.chart.title.Title: void <init>()>();

        $stack4 = newarray (org.jfree.chart.LegendItemSource)[1];

        $stack4[0] = source;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> = $stack4;

        $stack5 = new org.jfree.chart.block.BlockContainer;

        specialinvoke $stack5.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>(hLayout);

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items> = $stack5;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout> = hLayout;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout> = vLayout;

        this.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = null;

        $stack6 = <org.jfree.chart.ui.RectangleEdge: org.jfree.chart.ui.RectangleEdge LEFT>;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleEdge legendItemGraphicEdge> = $stack6;

        $stack7 = <org.jfree.chart.ui.RectangleAnchor: org.jfree.chart.ui.RectangleAnchor CENTER>;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicAnchor> = $stack7;

        $stack8 = <org.jfree.chart.ui.RectangleAnchor: org.jfree.chart.ui.RectangleAnchor CENTER>;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicLocation> = $stack8;

        $stack9 = new org.jfree.chart.ui.RectangleInsets;

        specialinvoke $stack9.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(2.0, 2.0, 2.0, 2.0);

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleInsets legendItemGraphicPadding> = $stack9;

        $stack10 = <org.jfree.chart.title.LegendTitle: java.awt.Font DEFAULT_ITEM_FONT>;

        this.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> = $stack10;

        $stack11 = <org.jfree.chart.title.LegendTitle: java.awt.Paint DEFAULT_ITEM_PAINT>;

        this.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = $stack11;

        $stack12 = new org.jfree.chart.ui.RectangleInsets;

        specialinvoke $stack12.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(2.0, 2.0, 2.0, 2.0);

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleInsets itemLabelPadding> = $stack12;

        $stack13 = <org.jfree.chart.util.SortOrder: org.jfree.chart.util.SortOrder ASCENDING>;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.util.SortOrder sortOrder> = $stack13;

        return;
    }

    public org.jfree.chart.LegendItemSource[] getSources()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.LegendItemSource[] $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>;

        return $stack1;
    }

    public void setSources(org.jfree.chart.LegendItemSource[])
    {
        org.jfree.chart.LegendItemSource[] sources;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.LegendTitle;

        sources := @parameter0: org.jfree.chart.LegendItemSource[];

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(sources, "sources");

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources> = sources;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public java.awt.Paint getBackgroundPaint()
    {
        org.jfree.chart.title.LegendTitle this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>;

        return $stack1;
    }

    public void setBackgroundPaint(java.awt.Paint)
    {
        org.jfree.chart.title.LegendTitle this;
        java.awt.Paint paint;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.LegendTitle;

        paint := @parameter0: java.awt.Paint;

        this.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = paint;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public org.jfree.chart.ui.RectangleEdge getLegendItemGraphicEdge()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.ui.RectangleEdge $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleEdge legendItemGraphicEdge>;

        return $stack1;
    }

    public void setLegendItemGraphicEdge(org.jfree.chart.ui.RectangleEdge)
    {
        org.jfree.chart.ui.RectangleEdge edge;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.LegendTitle;

        edge := @parameter0: org.jfree.chart.ui.RectangleEdge;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(edge, "edge");

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleEdge legendItemGraphicEdge> = edge;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public org.jfree.chart.ui.RectangleAnchor getLegendItemGraphicAnchor()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.ui.RectangleAnchor $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicAnchor>;

        return $stack1;
    }

    public void setLegendItemGraphicAnchor(org.jfree.chart.ui.RectangleAnchor)
    {
        org.jfree.chart.ui.RectangleAnchor anchor;
        org.jfree.chart.title.LegendTitle this;

        this := @this: org.jfree.chart.title.LegendTitle;

        anchor := @parameter0: org.jfree.chart.ui.RectangleAnchor;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(anchor, "anchor");

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicAnchor> = anchor;

        return;
    }

    public org.jfree.chart.ui.RectangleAnchor getLegendItemGraphicLocation()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.ui.RectangleAnchor $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicLocation>;

        return $stack1;
    }

    public void setLegendItemGraphicLocation(org.jfree.chart.ui.RectangleAnchor)
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.ui.RectangleAnchor anchor;

        this := @this: org.jfree.chart.title.LegendTitle;

        anchor := @parameter0: org.jfree.chart.ui.RectangleAnchor;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicLocation> = anchor;

        return;
    }

    public org.jfree.chart.ui.RectangleInsets getLegendItemGraphicPadding()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.ui.RectangleInsets $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleInsets legendItemGraphicPadding>;

        return $stack1;
    }

    public void setLegendItemGraphicPadding(org.jfree.chart.ui.RectangleInsets)
    {
        org.jfree.chart.ui.RectangleInsets padding;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.LegendTitle;

        padding := @parameter0: org.jfree.chart.ui.RectangleInsets;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(padding, "padding");

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleInsets legendItemGraphicPadding> = padding;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public java.awt.Font getItemFont()
    {
        org.jfree.chart.title.LegendTitle this;
        java.awt.Font $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>;

        return $stack1;
    }

    public void setItemFont(java.awt.Font)
    {
        java.awt.Font font;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.LegendTitle;

        font := @parameter0: java.awt.Font;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(font, "font");

        this.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont> = font;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public java.awt.Paint getItemPaint()
    {
        org.jfree.chart.title.LegendTitle this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>;

        return $stack1;
    }

    public void setItemPaint(java.awt.Paint)
    {
        java.awt.Paint paint;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.LegendTitle;

        paint := @parameter0: java.awt.Paint;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = paint;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public org.jfree.chart.ui.RectangleInsets getItemLabelPadding()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.ui.RectangleInsets $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleInsets itemLabelPadding>;

        return $stack1;
    }

    public void setItemLabelPadding(org.jfree.chart.ui.RectangleInsets)
    {
        org.jfree.chart.ui.RectangleInsets padding;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.LegendTitle;

        padding := @parameter0: org.jfree.chart.ui.RectangleInsets;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(padding, "padding");

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleInsets itemLabelPadding> = padding;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    public org.jfree.chart.util.SortOrder getSortOrder()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.util.SortOrder $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.util.SortOrder sortOrder>;

        return $stack1;
    }

    public void setSortOrder(org.jfree.chart.util.SortOrder)
    {
        org.jfree.chart.util.SortOrder order;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.event.TitleChangeEvent $stack2;

        this := @this: org.jfree.chart.title.LegendTitle;

        order := @parameter0: org.jfree.chart.util.SortOrder;

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(order, "order");

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.util.SortOrder sortOrder> = order;

        $stack2 = new org.jfree.chart.event.TitleChangeEvent;

        specialinvoke $stack2.<org.jfree.chart.event.TitleChangeEvent: void <init>(org.jfree.chart.title.Title)>(this);

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void notifyListeners(org.jfree.chart.event.TitleChangeEvent)>($stack2);

        return;
    }

    protected void fetchLegendItems()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.block.BlockContainer $stack5, $stack9, $stack34;
        org.jfree.chart.ui.RectangleEdge p;
        boolean $stack7, $stack12;
        org.jfree.chart.block.Arrangement $stack8, $stack33;
        org.jfree.chart.util.SortOrder $stack10, $stack11;
        org.jfree.chart.LegendItemSource[] $stack13, $stack15, $stack22, $stack24;
        int $stack14, $stack19, $stack23, $stack29, s, i;
        org.jfree.chart.LegendItemSource $stack16, $stack25;
        org.jfree.chart.LegendItem $stack20, $stack30;
        org.jfree.chart.LegendItemCollection legendItems;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack5 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>;

        virtualinvoke $stack5.<org.jfree.chart.block.BlockContainer: void clear()>();

        p = virtualinvoke this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleEdge getPosition()>();

        $stack7 = staticinvoke <org.jfree.chart.ui.RectangleEdge: boolean isTopOrBottom(org.jfree.chart.ui.RectangleEdge)>(p);

        if $stack7 == 0 goto label01;

        $stack34 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>;

        $stack33 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>;

        virtualinvoke $stack34.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($stack33);

        goto label02;

     label01:
        $stack9 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>;

        $stack8 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout>;

        virtualinvoke $stack9.<org.jfree.chart.block.BlockContainer: void setArrangement(org.jfree.chart.block.Arrangement)>($stack8);

     label02:
        $stack11 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.util.SortOrder sortOrder>;

        $stack10 = <org.jfree.chart.util.SortOrder: org.jfree.chart.util.SortOrder ASCENDING>;

        $stack12 = virtualinvoke $stack11.<org.jfree.chart.util.SortOrder: boolean equals(java.lang.Object)>($stack10);

        if $stack12 == 0 goto label07;

        s = 0;

     label03:
        $stack22 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>;

        $stack23 = lengthof $stack22;

        if s >= $stack23 goto label06;

        $stack24 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>;

        $stack25 = $stack24[s];

        legendItems = interfaceinvoke $stack25.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>();

        if legendItems == null goto label05;

        i = 0;

     label04:
        $stack29 = virtualinvoke legendItems.<org.jfree.chart.LegendItemCollection: int getItemCount()>();

        if i >= $stack29 goto label05;

        $stack30 = virtualinvoke legendItems.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i);

        specialinvoke this.<org.jfree.chart.title.LegendTitle: void addItemBlock(org.jfree.chart.LegendItem)>($stack30);

        i = i + 1;

        goto label04;

     label05:
        s = s + 1;

        goto label03;

     label06:
        goto label11;

     label07:
        $stack13 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>;

        $stack14 = lengthof $stack13;

        s = $stack14 - 1;

     label08:
        if s < 0 goto label11;

        $stack15 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.LegendItemSource[] sources>;

        $stack16 = $stack15[s];

        legendItems = interfaceinvoke $stack16.<org.jfree.chart.LegendItemSource: org.jfree.chart.LegendItemCollection getLegendItems()>();

        if legendItems == null goto label10;

        $stack19 = virtualinvoke legendItems.<org.jfree.chart.LegendItemCollection: int getItemCount()>();

        i = $stack19 - 1;

     label09:
        if i < 0 goto label10;

        $stack20 = virtualinvoke legendItems.<org.jfree.chart.LegendItemCollection: org.jfree.chart.LegendItem get(int)>(i);

        specialinvoke this.<org.jfree.chart.title.LegendTitle: void addItemBlock(org.jfree.chart.LegendItem)>($stack20);

        i = i + -1;

        goto label09;

     label10:
        s = s + -1;

        goto label08;

     label11:
        return;
    }

    private void addItemBlock(org.jfree.chart.LegendItem)
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.LegendItem item;
        org.jfree.chart.block.Block block;
        org.jfree.chart.block.BlockContainer $stack4;

        this := @this: org.jfree.chart.title.LegendTitle;

        item := @parameter0: org.jfree.chart.LegendItem;

        block = virtualinvoke this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>(item);

        $stack4 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>;

        virtualinvoke $stack4.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>(block);

        return;
    }

    protected org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)
    {
        org.jfree.chart.title.LegendGraphic $stack8;
        org.jfree.chart.LegendItem item;
        java.awt.Shape $stack9, $stack13;
        java.awt.Paint $stack10, $stack15, $stack19, textPaint;
        org.jfree.chart.ui.GradientPaintTransformer $stack11;
        boolean $stack12, $stack16, $stack17, $stack18;
        java.awt.Stroke $stack14, $stack20;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.ui.RectangleInsets $stack21, $stack33;
        org.jfree.chart.title.LegendItemBlockContainer $stack22;
        org.jfree.chart.block.BorderArrangement $stack23;
        org.jfree.data.general.Dataset $stack24;
        java.lang.Comparable $stack25;
        org.jfree.chart.ui.RectangleAnchor $stack26, $stack27;
        org.jfree.chart.ui.RectangleEdge $stack28;
        org.jfree.chart.block.LabelBlock $stack31;
        java.lang.String $stack32, $stack34, $stack35;
        org.jfree.chart.block.BlockContainer $stack36;
        org.jfree.chart.block.CenterArrangement $stack37;
        java.awt.Font textFont;

        this := @this: org.jfree.chart.title.LegendTitle;

        item := @parameter0: org.jfree.chart.LegendItem;

        $stack8 = new org.jfree.chart.title.LegendGraphic;

        $stack9 = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Shape getShape()>();

        $stack10 = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Paint getFillPaint()>();

        specialinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void <init>(java.awt.Shape,java.awt.Paint)>($stack9, $stack10);

        $stack11 = virtualinvoke item.<org.jfree.chart.LegendItem: org.jfree.chart.ui.GradientPaintTransformer getFillPaintTransformer()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setFillPaintTransformer(org.jfree.chart.ui.GradientPaintTransformer)>($stack11);

        $stack12 = virtualinvoke item.<org.jfree.chart.LegendItem: boolean isShapeFilled()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setShapeFilled(boolean)>($stack12);

        $stack13 = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Shape getLine()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setLine(java.awt.Shape)>($stack13);

        $stack14 = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Stroke getLineStroke()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setLineStroke(java.awt.Stroke)>($stack14);

        $stack15 = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Paint getLinePaint()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setLinePaint(java.awt.Paint)>($stack15);

        $stack16 = virtualinvoke item.<org.jfree.chart.LegendItem: boolean isLineVisible()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setLineVisible(boolean)>($stack16);

        $stack17 = virtualinvoke item.<org.jfree.chart.LegendItem: boolean isShapeVisible()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setShapeVisible(boolean)>($stack17);

        $stack18 = virtualinvoke item.<org.jfree.chart.LegendItem: boolean isShapeOutlineVisible()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setShapeOutlineVisible(boolean)>($stack18);

        $stack19 = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Paint getOutlinePaint()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setOutlinePaint(java.awt.Paint)>($stack19);

        $stack20 = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Stroke getOutlineStroke()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setOutlineStroke(java.awt.Stroke)>($stack20);

        $stack21 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleInsets legendItemGraphicPadding>;

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setPadding(org.jfree.chart.ui.RectangleInsets)>($stack21);

        $stack22 = new org.jfree.chart.title.LegendItemBlockContainer;

        $stack23 = new org.jfree.chart.block.BorderArrangement;

        specialinvoke $stack23.<org.jfree.chart.block.BorderArrangement: void <init>()>();

        $stack24 = virtualinvoke item.<org.jfree.chart.LegendItem: org.jfree.data.general.Dataset getDataset()>();

        $stack25 = virtualinvoke item.<org.jfree.chart.LegendItem: java.lang.Comparable getSeriesKey()>();

        specialinvoke $stack22.<org.jfree.chart.title.LegendItemBlockContainer: void <init>(org.jfree.chart.block.Arrangement,org.jfree.data.general.Dataset,java.lang.Comparable)>($stack23, $stack24, $stack25);

        $stack26 = virtualinvoke this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor getLegendItemGraphicAnchor()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setShapeAnchor(org.jfree.chart.ui.RectangleAnchor)>($stack26);

        $stack27 = virtualinvoke this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor getLegendItemGraphicLocation()>();

        virtualinvoke $stack8.<org.jfree.chart.title.LegendGraphic: void setShapeLocation(org.jfree.chart.ui.RectangleAnchor)>($stack27);

        $stack28 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleEdge legendItemGraphicEdge>;

        virtualinvoke $stack22.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block,java.lang.Object)>($stack8, $stack28);

        textFont = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Font getLabelFont()>();

        if textFont != null goto label1;

        textFont = this.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>;

     label1:
        textPaint = virtualinvoke item.<org.jfree.chart.LegendItem: java.awt.Paint getLabelPaint()>();

        if textPaint != null goto label2;

        textPaint = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>;

     label2:
        $stack31 = new org.jfree.chart.block.LabelBlock;

        $stack32 = virtualinvoke item.<org.jfree.chart.LegendItem: java.lang.String getLabel()>();

        specialinvoke $stack31.<org.jfree.chart.block.LabelBlock: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>($stack32, textFont, textPaint);

        $stack33 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleInsets itemLabelPadding>;

        virtualinvoke $stack31.<org.jfree.chart.block.LabelBlock: void setPadding(org.jfree.chart.ui.RectangleInsets)>($stack33);

        virtualinvoke $stack22.<org.jfree.chart.title.LegendItemBlockContainer: void add(org.jfree.chart.block.Block)>($stack31);

        $stack34 = virtualinvoke item.<org.jfree.chart.LegendItem: java.lang.String getToolTipText()>();

        virtualinvoke $stack22.<org.jfree.chart.title.LegendItemBlockContainer: void setToolTipText(java.lang.String)>($stack34);

        $stack35 = virtualinvoke item.<org.jfree.chart.LegendItem: java.lang.String getURLText()>();

        virtualinvoke $stack22.<org.jfree.chart.title.LegendItemBlockContainer: void setURLText(java.lang.String)>($stack35);

        $stack36 = new org.jfree.chart.block.BlockContainer;

        $stack37 = new org.jfree.chart.block.CenterArrangement;

        specialinvoke $stack37.<org.jfree.chart.block.CenterArrangement: void <init>()>();

        specialinvoke $stack36.<org.jfree.chart.block.BlockContainer: void <init>(org.jfree.chart.block.Arrangement)>($stack37);

        virtualinvoke $stack36.<org.jfree.chart.block.BlockContainer: void add(org.jfree.chart.block.Block)>($stack22);

        return $stack36;
    }

    public org.jfree.chart.block.BlockContainer getItemContainer()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.block.BlockContainer $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>;

        return $stack1;
    }

    public org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint)
    {
        org.jfree.chart.ui.Size2D $stack7, size;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.block.BlockContainer $stack8, container;
        boolean $stack9;
        org.jfree.chart.block.RectangleConstraint constraint, c;
        java.awt.Graphics2D g2;
        double $stack12, $stack13, $stack14, $stack15;

        this := @this: org.jfree.chart.title.LegendTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        constraint := @parameter1: org.jfree.chart.block.RectangleConstraint;

        $stack7 = new org.jfree.chart.ui.Size2D;

        specialinvoke $stack7.<org.jfree.chart.ui.Size2D: void <init>()>();

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: void fetchLegendItems()>();

        $stack8 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>;

        $stack9 = virtualinvoke $stack8.<org.jfree.chart.block.BlockContainer: boolean isEmpty()>();

        if $stack9 == 0 goto label1;

        return $stack7;

     label1:
        container = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>;

        if container != null goto label2;

        container = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>;

     label2:
        c = virtualinvoke this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.RectangleConstraint toContentConstraint(org.jfree.chart.block.RectangleConstraint)>(constraint);

        size = virtualinvoke container.<org.jfree.chart.block.BlockContainer: org.jfree.chart.ui.Size2D arrange(java.awt.Graphics2D,org.jfree.chart.block.RectangleConstraint)>(g2, c);

        $stack12 = size.<org.jfree.chart.ui.Size2D: double height>;

        $stack13 = virtualinvoke this.<org.jfree.chart.title.LegendTitle: double calculateTotalHeight(double)>($stack12);

        $stack7.<org.jfree.chart.ui.Size2D: double height> = $stack13;

        $stack14 = size.<org.jfree.chart.ui.Size2D: double width>;

        $stack15 = virtualinvoke this.<org.jfree.chart.title.LegendTitle: double calculateTotalWidth(double)>($stack14);

        $stack7.<org.jfree.chart.ui.Size2D: double width> = $stack15;

        return $stack7;
    }

    public void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.title.LegendTitle this;
        java.awt.Graphics2D g2;
        java.awt.geom.Rectangle2D area;

        this := @this: org.jfree.chart.title.LegendTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        virtualinvoke this.<org.jfree.chart.title.LegendTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(g2, area, null);

        return;
    }

    public java.lang.Object draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D, java.lang.Object)
    {
        java.awt.geom.Rectangle2D area, hotspot, target;
        java.lang.Object $stack11, $stack12, params, val;
        boolean $stack13, $stack20, $stack43;
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.block.BlockFrame border;
        java.awt.Graphics2D g2;
        org.jfree.chart.ui.RectangleInsets $stack17;
        org.jfree.chart.block.BlockResult $stack21, $stack24;
        org.jfree.chart.entity.EntityCollection ec;
        java.awt.Paint $stack32, $stack15;
        org.jfree.chart.block.EntityBlockParams $stack42;
        org.jfree.chart.entity.StandardEntityCollection $stack47, sec;
        org.jfree.chart.entity.TitleEntity $stack48;
        org.jfree.chart.block.BlockContainer container;

        this := @this: org.jfree.chart.title.LegendTitle;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        params := @parameter2: java.lang.Object;

        $stack11 = virtualinvoke area.<java.awt.geom.Rectangle2D: java.lang.Object clone()>();

        target = (java.awt.geom.Rectangle2D) $stack11;

        $stack12 = virtualinvoke area.<java.awt.geom.Rectangle2D: java.lang.Object clone()>();

        hotspot = (java.awt.geom.Rectangle2D) $stack12;

        sec = null;

        $stack13 = params instanceof org.jfree.chart.block.EntityBlockParams;

        if $stack13 == 0 goto label1;

        $stack42 = (org.jfree.chart.block.EntityBlockParams) params;

        $stack43 = interfaceinvoke $stack42.<org.jfree.chart.block.EntityBlockParams: boolean getGenerateEntities()>();

        if $stack43 == 0 goto label1;

        $stack47 = new org.jfree.chart.entity.StandardEntityCollection;

        specialinvoke $stack47.<org.jfree.chart.entity.StandardEntityCollection: void <init>()>();

        sec = $stack47;

        $stack48 = new org.jfree.chart.entity.TitleEntity;

        specialinvoke $stack48.<org.jfree.chart.entity.TitleEntity: void <init>(java.awt.Shape,org.jfree.chart.title.Title)>(hotspot, this);

        virtualinvoke $stack47.<org.jfree.chart.entity.StandardEntityCollection: void add(org.jfree.chart.entity.ChartEntity)>($stack48);

     label1:
        target = virtualinvoke this.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimMargin(java.awt.geom.Rectangle2D)>(target);

        $stack15 = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>;

        if $stack15 == null goto label2;

        $stack32 = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack32);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>(target);

     label2:
        border = virtualinvoke this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockFrame getFrame()>();

        interfaceinvoke border.<org.jfree.chart.block.BlockFrame: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D)>(g2, target);

        $stack17 = interfaceinvoke border.<org.jfree.chart.block.BlockFrame: org.jfree.chart.ui.RectangleInsets getInsets()>();

        virtualinvoke $stack17.<org.jfree.chart.ui.RectangleInsets: void trim(java.awt.geom.Rectangle2D)>(target);

        container = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>;

        if container != null goto label3;

        container = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer items>;

     label3:
        target = virtualinvoke this.<org.jfree.chart.title.LegendTitle: java.awt.geom.Rectangle2D trimPadding(java.awt.geom.Rectangle2D)>(target);

        val = virtualinvoke container.<org.jfree.chart.block.BlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>(g2, target, params);

        $stack20 = val instanceof org.jfree.chart.block.BlockResult;

        if $stack20 == 0 goto label4;

        $stack21 = (org.jfree.chart.block.BlockResult) val;

        ec = virtualinvoke $stack21.<org.jfree.chart.block.BlockResult: org.jfree.chart.entity.EntityCollection getEntityCollection()>();

        if ec == null goto label4;

        if sec == null goto label4;

        virtualinvoke sec.<org.jfree.chart.entity.StandardEntityCollection: void addAll(org.jfree.chart.entity.EntityCollection)>(ec);

        $stack24 = (org.jfree.chart.block.BlockResult) val;

        virtualinvoke $stack24.<org.jfree.chart.block.BlockResult: void setEntityCollection(org.jfree.chart.entity.EntityCollection)>(sec);

     label4:
        return val;
    }

    public org.jfree.chart.block.BlockContainer getWrapper()
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.block.BlockContainer $stack1;

        this := @this: org.jfree.chart.title.LegendTitle;

        $stack1 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper>;

        return $stack1;
    }

    public void setWrapper(org.jfree.chart.block.BlockContainer)
    {
        org.jfree.chart.title.LegendTitle this;
        org.jfree.chart.block.BlockContainer wrapper;

        this := @this: org.jfree.chart.title.LegendTitle;

        wrapper := @parameter0: org.jfree.chart.block.BlockContainer;

        this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.BlockContainer wrapper> = wrapper;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.title.LegendTitle this, that;
        boolean $stack3, $stack4, $stack7, $stack16, $stack19, $stack22, $stack25, $stack28;
        java.awt.Paint $stack5, $stack6, $stack17, $stack18;
        org.jfree.chart.ui.RectangleEdge $stack8, $stack9;
        org.jfree.chart.ui.RectangleAnchor $stack10, $stack11, $stack12, $stack13;
        java.awt.Font $stack14, $stack15;
        org.jfree.chart.block.Arrangement $stack20, $stack21, $stack23, $stack24;
        org.jfree.chart.util.SortOrder $stack26, $stack27;

        this := @this: org.jfree.chart.title.LegendTitle;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label01;

        return 1;

     label01:
        $stack3 = obj instanceof org.jfree.chart.title.LegendTitle;

        if $stack3 != 0 goto label02;

        return 0;

     label02:
        $stack4 = specialinvoke this.<org.jfree.chart.title.Title: boolean equals(java.lang.Object)>(obj);

        if $stack4 != 0 goto label03;

        return 0;

     label03:
        that = (org.jfree.chart.title.LegendTitle) obj;

        $stack6 = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>;

        $stack5 = that.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>;

        $stack7 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack6, $stack5);

        if $stack7 != 0 goto label04;

        return 0;

     label04:
        $stack9 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleEdge legendItemGraphicEdge>;

        $stack8 = that.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleEdge legendItemGraphicEdge>;

        if $stack9 == $stack8 goto label05;

        return 0;

     label05:
        $stack11 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicAnchor>;

        $stack10 = that.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicAnchor>;

        if $stack11 == $stack10 goto label06;

        return 0;

     label06:
        $stack13 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicLocation>;

        $stack12 = that.<org.jfree.chart.title.LegendTitle: org.jfree.chart.ui.RectangleAnchor legendItemGraphicLocation>;

        if $stack13 == $stack12 goto label07;

        return 0;

     label07:
        $stack15 = this.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>;

        $stack14 = that.<org.jfree.chart.title.LegendTitle: java.awt.Font itemFont>;

        $stack16 = virtualinvoke $stack15.<java.awt.Font: boolean equals(java.lang.Object)>($stack14);

        if $stack16 != 0 goto label08;

        return 0;

     label08:
        $stack18 = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>;

        $stack17 = that.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>;

        $stack19 = virtualinvoke $stack18.<java.lang.Object: boolean equals(java.lang.Object)>($stack17);

        if $stack19 != 0 goto label09;

        return 0;

     label09:
        $stack21 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>;

        $stack20 = that.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement hLayout>;

        $stack22 = virtualinvoke $stack21.<java.lang.Object: boolean equals(java.lang.Object)>($stack20);

        if $stack22 != 0 goto label10;

        return 0;

     label10:
        $stack24 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout>;

        $stack23 = that.<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Arrangement vLayout>;

        $stack25 = virtualinvoke $stack24.<java.lang.Object: boolean equals(java.lang.Object)>($stack23);

        if $stack25 != 0 goto label11;

        return 0;

     label11:
        $stack27 = this.<org.jfree.chart.title.LegendTitle: org.jfree.chart.util.SortOrder sortOrder>;

        $stack26 = that.<org.jfree.chart.title.LegendTitle: org.jfree.chart.util.SortOrder sortOrder>;

        $stack28 = virtualinvoke $stack27.<org.jfree.chart.util.SortOrder: boolean equals(java.lang.Object)>($stack26);

        if $stack28 != 0 goto label12;

        return 0;

     label12:
        return 1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.title.LegendTitle this;
        java.awt.Paint $stack2, $stack3;

        this := @this: org.jfree.chart.title.LegendTitle;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        $stack3 = this.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack3, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.title.LegendTitle this;
        java.awt.Paint $stack2, $stack3;

        this := @this: org.jfree.chart.title.LegendTitle;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendTitle: java.awt.Paint backgroundPaint> = $stack2;

        $stack3 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.title.LegendTitle: java.awt.Paint itemPaint> = $stack3;

        return;
    }

    static void <clinit>()
    {
        java.awt.Font $stack0;
        java.awt.Color $stack1;

        <org.jfree.chart.title.LegendTitle: long serialVersionUID> = 2644010518533854633L;

        $stack0 = new java.awt.Font;

        specialinvoke $stack0.<java.awt.Font: void <init>(java.lang.String,int,int)>("SansSerif", 0, 12);

        <org.jfree.chart.title.LegendTitle: java.awt.Font DEFAULT_ITEM_FONT> = $stack0;

        $stack1 = <java.awt.Color: java.awt.Color BLACK>;

        <org.jfree.chart.title.LegendTitle: java.awt.Paint DEFAULT_ITEM_PAINT> = $stack1;

        return;
    }
}
