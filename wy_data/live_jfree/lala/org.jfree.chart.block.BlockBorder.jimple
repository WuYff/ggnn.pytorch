public class org.jfree.chart.block.BlockBorder extends java.lang.Object implements org.jfree.chart.block.BlockFrame, java.io.Serializable
{
    private static final long serialVersionUID;
    public static final org.jfree.chart.block.BlockBorder NONE;
    private org.jfree.chart.ui.RectangleInsets insets;
    private transient java.awt.Paint paint;

    public void <init>()
    {
        org.jfree.chart.block.BlockBorder this;
        java.awt.Color $stack1;

        this := @this: org.jfree.chart.block.BlockBorder;

        $stack1 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke this.<org.jfree.chart.block.BlockBorder: void <init>(java.awt.Paint)>($stack1);

        return;
    }

    public void <init>(java.awt.Paint)
    {
        org.jfree.chart.block.BlockBorder this;
        org.jfree.chart.ui.RectangleInsets $stack2;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.block.BlockBorder;

        paint := @parameter0: java.awt.Paint;

        $stack2 = new org.jfree.chart.ui.RectangleInsets;

        specialinvoke $stack2.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(1.0, 1.0, 1.0, 1.0);

        specialinvoke this.<org.jfree.chart.block.BlockBorder: void <init>(org.jfree.chart.ui.RectangleInsets,java.awt.Paint)>($stack2, paint);

        return;
    }

    public void <init>(double, double, double, double)
    {
        org.jfree.chart.block.BlockBorder this;
        org.jfree.chart.ui.RectangleInsets $stack9;
        double top, left, bottom, right;
        java.awt.Color $stack10;

        this := @this: org.jfree.chart.block.BlockBorder;

        top := @parameter0: double;

        left := @parameter1: double;

        bottom := @parameter2: double;

        right := @parameter3: double;

        $stack9 = new org.jfree.chart.ui.RectangleInsets;

        specialinvoke $stack9.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(top, left, bottom, right);

        $stack10 = <java.awt.Color: java.awt.Color BLACK>;

        specialinvoke this.<org.jfree.chart.block.BlockBorder: void <init>(org.jfree.chart.ui.RectangleInsets,java.awt.Paint)>($stack9, $stack10);

        return;
    }

    public void <init>(double, double, double, double, java.awt.Paint)
    {
        org.jfree.chart.block.BlockBorder this;
        org.jfree.chart.ui.RectangleInsets $stack10;
        double top, left, bottom, right;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.block.BlockBorder;

        top := @parameter0: double;

        left := @parameter1: double;

        bottom := @parameter2: double;

        right := @parameter3: double;

        paint := @parameter4: java.awt.Paint;

        $stack10 = new org.jfree.chart.ui.RectangleInsets;

        specialinvoke $stack10.<org.jfree.chart.ui.RectangleInsets: void <init>(double,double,double,double)>(top, left, bottom, right);

        specialinvoke this.<org.jfree.chart.block.BlockBorder: void <init>(org.jfree.chart.ui.RectangleInsets,java.awt.Paint)>($stack10, paint);

        return;
    }

    public void <init>(org.jfree.chart.ui.RectangleInsets, java.awt.Paint)
    {
        org.jfree.chart.block.BlockBorder this;
        org.jfree.chart.ui.RectangleInsets insets;
        java.awt.Paint paint;

        this := @this: org.jfree.chart.block.BlockBorder;

        insets := @parameter0: org.jfree.chart.ui.RectangleInsets;

        paint := @parameter1: java.awt.Paint;

        specialinvoke this.<java.lang.Object: void <init>()>();

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(insets, "insets");

        staticinvoke <org.jfree.chart.util.Args: void nullNotPermitted(java.lang.Object,java.lang.String)>(paint, "paint");

        this.<org.jfree.chart.block.BlockBorder: org.jfree.chart.ui.RectangleInsets insets> = insets;

        this.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> = paint;

        return;
    }

    public org.jfree.chart.ui.RectangleInsets getInsets()
    {
        org.jfree.chart.block.BlockBorder this;
        org.jfree.chart.ui.RectangleInsets $stack1;

        this := @this: org.jfree.chart.block.BlockBorder;

        $stack1 = this.<org.jfree.chart.block.BlockBorder: org.jfree.chart.ui.RectangleInsets insets>;

        return $stack1;
    }

    public java.awt.Paint getPaint()
    {
        org.jfree.chart.block.BlockBorder this;
        java.awt.Paint $stack1;

        this := @this: org.jfree.chart.block.BlockBorder;

        $stack1 = this.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>;

        return $stack1;
    }

    public void draw(java.awt.Graphics2D, java.awt.geom.Rectangle2D)
    {
        org.jfree.chart.block.BlockBorder this;
        java.awt.geom.Rectangle2D area;
        org.jfree.chart.ui.RectangleInsets $stack20, $stack23, $stack26, $stack29;
        double $stack21, t, $stack24, b, $stack27, l, $stack30, r, x, y, w, h, $stack42, $stack43, $stack46, $stack47;
        java.awt.Graphics2D g2;
        java.awt.Paint $stack36;
        java.awt.geom.Rectangle2D$Double $stack37;
        byte $stack38, $stack39, $stack40, $stack41;

        this := @this: org.jfree.chart.block.BlockBorder;

        g2 := @parameter0: java.awt.Graphics2D;

        area := @parameter1: java.awt.geom.Rectangle2D;

        $stack20 = this.<org.jfree.chart.block.BlockBorder: org.jfree.chart.ui.RectangleInsets insets>;

        $stack21 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getHeight()>();

        t = virtualinvoke $stack20.<org.jfree.chart.ui.RectangleInsets: double calculateTopInset(double)>($stack21);

        $stack23 = this.<org.jfree.chart.block.BlockBorder: org.jfree.chart.ui.RectangleInsets insets>;

        $stack24 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getHeight()>();

        b = virtualinvoke $stack23.<org.jfree.chart.ui.RectangleInsets: double calculateBottomInset(double)>($stack24);

        $stack26 = this.<org.jfree.chart.block.BlockBorder: org.jfree.chart.ui.RectangleInsets insets>;

        $stack27 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getWidth()>();

        l = virtualinvoke $stack26.<org.jfree.chart.ui.RectangleInsets: double calculateLeftInset(double)>($stack27);

        $stack29 = this.<org.jfree.chart.block.BlockBorder: org.jfree.chart.ui.RectangleInsets insets>;

        $stack30 = virtualinvoke area.<java.awt.geom.Rectangle2D: double getWidth()>();

        r = virtualinvoke $stack29.<org.jfree.chart.ui.RectangleInsets: double calculateRightInset(double)>($stack30);

        x = virtualinvoke area.<java.awt.geom.Rectangle2D: double getX()>();

        y = virtualinvoke area.<java.awt.geom.Rectangle2D: double getY()>();

        w = virtualinvoke area.<java.awt.geom.Rectangle2D: double getWidth()>();

        h = virtualinvoke area.<java.awt.geom.Rectangle2D: double getHeight()>();

        $stack36 = this.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>;

        virtualinvoke g2.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($stack36);

        $stack37 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $stack37.<java.awt.geom.Rectangle2D$Double: void <init>()>();

        $stack38 = t cmpl 0.0;

        if $stack38 <= 0 goto label1;

        virtualinvoke $stack37.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>(x, y, w, t);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack37);

     label1:
        $stack39 = b cmpl 0.0;

        if $stack39 <= 0 goto label2;

        $stack46 = y + h;

        $stack47 = $stack46 - b;

        virtualinvoke $stack37.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>(x, $stack47, w, b);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack37);

     label2:
        $stack40 = l cmpl 0.0;

        if $stack40 <= 0 goto label3;

        virtualinvoke $stack37.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>(x, y, l, h);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack37);

     label3:
        $stack41 = r cmpl 0.0;

        if $stack41 <= 0 goto label4;

        $stack42 = x + w;

        $stack43 = $stack42 - r;

        virtualinvoke $stack37.<java.awt.geom.Rectangle2D: void setRect(double,double,double,double)>($stack43, y, r, h);

        virtualinvoke g2.<java.awt.Graphics2D: void fill(java.awt.Shape)>($stack37);

     label4:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        org.jfree.chart.block.BlockBorder this, that;
        boolean $stack3, $stack6, $stack9;
        org.jfree.chart.ui.RectangleInsets $stack4, $stack5;
        java.awt.Paint $stack7, $stack8;

        this := @this: org.jfree.chart.block.BlockBorder;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.jfree.chart.block.BlockBorder;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        that = (org.jfree.chart.block.BlockBorder) obj;

        $stack5 = this.<org.jfree.chart.block.BlockBorder: org.jfree.chart.ui.RectangleInsets insets>;

        $stack4 = that.<org.jfree.chart.block.BlockBorder: org.jfree.chart.ui.RectangleInsets insets>;

        $stack6 = virtualinvoke $stack5.<org.jfree.chart.ui.RectangleInsets: boolean equals(java.lang.Object)>($stack4);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack8 = this.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>;

        $stack7 = that.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>;

        $stack9 = staticinvoke <org.jfree.chart.util.PaintUtils: boolean equal(java.awt.Paint,java.awt.Paint)>($stack8, $stack7);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream stream;
        org.jfree.chart.block.BlockBorder this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.block.BlockBorder;

        stream := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke stream.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $stack2 = this.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint>;

        staticinvoke <org.jfree.chart.util.SerialUtils: void writePaint(java.awt.Paint,java.io.ObjectOutputStream)>($stack2, stream);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream stream;
        org.jfree.chart.block.BlockBorder this;
        java.awt.Paint $stack2;

        this := @this: org.jfree.chart.block.BlockBorder;

        stream := @parameter0: java.io.ObjectInputStream;

        virtualinvoke stream.<java.io.ObjectInputStream: void defaultReadObject()>();

        $stack2 = staticinvoke <org.jfree.chart.util.SerialUtils: java.awt.Paint readPaint(java.io.ObjectInputStream)>(stream);

        this.<org.jfree.chart.block.BlockBorder: java.awt.Paint paint> = $stack2;

        return;
    }

    static void <clinit>()
    {
        org.jfree.chart.block.BlockBorder $stack0;
        java.awt.Color $stack1;
        org.jfree.chart.ui.RectangleInsets $stack2;

        <org.jfree.chart.block.BlockBorder: long serialVersionUID> = 4961579220410228283L;

        $stack0 = new org.jfree.chart.block.BlockBorder;

        $stack2 = <org.jfree.chart.ui.RectangleInsets: org.jfree.chart.ui.RectangleInsets ZERO_INSETS>;

        $stack1 = <java.awt.Color: java.awt.Color WHITE>;

        specialinvoke $stack0.<org.jfree.chart.block.BlockBorder: void <init>(org.jfree.chart.ui.RectangleInsets,java.awt.Paint)>($stack2, $stack1);

        <org.jfree.chart.block.BlockBorder: org.jfree.chart.block.BlockBorder NONE> = $stack0;

        return;
    }
}
