public final enum class org.jsoup.Connection$Method extends java.lang.Enum
{
    public static final enum org.jsoup.Connection$Method GET;
    public static final enum org.jsoup.Connection$Method POST;
    public static final enum org.jsoup.Connection$Method PUT;
    public static final enum org.jsoup.Connection$Method DELETE;
    public static final enum org.jsoup.Connection$Method PATCH;
    public static final enum org.jsoup.Connection$Method HEAD;
    public static final enum org.jsoup.Connection$Method OPTIONS;
    public static final enum org.jsoup.Connection$Method TRACE;
    private final boolean hasBody;
    private static final org.jsoup.Connection$Method[] $VALUES;

    public static org.jsoup.Connection$Method[] values()
    {
        org.jsoup.Connection$Method[] $stack0, $stack2;
        java.lang.Object $stack1;

        $stack0 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method[] $VALUES>;

        $stack1 = virtualinvoke $stack0.<java.lang.Object: java.lang.Object clone()>();

        $stack2 = (org.jsoup.Connection$Method[]) $stack1;

        return $stack2;
    }

    public static org.jsoup.Connection$Method valueOf(java.lang.String)
    {
        java.lang.String name;
        java.lang.Enum $stack1;
        org.jsoup.Connection$Method $stack2;

        name := @parameter0: java.lang.String;

        $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/jsoup/Connection$Method;", name);

        $stack2 = (org.jsoup.Connection$Method) $stack1;

        return $stack2;
    }

    private void <init>(java.lang.String, int, boolean)
    {
        org.jsoup.Connection$Method this;
        java.lang.String l1;
        int l2;
        boolean hasBody;

        this := @this: org.jsoup.Connection$Method;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        hasBody := @parameter2: boolean;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        this.<org.jsoup.Connection$Method: boolean hasBody> = hasBody;

        return;
    }

    public final boolean hasBody()
    {
        org.jsoup.Connection$Method this;
        boolean $stack1;

        this := @this: org.jsoup.Connection$Method;

        $stack1 = this.<org.jsoup.Connection$Method: boolean hasBody>;

        return $stack1;
    }

    static void <clinit>()
    {
        org.jsoup.Connection$Method $stack0, $stack1, $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16;
        org.jsoup.Connection$Method[] $stack8;

        $stack0 = new org.jsoup.Connection$Method;

        specialinvoke $stack0.<org.jsoup.Connection$Method: void <init>(java.lang.String,int,boolean)>("GET", 0, 0);

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET> = $stack0;

        $stack1 = new org.jsoup.Connection$Method;

        specialinvoke $stack1.<org.jsoup.Connection$Method: void <init>(java.lang.String,int,boolean)>("POST", 1, 1);

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST> = $stack1;

        $stack2 = new org.jsoup.Connection$Method;

        specialinvoke $stack2.<org.jsoup.Connection$Method: void <init>(java.lang.String,int,boolean)>("PUT", 2, 1);

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method PUT> = $stack2;

        $stack3 = new org.jsoup.Connection$Method;

        specialinvoke $stack3.<org.jsoup.Connection$Method: void <init>(java.lang.String,int,boolean)>("DELETE", 3, 0);

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method DELETE> = $stack3;

        $stack4 = new org.jsoup.Connection$Method;

        specialinvoke $stack4.<org.jsoup.Connection$Method: void <init>(java.lang.String,int,boolean)>("PATCH", 4, 1);

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method PATCH> = $stack4;

        $stack5 = new org.jsoup.Connection$Method;

        specialinvoke $stack5.<org.jsoup.Connection$Method: void <init>(java.lang.String,int,boolean)>("HEAD", 5, 0);

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method HEAD> = $stack5;

        $stack6 = new org.jsoup.Connection$Method;

        specialinvoke $stack6.<org.jsoup.Connection$Method: void <init>(java.lang.String,int,boolean)>("OPTIONS", 6, 0);

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method OPTIONS> = $stack6;

        $stack7 = new org.jsoup.Connection$Method;

        specialinvoke $stack7.<org.jsoup.Connection$Method: void <init>(java.lang.String,int,boolean)>("TRACE", 7, 0);

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method TRACE> = $stack7;

        $stack8 = newarray (org.jsoup.Connection$Method)[8];

        $stack9 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;

        $stack8[0] = $stack9;

        $stack10 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;

        $stack8[1] = $stack10;

        $stack11 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method PUT>;

        $stack8[2] = $stack11;

        $stack12 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method DELETE>;

        $stack8[3] = $stack12;

        $stack13 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method PATCH>;

        $stack8[4] = $stack13;

        $stack14 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method HEAD>;

        $stack8[5] = $stack14;

        $stack15 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method OPTIONS>;

        $stack8[6] = $stack15;

        $stack16 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method TRACE>;

        $stack8[7] = $stack16;

        <org.jsoup.Connection$Method: org.jsoup.Connection$Method[] $VALUES> = $stack8;

        return;
    }
}
