class org.jsoup.select.Collector$Accumulator extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    private final org.jsoup.nodes.Element root;
    private final org.jsoup.select.Elements elements;
    private final org.jsoup.select.Evaluator eval;

    void <init>(org.jsoup.nodes.Element, org.jsoup.select.Elements, org.jsoup.select.Evaluator)
    {
        org.jsoup.select.Collector$Accumulator this;
        org.jsoup.nodes.Element root;
        org.jsoup.select.Elements elements;
        org.jsoup.select.Evaluator eval;

        this := @this: org.jsoup.select.Collector$Accumulator;

        root := @parameter0: org.jsoup.nodes.Element;

        elements := @parameter1: org.jsoup.select.Elements;

        eval := @parameter2: org.jsoup.select.Evaluator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jsoup.select.Collector$Accumulator: org.jsoup.nodes.Element root> = root;

        this.<org.jsoup.select.Collector$Accumulator: org.jsoup.select.Elements elements> = elements;

        this.<org.jsoup.select.Collector$Accumulator: org.jsoup.select.Evaluator eval> = eval;

        return;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node node;
        boolean $stack4, $stack7;
        org.jsoup.nodes.Element el, $stack5;
        org.jsoup.select.Collector$Accumulator this;
        org.jsoup.select.Evaluator $stack6;
        org.jsoup.select.Elements $stack8;
        int depth;

        this := @this: org.jsoup.select.Collector$Accumulator;

        node := @parameter0: org.jsoup.nodes.Node;

        depth := @parameter1: int;

        $stack4 = node instanceof org.jsoup.nodes.Element;

        if $stack4 == 0 goto label1;

        el = (org.jsoup.nodes.Element) node;

        $stack6 = this.<org.jsoup.select.Collector$Accumulator: org.jsoup.select.Evaluator eval>;

        $stack5 = this.<org.jsoup.select.Collector$Accumulator: org.jsoup.nodes.Element root>;

        $stack7 = virtualinvoke $stack6.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($stack5, el);

        if $stack7 == 0 goto label1;

        $stack8 = this.<org.jsoup.select.Collector$Accumulator: org.jsoup.select.Elements elements>;

        virtualinvoke $stack8.<org.jsoup.select.Elements: boolean add(java.lang.Object)>(el);

     label1:
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.select.Collector$Accumulator this;
        org.jsoup.nodes.Node node;
        int depth;

        this := @this: org.jsoup.select.Collector$Accumulator;

        node := @parameter0: org.jsoup.nodes.Node;

        depth := @parameter1: int;

        return;
    }
}
