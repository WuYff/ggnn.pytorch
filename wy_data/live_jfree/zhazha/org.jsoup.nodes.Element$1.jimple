class org.jsoup.nodes.Element$1 extends java.lang.Object implements org.jsoup.select.NodeVisitor
{
    final java.lang.StringBuilder val$accum;
    final org.jsoup.nodes.Element this$0;

    void <init>(org.jsoup.nodes.Element, java.lang.StringBuilder)
    {
        org.jsoup.nodes.Element$1 this;
        org.jsoup.nodes.Element this$0;
        java.lang.StringBuilder l2;

        this := @this: org.jsoup.nodes.Element$1;

        this$0 := @parameter0: org.jsoup.nodes.Element;

        l2 := @parameter1: java.lang.StringBuilder;

        this.<org.jsoup.nodes.Element$1: org.jsoup.nodes.Element this$0> = this$0;

        this.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum> = l2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node node;
        boolean $stack4, $stack5, $stack8, $stack10, $stack15;
        org.jsoup.nodes.Element$1 this;
        java.lang.StringBuilder $stack6, $stack9, $stack11, $stack17;
        int $stack7, depth;
        org.jsoup.parser.Tag $stack13;
        java.lang.String $stack14;
        org.jsoup.nodes.TextNode textNode;
        org.jsoup.nodes.Element textNode#2;

        this := @this: org.jsoup.nodes.Element$1;

        node := @parameter0: org.jsoup.nodes.Node;

        depth := @parameter1: int;

        $stack4 = node instanceof org.jsoup.nodes.TextNode;

        if $stack4 == 0 goto label1;

        textNode = (org.jsoup.nodes.TextNode) node;

        $stack17 = this.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        staticinvoke <org.jsoup.nodes.Element: void access$000(java.lang.StringBuilder,org.jsoup.nodes.TextNode)>($stack17, textNode);

        goto label3;

     label1:
        $stack5 = node instanceof org.jsoup.nodes.Element;

        if $stack5 == 0 goto label3;

        textNode#2 = (org.jsoup.nodes.Element) node;

        $stack6 = this.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: int length()>();

        if $stack7 <= 0 goto label3;

        $stack8 = virtualinvoke textNode#2.<org.jsoup.nodes.Element: boolean isBlock()>();

        if $stack8 != 0 goto label2;

        $stack13 = staticinvoke <org.jsoup.nodes.Element: org.jsoup.parser.Tag access$100(org.jsoup.nodes.Element)>(textNode#2);

        $stack14 = virtualinvoke $stack13.<org.jsoup.parser.Tag: java.lang.String getName()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("br");

        if $stack15 == 0 goto label3;

     label2:
        $stack9 = this.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        $stack10 = staticinvoke <org.jsoup.nodes.TextNode: boolean lastCharIsWhitespace(java.lang.StringBuilder)>($stack9);

        if $stack10 != 0 goto label3;

        $stack11 = this.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label3:
        return;
    }

    public void tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node node, $stack6;
        boolean $stack4, $stack5, $stack7, $stack9;
        org.jsoup.nodes.Element element;
        org.jsoup.nodes.Element$1 this;
        java.lang.StringBuilder $stack8, $stack10;
        int depth;

        this := @this: org.jsoup.nodes.Element$1;

        node := @parameter0: org.jsoup.nodes.Node;

        depth := @parameter1: int;

        $stack4 = node instanceof org.jsoup.nodes.Element;

        if $stack4 == 0 goto label1;

        element = (org.jsoup.nodes.Element) node;

        $stack5 = virtualinvoke element.<org.jsoup.nodes.Element: boolean isBlock()>();

        if $stack5 == 0 goto label1;

        $stack6 = virtualinvoke node.<org.jsoup.nodes.Node: org.jsoup.nodes.Node nextSibling()>();

        $stack7 = $stack6 instanceof org.jsoup.nodes.TextNode;

        if $stack7 == 0 goto label1;

        $stack8 = this.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        $stack9 = staticinvoke <org.jsoup.nodes.TextNode: boolean lastCharIsWhitespace(java.lang.StringBuilder)>($stack8);

        if $stack9 != 0 goto label1;

        $stack10 = this.<org.jsoup.nodes.Element$1: java.lang.StringBuilder val$accum>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label1:
        return;
    }
}
