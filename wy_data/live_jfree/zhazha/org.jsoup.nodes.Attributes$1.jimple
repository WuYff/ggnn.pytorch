class org.jsoup.nodes.Attributes$1 extends java.lang.Object implements java.util.Iterator
{
    int i;
    final org.jsoup.nodes.Attributes this$0;

    void <init>(org.jsoup.nodes.Attributes)
    {
        org.jsoup.nodes.Attributes$1 this;
        org.jsoup.nodes.Attributes this$0;

        this := @this: org.jsoup.nodes.Attributes$1;

        this$0 := @parameter0: org.jsoup.nodes.Attributes;

        this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jsoup.nodes.Attributes$1: int i> = 0;

        return;
    }

    public boolean hasNext()
    {
        org.jsoup.nodes.Attributes$1 this;
        org.jsoup.nodes.Attributes $stack1, $stack4, $stack8, $stack12;
        int $stack2, $stack3, $stack5, $stack6, $stack9, $stack16, $stack17;
        java.lang.String[] $stack10;
        java.lang.String $stack11;
        boolean $stack13, $stack7;

        this := @this: org.jsoup.nodes.Attributes$1;

     label1:
        $stack2 = this.<org.jsoup.nodes.Attributes$1: int i>;

        $stack1 = this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0>;

        $stack3 = staticinvoke <org.jsoup.nodes.Attributes: int access$000(org.jsoup.nodes.Attributes)>($stack1);

        if $stack2 >= $stack3 goto label2;

        $stack12 = this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0>;

        $stack8 = this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0>;

        $stack10 = $stack8.<org.jsoup.nodes.Attributes: java.lang.String[] keys>;

        $stack9 = this.<org.jsoup.nodes.Attributes$1: int i>;

        $stack11 = $stack10[$stack9];

        $stack13 = staticinvoke <org.jsoup.nodes.Attributes: boolean access$100(org.jsoup.nodes.Attributes,java.lang.String)>($stack12, $stack11);

        if $stack13 == 0 goto label2;

        $stack16 = this.<org.jsoup.nodes.Attributes$1: int i>;

        $stack17 = $stack16 + 1;

        this.<org.jsoup.nodes.Attributes$1: int i> = $stack17;

        goto label1;

     label2:
        $stack5 = this.<org.jsoup.nodes.Attributes$1: int i>;

        $stack4 = this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0>;

        $stack6 = staticinvoke <org.jsoup.nodes.Attributes: int access$000(org.jsoup.nodes.Attributes)>($stack4);

        if $stack5 >= $stack6 goto label3;

        $stack7 = 1;

        goto label4;

     label3:
        $stack7 = 0;

     label4:
        return $stack7;
    }

    public org.jsoup.nodes.Attribute next()
    {
        org.jsoup.nodes.Attribute $stack2;
        org.jsoup.nodes.Attributes$1 this;
        org.jsoup.nodes.Attributes $stack3, $stack6, $stack9;
        int $stack4, $stack7, $stack12, $stack13;
        java.lang.String[] $stack5, $stack8;
        java.lang.String $stack10, $stack11;

        this := @this: org.jsoup.nodes.Attributes$1;

        $stack2 = new org.jsoup.nodes.Attribute;

        $stack3 = this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0>;

        $stack5 = $stack3.<org.jsoup.nodes.Attributes: java.lang.String[] keys>;

        $stack4 = this.<org.jsoup.nodes.Attributes$1: int i>;

        $stack11 = $stack5[$stack4];

        $stack6 = this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0>;

        $stack8 = $stack6.<org.jsoup.nodes.Attributes: java.lang.String[] vals>;

        $stack7 = this.<org.jsoup.nodes.Attributes$1: int i>;

        $stack10 = $stack8[$stack7];

        $stack9 = this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0>;

        specialinvoke $stack2.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String,org.jsoup.nodes.Attributes)>($stack11, $stack10, $stack9);

        $stack12 = this.<org.jsoup.nodes.Attributes$1: int i>;

        $stack13 = $stack12 + 1;

        this.<org.jsoup.nodes.Attributes$1: int i> = $stack13;

        return $stack2;
    }

    public void remove()
    {
        org.jsoup.nodes.Attributes$1 this;
        int $stack1, $stack2;
        org.jsoup.nodes.Attributes $stack3;

        this := @this: org.jsoup.nodes.Attributes$1;

        $stack3 = this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attributes this$0>;

        $stack1 = this.<org.jsoup.nodes.Attributes$1: int i>;

        $stack2 = $stack1 - 1;

        this.<org.jsoup.nodes.Attributes$1: int i> = $stack2;

        staticinvoke <org.jsoup.nodes.Attributes: void access$200(org.jsoup.nodes.Attributes,int)>($stack3, $stack2);

        return;
    }

    public volatile java.lang.Object next()
    {
        org.jsoup.nodes.Attributes$1 this;
        org.jsoup.nodes.Attribute $stack1;

        this := @this: org.jsoup.nodes.Attributes$1;

        $stack1 = virtualinvoke this.<org.jsoup.nodes.Attributes$1: org.jsoup.nodes.Attribute next()>();

        return $stack1;
    }
}
