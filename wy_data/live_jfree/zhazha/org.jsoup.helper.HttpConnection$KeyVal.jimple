public class org.jsoup.helper.HttpConnection$KeyVal extends java.lang.Object implements org.jsoup.Connection$KeyVal
{
    private java.lang.String key;
    private java.lang.String value;
    private java.io.InputStream stream;
    private java.lang.String contentType;

    public static org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String, java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal $stack2, $stack3, $stack4;
        java.lang.String key, value;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $stack2 = new org.jsoup.helper.HttpConnection$KeyVal;

        specialinvoke $stack2.<org.jsoup.helper.HttpConnection$KeyVal: void <init>()>();

        $stack3 = virtualinvoke $stack2.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)>(key);

        $stack4 = virtualinvoke $stack3.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)>(value);

        return $stack4;
    }

    public static org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String, java.lang.String, java.io.InputStream)
    {
        org.jsoup.helper.HttpConnection$KeyVal $stack3, $stack4, $stack5, $stack6;
        java.lang.String key, filename;
        java.io.InputStream stream;

        key := @parameter0: java.lang.String;

        filename := @parameter1: java.lang.String;

        stream := @parameter2: java.io.InputStream;

        $stack3 = new org.jsoup.helper.HttpConnection$KeyVal;

        specialinvoke $stack3.<org.jsoup.helper.HttpConnection$KeyVal: void <init>()>();

        $stack4 = virtualinvoke $stack3.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)>(key);

        $stack5 = virtualinvoke $stack4.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)>(filename);

        $stack6 = virtualinvoke $stack5.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal inputStream(java.io.InputStream)>(stream);

        return $stack6;
    }

    private void <init>()
    {
        org.jsoup.helper.HttpConnection$KeyVal this;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)
    {
        java.lang.String key;
        org.jsoup.helper.HttpConnection$KeyVal this;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        key := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String,java.lang.String)>(key, "Data key must not be empty");

        this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key> = key;

        return this;
    }

    public java.lang.String key()
    {
        org.jsoup.helper.HttpConnection$KeyVal this;
        java.lang.String $stack1;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $stack1 = this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key>;

        return $stack1;
    }

    public org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)
    {
        java.lang.String value;
        org.jsoup.helper.HttpConnection$KeyVal this;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        value := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(value, "Data value must not be null");

        this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value> = value;

        return this;
    }

    public java.lang.String value()
    {
        org.jsoup.helper.HttpConnection$KeyVal this;
        java.lang.String $stack1;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $stack1 = this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value>;

        return $stack1;
    }

    public org.jsoup.helper.HttpConnection$KeyVal inputStream(java.io.InputStream)
    {
        org.jsoup.helper.HttpConnection$KeyVal this;
        java.lang.String $stack2;
        java.io.InputStream inputStream;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        inputStream := @parameter0: java.io.InputStream;

        $stack2 = this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value>;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>($stack2, "Data input stream must not be null");

        this.<org.jsoup.helper.HttpConnection$KeyVal: java.io.InputStream stream> = inputStream;

        return this;
    }

    public java.io.InputStream inputStream()
    {
        org.jsoup.helper.HttpConnection$KeyVal this;
        java.io.InputStream $stack1;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $stack1 = this.<org.jsoup.helper.HttpConnection$KeyVal: java.io.InputStream stream>;

        return $stack1;
    }

    public boolean hasInputStream()
    {
        org.jsoup.helper.HttpConnection$KeyVal this;
        java.io.InputStream $stack1;
        boolean $stack2;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $stack1 = this.<org.jsoup.helper.HttpConnection$KeyVal: java.io.InputStream stream>;

        if $stack1 == null goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    public org.jsoup.Connection$KeyVal contentType(java.lang.String)
    {
        java.lang.String contentType;
        org.jsoup.helper.HttpConnection$KeyVal this;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        contentType := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(contentType);

        this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String contentType> = contentType;

        return this;
    }

    public java.lang.String contentType()
    {
        org.jsoup.helper.HttpConnection$KeyVal this;
        java.lang.String $stack1;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $stack1 = this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String contentType>;

        return $stack1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack1, $stack3, $stack4, $stack6;
        org.jsoup.helper.HttpConnection$KeyVal this;
        java.lang.String $stack2, $stack5, $stack7;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        $stack1 = new java.lang.StringBuilder;

        specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>();

        $stack2 = this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String key>;

        $stack3 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack2);

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $stack5 = this.<org.jsoup.helper.HttpConnection$KeyVal: java.lang.String value>;

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    public volatile org.jsoup.Connection$KeyVal inputStream(java.io.InputStream)
    {
        org.jsoup.helper.HttpConnection$KeyVal this, $stack2;
        java.io.InputStream l1;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        l1 := @parameter0: java.io.InputStream;

        $stack2 = virtualinvoke this.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal inputStream(java.io.InputStream)>(l1);

        return $stack2;
    }

    public volatile org.jsoup.Connection$KeyVal value(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal this, $stack2;
        java.lang.String l1;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        l1 := @parameter0: java.lang.String;

        $stack2 = virtualinvoke this.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String)>(l1);

        return $stack2;
    }

    public volatile org.jsoup.Connection$KeyVal key(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$KeyVal this, $stack2;
        java.lang.String l1;

        this := @this: org.jsoup.helper.HttpConnection$KeyVal;

        l1 := @parameter0: java.lang.String;

        $stack2 = virtualinvoke this.<org.jsoup.helper.HttpConnection$KeyVal: org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String)>(l1);

        return $stack2;
    }
}
