class org.jsoup.select.Collector$FirstFinder extends java.lang.Object implements org.jsoup.select.NodeFilter
{
    private final org.jsoup.nodes.Element root;
    private org.jsoup.nodes.Element match;
    private final org.jsoup.select.Evaluator eval;

    void <init>(org.jsoup.nodes.Element, org.jsoup.select.Evaluator)
    {
        org.jsoup.select.Collector$FirstFinder this;
        org.jsoup.nodes.Element root;
        org.jsoup.select.Evaluator eval;

        this := @this: org.jsoup.select.Collector$FirstFinder;

        root := @parameter0: org.jsoup.nodes.Element;

        eval := @parameter1: org.jsoup.select.Evaluator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<org.jsoup.select.Collector$FirstFinder: org.jsoup.nodes.Element match> = null;

        this.<org.jsoup.select.Collector$FirstFinder: org.jsoup.nodes.Element root> = root;

        this.<org.jsoup.select.Collector$FirstFinder: org.jsoup.select.Evaluator eval> = eval;

        return;
    }

    public org.jsoup.select.NodeFilter$FilterResult head(org.jsoup.nodes.Node, int)
    {
        org.jsoup.nodes.Node node;
        boolean $stack4, $stack8;
        org.jsoup.select.NodeFilter$FilterResult $stack5, $stack9;
        org.jsoup.nodes.Element el, $stack6;
        org.jsoup.select.Collector$FirstFinder this;
        org.jsoup.select.Evaluator $stack7;
        int depth;

        this := @this: org.jsoup.select.Collector$FirstFinder;

        node := @parameter0: org.jsoup.nodes.Node;

        depth := @parameter1: int;

        $stack4 = node instanceof org.jsoup.nodes.Element;

        if $stack4 == 0 goto label1;

        el = (org.jsoup.nodes.Element) node;

        $stack7 = this.<org.jsoup.select.Collector$FirstFinder: org.jsoup.select.Evaluator eval>;

        $stack6 = this.<org.jsoup.select.Collector$FirstFinder: org.jsoup.nodes.Element root>;

        $stack8 = virtualinvoke $stack7.<org.jsoup.select.Evaluator: boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element)>($stack6, el);

        if $stack8 == 0 goto label1;

        this.<org.jsoup.select.Collector$FirstFinder: org.jsoup.nodes.Element match> = el;

        $stack9 = <org.jsoup.select.NodeFilter$FilterResult: org.jsoup.select.NodeFilter$FilterResult STOP>;

        return $stack9;

     label1:
        $stack5 = <org.jsoup.select.NodeFilter$FilterResult: org.jsoup.select.NodeFilter$FilterResult CONTINUE>;

        return $stack5;
    }

    public org.jsoup.select.NodeFilter$FilterResult tail(org.jsoup.nodes.Node, int)
    {
        org.jsoup.select.NodeFilter$FilterResult $stack3;
        org.jsoup.select.Collector$FirstFinder this;
        org.jsoup.nodes.Node node;
        int depth;

        this := @this: org.jsoup.select.Collector$FirstFinder;

        node := @parameter0: org.jsoup.nodes.Node;

        depth := @parameter1: int;

        $stack3 = <org.jsoup.select.NodeFilter$FilterResult: org.jsoup.select.NodeFilter$FilterResult CONTINUE>;

        return $stack3;
    }

    static org.jsoup.nodes.Element access$000(org.jsoup.select.Collector$FirstFinder)
    {
        org.jsoup.select.Collector$FirstFinder x0;
        org.jsoup.nodes.Element $stack1;

        x0 := @parameter0: org.jsoup.select.Collector$FirstFinder;

        $stack1 = x0.<org.jsoup.select.Collector$FirstFinder: org.jsoup.nodes.Element match>;

        return $stack1;
    }
}
