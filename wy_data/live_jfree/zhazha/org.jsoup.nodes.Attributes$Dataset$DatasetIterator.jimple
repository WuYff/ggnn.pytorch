class org.jsoup.nodes.Attributes$Dataset$DatasetIterator extends java.lang.Object implements java.util.Iterator
{
    private java.util.Iterator attrIter;
    private org.jsoup.nodes.Attribute attr;
    final org.jsoup.nodes.Attributes$Dataset this$0;

    private void <init>(org.jsoup.nodes.Attributes$Dataset)
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator this;
        org.jsoup.nodes.Attributes$Dataset l1, $stack2;
        org.jsoup.nodes.Attributes $stack3;
        java.util.Iterator $stack4;

        this := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;

        l1 := @parameter0: org.jsoup.nodes.Attributes$Dataset;

        this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attributes$Dataset this$0> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attributes$Dataset this$0>;

        $stack3 = staticinvoke <org.jsoup.nodes.Attributes$Dataset: org.jsoup.nodes.Attributes access$700(org.jsoup.nodes.Attributes$Dataset)>($stack2);

        $stack4 = virtualinvoke $stack3.<org.jsoup.nodes.Attributes: java.util.Iterator iterator()>();

        this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: java.util.Iterator attrIter> = $stack4;

        return;
    }

    public boolean hasNext()
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator this;
        java.util.Iterator $stack1, $stack3;
        boolean $stack2, $stack7;
        java.lang.Object $stack4;
        org.jsoup.nodes.Attribute $stack5, $stack6;

        this := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;

     label1:
        $stack1 = this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: java.util.Iterator attrIter>;

        $stack2 = interfaceinvoke $stack1.<java.util.Iterator: boolean hasNext()>();

        if $stack2 == 0 goto label2;

        $stack3 = this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: java.util.Iterator attrIter>;

        $stack4 = interfaceinvoke $stack3.<java.util.Iterator: java.lang.Object next()>();

        $stack5 = (org.jsoup.nodes.Attribute) $stack4;

        this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr> = $stack5;

        $stack6 = this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr>;

        $stack7 = virtualinvoke $stack6.<org.jsoup.nodes.Attribute: boolean isDataAttribute()>();

        if $stack7 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public java.util.Map$Entry next()
    {
        org.jsoup.nodes.Attribute $stack1, $stack2, $stack7;
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator this;
        java.lang.String $stack3, $stack4, $stack6, $stack8;
        int $stack5;

        this := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;

        $stack1 = new org.jsoup.nodes.Attribute;

        $stack2 = this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr>;

        $stack3 = virtualinvoke $stack2.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        $stack4 = "data-";

        $stack5 = virtualinvoke $stack4.<java.lang.String: int length()>();

        $stack6 = virtualinvoke $stack3.<java.lang.String: java.lang.String substring(int)>($stack5);

        $stack7 = this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr>;

        $stack8 = virtualinvoke $stack7.<org.jsoup.nodes.Attribute: java.lang.String getValue()>();

        specialinvoke $stack1.<org.jsoup.nodes.Attribute: void <init>(java.lang.String,java.lang.String)>($stack6, $stack8);

        return $stack1;
    }

    public void remove()
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator this;
        org.jsoup.nodes.Attributes$Dataset $stack1;
        org.jsoup.nodes.Attributes $stack2;
        org.jsoup.nodes.Attribute $stack3;
        java.lang.String $stack4;

        this := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;

        $stack1 = this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attributes$Dataset this$0>;

        $stack2 = staticinvoke <org.jsoup.nodes.Attributes$Dataset: org.jsoup.nodes.Attributes access$700(org.jsoup.nodes.Attributes$Dataset)>($stack1);

        $stack3 = this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: org.jsoup.nodes.Attribute attr>;

        $stack4 = virtualinvoke $stack3.<org.jsoup.nodes.Attribute: java.lang.String getKey()>();

        virtualinvoke $stack2.<org.jsoup.nodes.Attributes: void remove(java.lang.String)>($stack4);

        return;
    }

    public volatile java.lang.Object next()
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator this;
        java.util.Map$Entry $stack1;

        this := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;

        $stack1 = virtualinvoke this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: java.util.Map$Entry next()>();

        return $stack1;
    }

    void <init>(org.jsoup.nodes.Attributes$Dataset, org.jsoup.nodes.Attributes$1)
    {
        org.jsoup.nodes.Attributes$Dataset$DatasetIterator this;
        org.jsoup.nodes.Attributes$Dataset x0;
        org.jsoup.nodes.Attributes$1 x1;

        this := @this: org.jsoup.nodes.Attributes$Dataset$DatasetIterator;

        x0 := @parameter0: org.jsoup.nodes.Attributes$Dataset;

        x1 := @parameter1: org.jsoup.nodes.Attributes$1;

        specialinvoke this.<org.jsoup.nodes.Attributes$Dataset$DatasetIterator: void <init>(org.jsoup.nodes.Attributes$Dataset)>(x0);

        return;
    }
}
