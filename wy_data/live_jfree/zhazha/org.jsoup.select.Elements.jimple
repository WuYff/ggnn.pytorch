public class org.jsoup.select.Elements extends java.util.ArrayList
{

    public void <init>()
    {
        org.jsoup.select.Elements this;

        this := @this: org.jsoup.select.Elements;

        specialinvoke this.<java.util.ArrayList: void <init>()>();

        return;
    }

    public void <init>(int)
    {
        org.jsoup.select.Elements this;
        int initialCapacity;

        this := @this: org.jsoup.select.Elements;

        initialCapacity := @parameter0: int;

        specialinvoke this.<java.util.ArrayList: void <init>(int)>(initialCapacity);

        return;
    }

    public void <init>(java.util.Collection)
    {
        org.jsoup.select.Elements this;
        java.util.Collection elements;

        this := @this: org.jsoup.select.Elements;

        elements := @parameter0: java.util.Collection;

        specialinvoke this.<java.util.ArrayList: void <init>(java.util.Collection)>(elements);

        return;
    }

    public void <init>(java.util.List)
    {
        org.jsoup.select.Elements this;
        java.util.List elements;

        this := @this: org.jsoup.select.Elements;

        elements := @parameter0: java.util.List;

        specialinvoke this.<java.util.ArrayList: void <init>(java.util.Collection)>(elements);

        return;
    }

    public transient void <init>(org.jsoup.nodes.Element[])
    {
        org.jsoup.select.Elements this;
        org.jsoup.nodes.Element[] elements;
        java.util.List $stack2;

        this := @this: org.jsoup.select.Elements;

        elements := @parameter0: org.jsoup.nodes.Element[];

        $stack2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(elements);

        specialinvoke this.<java.util.ArrayList: void <init>(java.util.Collection)>($stack2);

        return;
    }

    public org.jsoup.select.Elements clone()
    {
        org.jsoup.select.Elements $stack4, this;
        int $stack5;
        java.util.Iterator l2;
        boolean $stack7;
        java.lang.Object $stack8;
        org.jsoup.nodes.Element e, $stack9;

        this := @this: org.jsoup.select.Elements;

        $stack4 = new org.jsoup.select.Elements;

        $stack5 = virtualinvoke this.<org.jsoup.select.Elements: int size()>();

        specialinvoke $stack4.<org.jsoup.select.Elements: void <init>(int)>($stack5);

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label2;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        e = (org.jsoup.nodes.Element) $stack8;

        $stack9 = virtualinvoke e.<org.jsoup.nodes.Element: org.jsoup.nodes.Element clone()>();

        virtualinvoke $stack4.<org.jsoup.select.Elements: boolean add(java.lang.Object)>($stack9);

        goto label1;

     label2:
        return $stack4;
    }

    public java.lang.String attr(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5, $stack7;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String attributeKey, $stack9;

        this := @this: org.jsoup.select.Elements;

        attributeKey := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label3;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        $stack7 = virtualinvoke element.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>(attributeKey);

        if $stack7 == 0 goto label2;

        $stack9 = virtualinvoke element.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>(attributeKey);

        return $stack9;

     label2:
        goto label1;

     label3:
        return "";
    }

    public boolean hasAttr(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5, $stack7;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String attributeKey;

        this := @this: org.jsoup.select.Elements;

        attributeKey := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label3;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        $stack7 = virtualinvoke element.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>(attributeKey);

        if $stack7 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.util.List eachAttr(java.lang.String)
    {
        java.util.ArrayList $stack5;
        org.jsoup.select.Elements this;
        int $stack6;
        java.util.Iterator l3;
        boolean $stack8, $stack10;
        java.lang.Object $stack9;
        org.jsoup.nodes.Element element;
        java.lang.String attributeKey, $stack12;

        this := @this: org.jsoup.select.Elements;

        attributeKey := @parameter0: java.lang.String;

        $stack5 = new java.util.ArrayList;

        $stack6 = virtualinvoke this.<org.jsoup.select.Elements: int size()>();

        specialinvoke $stack5.<java.util.ArrayList: void <init>(int)>($stack6);

        l3 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label3;

        $stack9 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack9;

        $stack10 = virtualinvoke element.<org.jsoup.nodes.Element: boolean hasAttr(java.lang.String)>(attributeKey);

        if $stack10 == 0 goto label2;

        $stack12 = virtualinvoke element.<org.jsoup.nodes.Element: java.lang.String attr(java.lang.String)>(attributeKey);

        interfaceinvoke $stack5.<java.util.List: boolean add(java.lang.Object)>($stack12);

     label2:
        goto label1;

     label3:
        return $stack5;
    }

    public org.jsoup.select.Elements attr(java.lang.String, java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l3;
        boolean $stack6;
        java.lang.Object $stack7;
        org.jsoup.nodes.Element element;
        java.lang.String attributeKey, attributeValue;

        this := @this: org.jsoup.select.Elements;

        attributeKey := @parameter0: java.lang.String;

        attributeValue := @parameter1: java.lang.String;

        l3 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        $stack7 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack7;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element attr(java.lang.String,java.lang.String)>(attributeKey, attributeValue);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements removeAttr(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String attributeKey;

        this := @this: org.jsoup.select.Elements;

        attributeKey := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element removeAttr(java.lang.String)>(attributeKey);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements addClass(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String className;

        this := @this: org.jsoup.select.Elements;

        className := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element addClass(java.lang.String)>(className);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements removeClass(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String className;

        this := @this: org.jsoup.select.Elements;

        className := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element removeClass(java.lang.String)>(className);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements toggleClass(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String className;

        this := @this: org.jsoup.select.Elements;

        className := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element toggleClass(java.lang.String)>(className);

        goto label1;

     label2:
        return this;
    }

    public boolean hasClass(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5, $stack7;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String className;

        this := @this: org.jsoup.select.Elements;

        className := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label3;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        $stack7 = virtualinvoke element.<org.jsoup.nodes.Element: boolean hasClass(java.lang.String)>(className);

        if $stack7 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.lang.String val()
    {
        org.jsoup.select.Elements this;
        int $stack1;
        org.jsoup.nodes.Element $stack2;
        java.lang.String $stack3;

        this := @this: org.jsoup.select.Elements;

        $stack1 = virtualinvoke this.<org.jsoup.select.Elements: int size()>();

        if $stack1 <= 0 goto label1;

        $stack2 = virtualinvoke this.<org.jsoup.select.Elements: org.jsoup.nodes.Element first()>();

        $stack3 = virtualinvoke $stack2.<org.jsoup.nodes.Element: java.lang.String val()>();

        return $stack3;

     label1:
        return "";
    }

    public org.jsoup.select.Elements val(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String value;

        this := @this: org.jsoup.select.Elements;

        value := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element val(java.lang.String)>(value);

        goto label1;

     label2:
        return this;
    }

    public java.lang.String text()
    {
        java.lang.StringBuilder sb;
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack6;
        java.lang.String $stack7, $stack10;
        java.lang.Object $stack8;
        org.jsoup.nodes.Element element;
        int $stack9;

        this := @this: org.jsoup.select.Elements;

        sb = staticinvoke <org.jsoup.internal.StringUtil: java.lang.StringBuilder borrowBuilder()>();

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label3;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack8;

        $stack9 = virtualinvoke sb.<java.lang.StringBuilder: int length()>();

        if $stack9 == 0 goto label2;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        $stack10 = virtualinvoke element.<org.jsoup.nodes.Element: java.lang.String text()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        goto label1;

     label3:
        $stack7 = staticinvoke <org.jsoup.internal.StringUtil: java.lang.String releaseBuilder(java.lang.StringBuilder)>(sb);

        return $stack7;
    }

    public boolean hasText()
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l1;
        boolean $stack4, $stack6;
        java.lang.Object $stack5;
        org.jsoup.nodes.Element element;

        this := @this: org.jsoup.select.Elements;

        l1 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack4 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack4 == 0 goto label3;

        $stack5 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack5;

        $stack6 = virtualinvoke element.<org.jsoup.nodes.Element: boolean hasText()>();

        if $stack6 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.util.List eachText()
    {
        java.util.ArrayList $stack4;
        org.jsoup.select.Elements this;
        int $stack5;
        java.util.Iterator l2;
        boolean $stack7, $stack9;
        java.lang.Object $stack8;
        org.jsoup.nodes.Element el;
        java.lang.String $stack11;

        this := @this: org.jsoup.select.Elements;

        $stack4 = new java.util.ArrayList;

        $stack5 = virtualinvoke this.<org.jsoup.select.Elements: int size()>();

        specialinvoke $stack4.<java.util.ArrayList: void <init>(int)>($stack5);

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        el = (org.jsoup.nodes.Element) $stack8;

        $stack9 = virtualinvoke el.<org.jsoup.nodes.Element: boolean hasText()>();

        if $stack9 == 0 goto label2;

        $stack11 = virtualinvoke el.<org.jsoup.nodes.Element: java.lang.String text()>();

        virtualinvoke $stack4.<java.util.ArrayList: boolean add(java.lang.Object)>($stack11);

     label2:
        goto label1;

     label3:
        return $stack4;
    }

    public java.lang.String html()
    {
        java.lang.StringBuilder sb;
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack6;
        java.lang.String $stack7, $stack10;
        java.lang.Object $stack8;
        org.jsoup.nodes.Element element;
        int $stack9;

        this := @this: org.jsoup.select.Elements;

        sb = staticinvoke <org.jsoup.internal.StringUtil: java.lang.StringBuilder borrowBuilder()>();

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label3;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack8;

        $stack9 = virtualinvoke sb.<java.lang.StringBuilder: int length()>();

        if $stack9 == 0 goto label2;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        $stack10 = virtualinvoke element.<org.jsoup.nodes.Element: java.lang.String html()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        goto label1;

     label3:
        $stack7 = staticinvoke <org.jsoup.internal.StringUtil: java.lang.String releaseBuilder(java.lang.StringBuilder)>(sb);

        return $stack7;
    }

    public java.lang.String outerHtml()
    {
        java.lang.StringBuilder sb;
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack6;
        java.lang.String $stack7, $stack10;
        java.lang.Object $stack8;
        org.jsoup.nodes.Element element;
        int $stack9;

        this := @this: org.jsoup.select.Elements;

        sb = staticinvoke <org.jsoup.internal.StringUtil: java.lang.StringBuilder borrowBuilder()>();

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label3;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack8;

        $stack9 = virtualinvoke sb.<java.lang.StringBuilder: int length()>();

        if $stack9 == 0 goto label2;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        $stack10 = virtualinvoke element.<org.jsoup.nodes.Element: java.lang.String outerHtml()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        goto label1;

     label3:
        $stack7 = staticinvoke <org.jsoup.internal.StringUtil: java.lang.String releaseBuilder(java.lang.StringBuilder)>(sb);

        return $stack7;
    }

    public java.lang.String toString()
    {
        org.jsoup.select.Elements this;
        java.lang.String $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = virtualinvoke this.<org.jsoup.select.Elements: java.lang.String outerHtml()>();

        return $stack1;
    }

    public org.jsoup.select.Elements tagName(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String tagName;

        this := @this: org.jsoup.select.Elements;

        tagName := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element tagName(java.lang.String)>(tagName);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements html(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String html;

        this := @this: org.jsoup.select.Elements;

        html := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element html(java.lang.String)>(html);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements prepend(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String html;

        this := @this: org.jsoup.select.Elements;

        html := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element prepend(java.lang.String)>(html);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements append(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String html;

        this := @this: org.jsoup.select.Elements;

        html := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element append(java.lang.String)>(html);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements before(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String html;

        this := @this: org.jsoup.select.Elements;

        html := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element before(java.lang.String)>(html);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements after(java.lang.String)
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;
        java.lang.String html;

        this := @this: org.jsoup.select.Elements;

        html := @parameter0: java.lang.String;

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element after(java.lang.String)>(html);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements wrap(java.lang.String)
    {
        java.lang.String html;
        org.jsoup.select.Elements this;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.jsoup.nodes.Element element;

        this := @this: org.jsoup.select.Elements;

        html := @parameter0: java.lang.String;

        staticinvoke <org.jsoup.helper.Validate: void notEmpty(java.lang.String)>(html);

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack6;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element wrap(java.lang.String)>(html);

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements unwrap()
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l1;
        boolean $stack4;
        java.lang.Object $stack5;
        org.jsoup.nodes.Element element;

        this := @this: org.jsoup.select.Elements;

        l1 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack4 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack4 == 0 goto label2;

        $stack5 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack5;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Node unwrap()>();

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements empty()
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l1;
        boolean $stack4;
        java.lang.Object $stack5;
        org.jsoup.nodes.Element element;

        this := @this: org.jsoup.select.Elements;

        l1 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack4 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack4 == 0 goto label2;

        $stack5 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack5;

        virtualinvoke element.<org.jsoup.nodes.Element: org.jsoup.nodes.Element empty()>();

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements remove()
    {
        org.jsoup.select.Elements this;
        java.util.Iterator l1;
        boolean $stack4;
        java.lang.Object $stack5;
        org.jsoup.nodes.Element element;

        this := @this: org.jsoup.select.Elements;

        l1 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack4 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack4 == 0 goto label2;

        $stack5 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        element = (org.jsoup.nodes.Element) $stack5;

        virtualinvoke element.<org.jsoup.nodes.Element: void remove()>();

        goto label1;

     label2:
        return this;
    }

    public org.jsoup.select.Elements select(java.lang.String)
    {
        java.lang.String query;
        org.jsoup.select.Elements this, $stack2;

        this := @this: org.jsoup.select.Elements;

        query := @parameter0: java.lang.String;

        $stack2 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable)>(query, this);

        return $stack2;
    }

    public org.jsoup.select.Elements not(java.lang.String)
    {
        java.lang.String query;
        org.jsoup.select.Elements this, out, $stack4;

        this := @this: org.jsoup.select.Elements;

        query := @parameter0: java.lang.String;

        out = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable)>(query, this);

        $stack4 = staticinvoke <org.jsoup.select.Selector: org.jsoup.select.Elements filterOut(java.util.Collection,java.util.Collection)>(this, out);

        return $stack4;
    }

    public org.jsoup.select.Elements eq(int)
    {
        org.jsoup.select.Elements this, $stack3;
        int $stack2, index;
        org.jsoup.nodes.Element[] $stack5;
        java.lang.Object $stack7;
        org.jsoup.nodes.Element $stack8;

        this := @this: org.jsoup.select.Elements;

        index := @parameter0: int;

        $stack2 = virtualinvoke this.<org.jsoup.select.Elements: int size()>();

        if $stack2 <= index goto label1;

        $stack3 = new org.jsoup.select.Elements;

        $stack5 = newarray (org.jsoup.nodes.Element)[1];

        $stack7 = virtualinvoke this.<org.jsoup.select.Elements: java.lang.Object get(int)>(index);

        $stack8 = (org.jsoup.nodes.Element) $stack7;

        $stack5[0] = $stack8;

        specialinvoke $stack3.<org.jsoup.select.Elements: void <init>(org.jsoup.nodes.Element[])>($stack5);

        goto label2;

     label1:
        $stack3 = new org.jsoup.select.Elements;

        specialinvoke $stack3.<org.jsoup.select.Elements: void <init>()>();

     label2:
        return $stack3;
    }

    public boolean is(java.lang.String)
    {
        java.lang.String query;
        org.jsoup.select.Evaluator eval;
        org.jsoup.select.Elements this;
        java.util.Iterator l3;
        boolean $stack7, $stack9;
        java.lang.Object $stack8;
        org.jsoup.nodes.Element e;

        this := @this: org.jsoup.select.Elements;

        query := @parameter0: java.lang.String;

        eval = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>(query);

        l3 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        e = (org.jsoup.nodes.Element) $stack8;

        $stack9 = virtualinvoke e.<org.jsoup.nodes.Element: boolean is(org.jsoup.select.Evaluator)>(eval);

        if $stack9 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public org.jsoup.select.Elements next()
    {
        org.jsoup.select.Elements this, $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = specialinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(null, 1, 0);

        return $stack1;
    }

    public org.jsoup.select.Elements next(java.lang.String)
    {
        org.jsoup.select.Elements this, $stack2;
        java.lang.String query;

        this := @this: org.jsoup.select.Elements;

        query := @parameter0: java.lang.String;

        $stack2 = specialinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(query, 1, 0);

        return $stack2;
    }

    public org.jsoup.select.Elements nextAll()
    {
        org.jsoup.select.Elements this, $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = specialinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(null, 1, 1);

        return $stack1;
    }

    public org.jsoup.select.Elements nextAll(java.lang.String)
    {
        org.jsoup.select.Elements this, $stack2;
        java.lang.String query;

        this := @this: org.jsoup.select.Elements;

        query := @parameter0: java.lang.String;

        $stack2 = specialinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(query, 1, 1);

        return $stack2;
    }

    public org.jsoup.select.Elements prev()
    {
        org.jsoup.select.Elements this, $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = specialinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(null, 0, 0);

        return $stack1;
    }

    public org.jsoup.select.Elements prev(java.lang.String)
    {
        org.jsoup.select.Elements this, $stack2;
        java.lang.String query;

        this := @this: org.jsoup.select.Elements;

        query := @parameter0: java.lang.String;

        $stack2 = specialinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(query, 0, 0);

        return $stack2;
    }

    public org.jsoup.select.Elements prevAll()
    {
        org.jsoup.select.Elements this, $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = specialinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(null, 0, 1);

        return $stack1;
    }

    public org.jsoup.select.Elements prevAll(java.lang.String)
    {
        org.jsoup.select.Elements this, $stack2;
        java.lang.String query;

        this := @this: org.jsoup.select.Elements;

        query := @parameter0: java.lang.String;

        $stack2 = specialinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements siblings(java.lang.String,boolean,boolean)>(query, 0, 1);

        return $stack2;
    }

    private org.jsoup.select.Elements siblings(java.lang.String, boolean, boolean)
    {
        org.jsoup.select.Elements $stack9, this;
        java.lang.String query;
        org.jsoup.select.Evaluator eval, $stack23;
        java.util.Iterator l6;
        java.lang.Object $stack12;
        boolean next, $stack14, all, $stack11;
        org.jsoup.nodes.Element sib, e, $stack13;

        this := @this: org.jsoup.select.Elements;

        query := @parameter0: java.lang.String;

        next := @parameter1: boolean;

        all := @parameter2: boolean;

        $stack9 = new org.jsoup.select.Elements;

        specialinvoke $stack9.<org.jsoup.select.Elements: void <init>()>();

        if query == null goto label01;

        $stack23 = staticinvoke <org.jsoup.select.QueryParser: org.jsoup.select.Evaluator parse(java.lang.String)>(query);

        goto label02;

     label01:
        $stack23 = null;

     label02:
        eval = $stack23;

        l6 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label03:
        $stack11 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label11;

        $stack12 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        e = (org.jsoup.nodes.Element) $stack12;

     label04:
        if next == 0 goto label05;

        $stack13 = virtualinvoke e.<org.jsoup.nodes.Element: org.jsoup.nodes.Element nextElementSibling()>();

        goto label06;

     label05:
        $stack13 = virtualinvoke e.<org.jsoup.nodes.Element: org.jsoup.nodes.Element previousElementSibling()>();

     label06:
        sib = $stack13;

        if $stack13 != null goto label07;

        goto label10;

     label07:
        if eval != null goto label08;

        virtualinvoke $stack9.<org.jsoup.select.Elements: boolean add(java.lang.Object)>($stack13);

        goto label09;

     label08:
        $stack14 = virtualinvoke $stack13.<org.jsoup.nodes.Element: boolean is(org.jsoup.select.Evaluator)>(eval);

        if $stack14 == 0 goto label09;

        virtualinvoke $stack9.<org.jsoup.select.Elements: boolean add(java.lang.Object)>($stack13);

     label09:
        e = sib;

        if all != 0 goto label04;

     label10:
        goto label03;

     label11:
        return $stack9;
    }

    public org.jsoup.select.Elements parents()
    {
        java.util.LinkedHashSet $stack4;
        org.jsoup.select.Elements this, $stack7, $stack9;
        java.util.Iterator l2;
        boolean $stack6;
        java.lang.Object $stack8;
        org.jsoup.nodes.Element e;

        this := @this: org.jsoup.select.Elements;

        $stack4 = new java.util.LinkedHashSet;

        specialinvoke $stack4.<java.util.LinkedHashSet: void <init>()>();

        l2 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        e = (org.jsoup.nodes.Element) $stack8;

        $stack9 = virtualinvoke e.<org.jsoup.nodes.Element: org.jsoup.select.Elements parents()>();

        virtualinvoke $stack4.<java.util.HashSet: boolean addAll(java.util.Collection)>($stack9);

        goto label1;

     label2:
        $stack7 = new org.jsoup.select.Elements;

        specialinvoke $stack7.<org.jsoup.select.Elements: void <init>(java.util.Collection)>($stack4);

        return $stack7;
    }

    public org.jsoup.nodes.Element first()
    {
        org.jsoup.select.Elements this;
        boolean $stack1;
        java.lang.Object $stack2;
        org.jsoup.nodes.Element $stack3;

        this := @this: org.jsoup.select.Elements;

        $stack1 = virtualinvoke this.<org.jsoup.select.Elements: boolean isEmpty()>();

        if $stack1 == 0 goto label1;

        $stack3 = null;

        goto label2;

     label1:
        $stack2 = virtualinvoke this.<org.jsoup.select.Elements: java.lang.Object get(int)>(0);

        $stack3 = (org.jsoup.nodes.Element) $stack2;

     label2:
        return $stack3;
    }

    public org.jsoup.nodes.Element last()
    {
        org.jsoup.select.Elements this;
        boolean $stack1;
        int $stack2, $stack3;
        java.lang.Object $stack4;
        org.jsoup.nodes.Element $stack5;

        this := @this: org.jsoup.select.Elements;

        $stack1 = virtualinvoke this.<org.jsoup.select.Elements: boolean isEmpty()>();

        if $stack1 == 0 goto label1;

        $stack5 = null;

        goto label2;

     label1:
        $stack2 = virtualinvoke this.<org.jsoup.select.Elements: int size()>();

        $stack3 = $stack2 - 1;

        $stack4 = virtualinvoke this.<org.jsoup.select.Elements: java.lang.Object get(int)>($stack3);

        $stack5 = (org.jsoup.nodes.Element) $stack4;

     label2:
        return $stack5;
    }

    public org.jsoup.select.Elements traverse(org.jsoup.select.NodeVisitor)
    {
        org.jsoup.select.NodeVisitor nodeVisitor;
        org.jsoup.select.Elements this;

        this := @this: org.jsoup.select.Elements;

        nodeVisitor := @parameter0: org.jsoup.select.NodeVisitor;

        staticinvoke <org.jsoup.select.NodeTraversor: void traverse(org.jsoup.select.NodeVisitor,org.jsoup.select.Elements)>(nodeVisitor, this);

        return this;
    }

    public org.jsoup.select.Elements filter(org.jsoup.select.NodeFilter)
    {
        org.jsoup.select.NodeFilter nodeFilter;
        org.jsoup.select.Elements this;

        this := @this: org.jsoup.select.Elements;

        nodeFilter := @parameter0: org.jsoup.select.NodeFilter;

        staticinvoke <org.jsoup.select.NodeTraversor: void filter(org.jsoup.select.NodeFilter,org.jsoup.select.Elements)>(nodeFilter, this);

        return this;
    }

    public java.util.List forms()
    {
        org.jsoup.select.Elements this;
        java.util.List $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = specialinvoke this.<org.jsoup.select.Elements: java.util.List nodesOfType(java.lang.Class)>(class "Lorg/jsoup/nodes/FormElement;");

        return $stack1;
    }

    public java.util.List comments()
    {
        org.jsoup.select.Elements this;
        java.util.List $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = specialinvoke this.<org.jsoup.select.Elements: java.util.List nodesOfType(java.lang.Class)>(class "Lorg/jsoup/nodes/Comment;");

        return $stack1;
    }

    public java.util.List textNodes()
    {
        org.jsoup.select.Elements this;
        java.util.List $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = specialinvoke this.<org.jsoup.select.Elements: java.util.List nodesOfType(java.lang.Class)>(class "Lorg/jsoup/nodes/TextNode;");

        return $stack1;
    }

    public java.util.List dataNodes()
    {
        org.jsoup.select.Elements this;
        java.util.List $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = specialinvoke this.<org.jsoup.select.Elements: java.util.List nodesOfType(java.lang.Class)>(class "Lorg/jsoup/nodes/DataNode;");

        return $stack1;
    }

    private java.util.List nodesOfType(java.lang.Class)
    {
        java.util.ArrayList $stack7;
        org.jsoup.select.Elements this;
        java.util.Iterator l3;
        boolean $stack9, $stack12, $stack14, $stack18;
        java.lang.Object $stack10, $stack21, $stack23;
        org.jsoup.nodes.Element el;
        java.lang.Class $stack11, tClass, $stack13;
        int $stack16, i;
        org.jsoup.nodes.Node node;

        this := @this: org.jsoup.select.Elements;

        tClass := @parameter0: java.lang.Class;

        $stack7 = new java.util.ArrayList;

        specialinvoke $stack7.<java.util.ArrayList: void <init>()>();

        l3 = virtualinvoke this.<org.jsoup.select.Elements: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label6;

        $stack10 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        el = (org.jsoup.nodes.Element) $stack10;

        $stack11 = virtualinvoke el.<java.lang.Object: java.lang.Class getClass()>();

        $stack12 = virtualinvoke $stack11.<java.lang.Class: boolean isInstance(java.lang.Object)>(tClass);

        if $stack12 == 0 goto label2;

        $stack23 = virtualinvoke tClass.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(el);

        virtualinvoke $stack7.<java.util.ArrayList: boolean add(java.lang.Object)>($stack23);

        goto label5;

     label2:
        $stack13 = class "Lorg/jsoup/nodes/Node;";

        $stack14 = virtualinvoke $stack13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(tClass);

        if $stack14 == 0 goto label5;

        i = 0;

     label3:
        $stack16 = virtualinvoke el.<org.jsoup.nodes.Element: int childNodeSize()>();

        if i >= $stack16 goto label5;

        node = virtualinvoke el.<org.jsoup.nodes.Element: org.jsoup.nodes.Node childNode(int)>(i);

        $stack18 = virtualinvoke tClass.<java.lang.Class: boolean isInstance(java.lang.Object)>(node);

        if $stack18 == 0 goto label4;

        $stack21 = virtualinvoke tClass.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(node);

        virtualinvoke $stack7.<java.util.ArrayList: boolean add(java.lang.Object)>($stack21);

     label4:
        i = i + 1;

        goto label3;

     label5:
        goto label1;

     label6:
        return $stack7;
    }

    public volatile java.lang.Object clone()
    {
        org.jsoup.select.Elements this, $stack1;

        this := @this: org.jsoup.select.Elements;

        $stack1 = virtualinvoke this.<org.jsoup.select.Elements: org.jsoup.select.Elements clone()>();

        return $stack1;
    }
}
