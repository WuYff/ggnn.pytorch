final enum class org.jsoup.parser.TokeniserState$13 extends org.jsoup.parser.TokeniserState
{

    void <init>(java.lang.String, int)
    {
        org.jsoup.parser.TokeniserState$13 this;
        java.lang.String l1;
        int l2;

        this := @this: org.jsoup.parser.TokeniserState$13;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<org.jsoup.parser.TokeniserState: void <init>(java.lang.String,int,org.jsoup.parser.TokeniserState$1)>(l1, l2, null);

        return;
    }

    void read(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.CharacterReader r;
        boolean $stack4, $stack6, $stack8, $stack10;
        org.jsoup.parser.Tokeniser t;
        org.jsoup.parser.TokeniserState$13 this;
        org.jsoup.parser.TokeniserState $stack7, $stack9, $stack11;
        org.jsoup.parser.Token$Tag $stack13;
        java.lang.StringBuilder $stack14;
        java.lang.String name;
        char name#2;

        this := @this: org.jsoup.parser.TokeniserState$13;

        t := @parameter0: org.jsoup.parser.Tokeniser;

        r := @parameter1: org.jsoup.parser.CharacterReader;

        $stack4 = virtualinvoke r.<org.jsoup.parser.CharacterReader: boolean matchesLetter()>();

        if $stack4 == 0 goto label1;

        name = virtualinvoke r.<org.jsoup.parser.CharacterReader: java.lang.String consumeLetterSequence()>();

        $stack13 = t.<org.jsoup.parser.Tokeniser: org.jsoup.parser.Token$Tag tagPending>;

        virtualinvoke $stack13.<org.jsoup.parser.Token$Tag: void appendTagName(java.lang.String)>(name);

        $stack14 = t.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;

        virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        return;

     label1:
        name#2 = virtualinvoke r.<org.jsoup.parser.CharacterReader: char consume()>();

        lookupswitch(name#2)
        {
            case 9: goto label2;
            case 10: goto label2;
            case 12: goto label2;
            case 13: goto label2;
            case 32: goto label2;
            case 47: goto label4;
            case 62: goto label6;
            default: goto label8;
        };

     label2:
        $stack10 = virtualinvoke t.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();

        if $stack10 == 0 goto label3;

        $stack11 = <org.jsoup.parser.TokeniserState$13: org.jsoup.parser.TokeniserState BeforeAttributeName>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($stack11);

        goto label9;

     label3:
        specialinvoke this.<org.jsoup.parser.TokeniserState$13: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(t, r);

        goto label9;

     label4:
        $stack8 = virtualinvoke t.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();

        if $stack8 == 0 goto label5;

        $stack9 = <org.jsoup.parser.TokeniserState$13: org.jsoup.parser.TokeniserState SelfClosingStartTag>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($stack9);

        goto label9;

     label5:
        specialinvoke this.<org.jsoup.parser.TokeniserState$13: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(t, r);

        goto label9;

     label6:
        $stack6 = virtualinvoke t.<org.jsoup.parser.Tokeniser: boolean isAppropriateEndTagToken()>();

        if $stack6 == 0 goto label7;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void emitTagPending()>();

        $stack7 = <org.jsoup.parser.TokeniserState$13: org.jsoup.parser.TokeniserState Data>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($stack7);

        goto label9;

     label7:
        specialinvoke this.<org.jsoup.parser.TokeniserState$13: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(t, r);

        goto label9;

     label8:
        specialinvoke this.<org.jsoup.parser.TokeniserState$13: void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader)>(t, r);

     label9:
        return;
    }

    private void anythingElse(org.jsoup.parser.Tokeniser, org.jsoup.parser.CharacterReader)
    {
        org.jsoup.parser.Tokeniser t;
        java.lang.StringBuilder $stack3;
        org.jsoup.parser.CharacterReader r;
        org.jsoup.parser.TokeniserState $stack4;
        org.jsoup.parser.TokeniserState$13 this;

        this := @this: org.jsoup.parser.TokeniserState$13;

        t := @parameter0: org.jsoup.parser.Tokeniser;

        r := @parameter1: org.jsoup.parser.CharacterReader;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void emit(java.lang.String)>("</");

        $stack3 = t.<org.jsoup.parser.Tokeniser: java.lang.StringBuilder dataBuffer>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void emit(java.lang.StringBuilder)>($stack3);

        virtualinvoke r.<org.jsoup.parser.CharacterReader: void unconsume()>();

        $stack4 = <org.jsoup.parser.TokeniserState$13: org.jsoup.parser.TokeniserState Rcdata>;

        virtualinvoke t.<org.jsoup.parser.Tokeniser: void transition(org.jsoup.parser.TokeniserState)>($stack4);

        return;
    }
}
